<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE niftoolsxml>
<niftoolsxml version="0.9.0.0">
    <!-- The versions found in use by the engine which have any amount of decoding or support from nif.xml
            NOTE: Hypothetical versions such as those used in version conditions must NOT receive version tags.

        id = "VX_X_X_X": The unique identifier for this version. Can be used to generate C-style enums, etc.
        num = "X.X.X.X": The numeric representation created by storing each part of the version in a byte.
            Example:  4.0.0.2 == 0x04000002
                     10.1.0.0 == 0x0A010000.
        supported = "<boolean>": False if the XML does not fully support reading of this version.
        user = "<List[integer]>": The custom User Version(s) for a specific Version from a game/developer.
            Note: Grouping multiple user in a list means that these user produce identical NIF layout.
            Example: user="12"
                     user="0x20000 0x30000"
        bsver = "<List[integer]>": The custom Bethesda Version(s) for a specific Version and User Version.
            Note: Grouping multiple bsver in a list means that these bsver produce identical NIF layout.
            Example: bsver="34"
                     bsver="30 31 32 33"
        custom = "<boolean>": True when version contains extensions to the format not originating from Gamebryo.
            Note: A user or bsver of non-zero implies custom="true" and is not necessary.
        ext = "<List[string]>": Any custom NIF extensions associated with this version.
            Example: ext="bto btr"

        Content: A comma-separated list of games which use this version.
            `{{}}` around a game name denotes that this version is the primary version for that game.
            A version without any `{{}}` names implies that this version is "secondary".
            Note: A unique game name should only have `{{}}` around it once.
    -->
    <version num="2.3">Dark Age of Camelot</version>
    <version num="3.0">Star Trek: Bridge Commander</version>
    <version num="3.03">Dark Age of Camelot</version>
    <version num="3.1">Dark Age of Camelot, Star Trek: Bridge Commander</version>
    <version num="3.3.0.13">Oblivion</version>
    <version num="4.0.0.0">Freedom Force</version>
    <version num="4.0.0.2">Morrowind, Freedom Force</version>
    <version num="4.1.0.12">Dark Age of Camelot</version>
    <version num="4.2.0.2">Civilization IV</version>
    <version num="4.2.1.0">Dark Age of Camelot, Civilization IV</version>
    <version num="4.2.2.0">Dark Age of Camelot, Civilization IV, Empire Earth II, Culpa Innata</version>
    <version num="10.0.1.0">Zoo Tycoon 2, Civilization IV, Oblivion</version>
    <version num="10.0.1.2">Oblivion</version>
    <version num="10.0.1.3">?</version>
    <version num="10.1.0.0">Dark Age of Camelot, Civilization IV, Freedom Force vs. the 3rd Reich, Axis and Allies, Kohan 2, Entropia Universe, Wildlife Park 2, The Guild 2, NeoSteam, Empire Earth II</version>
    <version num="10.1.0.101">Oblivion</version>
    <version num="10.1.0.106">Oblivion</version>
    <version num="10.2.0.0">Civilization IV, Oblivion, Loki, Pro Cycling Manager, Prison Tycoon, Red Ocean, Wildlife Park 2</version>
    <version num="10.2.0.1">Worldshift</version>
    <version num="10.4.0.1">Worldshift</version>
    <version num="20.0.0.4">Civilization IV, Oblivion, Sid Meier's Railroads</version>
    <version num="20.0.0.5">Oblivion</version>
    <version num="20.1.0.3">Megami Tensei: Imagine</version>
    <version num="20.2.0.7">Emerge, Empire Earth III, Fallout 3, Skyrim, Fallout 4</version>
    <version num="20.2.0.8">Emerge, Empire Earth III, Atlantica</version>
    <!-- version 20.3.0.1 is found in Props/GDCLargeContainer.nif-->
    <version num="20.3.0.1">Emerge</version>
    <!-- version 20.3.0.2 is found in PFX/fx_muzzle_flash_example.nif -->
    <version num="20.3.0.2">Emerge</version>
    <version num="20.3.0.3">Emerge</version>
    <version num="20.3.0.6">Emerge</version>
    <version num="20.3.0.9">Warhammer, Lazeska, Divinity 2, Howling Sword, Bully SE</version>
    <version num="20.5.0.0">KrazyRain</version>
    <version num="20.6.0.0">KrazyRain</version>
    <version num="20.6.5.0">Epic Mickey</version>
    <version num="30.0.0.2">Emerge</version>
    <version num="30.1.0.3">Rocksmith, Rocksmith 2014</version>
    <version num="30.2.0.3">Ghost In The Shell: First Assault, MapleStory 2</version>
<!--
    <version id="V2_3" num="2.3" supported="false">Dark Age of Camelot</version>
    <version id="V3_0" num="3.0" supported="false">Star Trek: Bridge Commander</version>
    <version id="V3_03" num="3.03" supported="false">Dark Age of Camelot</version>
    <version id="V3_1" num="3.1" supported="false">Dark Age of Camelot, Star Trek: Bridge Commander</version>
    <version id="V3_3_0_13" num="3.3.0.13">{{Munch's Oddysee}}, Oblivion</version>
    <version id="V4_0_0_0" num="4.0.0.0">Freedom Force</version>
    <version id="V4_0_0_2" num="4.0.0.2">{{Morrowind}}, {{Freedom Force}}</version>
    <version id="V4_1_0_12" num="4.1.0.12">Dark Age of Camelot</version>
    <version id="V4_2_0_2" num="4.2.0.2">Civilization IV</version>
    <version id="V4_2_1_0" num="4.2.1.0">Dark Age of Camelot, Civilization IV</version>
    <version id="V4_2_2_0" num="4.2.2.0">{{Culpa Innata}}, Civilization IV, Dark Age of Camelot, Empire Earth II</version>
    <version id="V10_0_1_0" num="10.0.1.0">{{Zoo Tycoon 2}}, Civilization IV, Oblivion</version>
    <version id="V10_0_1_2" num="10.0.1.2" bsver="1 3">Oblivion</version>
    <version id="V10_1_0_0" num="10.1.0.0">{{Freedom Force vs. the 3rd Reich}}, {{Axis and Allies}}, {{Empire Earth II}}, {{Kohan 2}}, {{Sid Meier's Pirates!}}, Dark Age of Camelot, Civilization IV, Wildlife Park 2, The Guild 2, NeoSteam</version>
    <version id="V10_1_0_101" num="10.1.0.101" user="10" bsver="4">Oblivion</version>
    <version id="V10_1_0_106" num="10.1.0.106" user="10" bsver="5">Oblivion</version>
    <version id="V10_2_0_0" num="10.2.0.0" user="0">{{Pro Cycling Manager}}, {{Prison Tycoon}}, {{Red Ocean}}, {{Wildlife Park 2}}, Civilization IV, Loki</version>
    <version id="V10_2_0_0__1" num="10.2.0.0" user="1">{{Blood Bowl}}</version>
    <version id="V10_2_0_0__10" num="10.2.0.0" user="10" bsver="6 7 8 9">Oblivion</version>
    <version id="V10_2_0_1" num="10.2.0.1" custom="true">WorldShift</version>
    <version id="V10_3_0_1" num="10.3.0.1" custom="true">WorldShift</version>
    <version id="V10_4_0_1" num="10.4.0.1" custom="true">{{WorldShift}}</version>
    <version id="V20_0_0_4" num="20.0.0.4" user="0">{{Civilization IV}}, {{Sid Meier's Railroads}}, Florensia, Ragnarok Online 2, IRIS Online</version>
    <version id="V20_0_0_4__10" num="20.0.0.4" user="10" bsver="11">{{Oblivion KF}}</version>
    <version id="V20_0_0_4__11" num="20.0.0.4" user="11" bsver="11">Fallout 3</version>
    <version id="V20_0_0_5_OBL" num="20.0.0.5" user="10" bsver="11">{{Oblivion}}</version>
    <version id="V20_1_0_3" num="20.1.0.3">{{Shin Megami Tensei: Imagine}}</version>
    <version id="V20_2_0_7" num="20.2.0.7" user="0">{{Florensia}}, Empire Earth III, Atlantica Online, IRIS Online, Wizard101</version>
    <version id="V20_2_0_7__11_1" num="20.2.0.7" user="11" bsver="14">Fallout 3, Fallout NV</version>
    <version id="V20_2_0_7__11_2" num="20.2.0.7" user="11" bsver="16" ext="rdt">Fallout 3</version>
    <version id="V20_2_0_7__11_3" num="20.2.0.7" user="11" bsver="21">Fallout 3, Fallout NV</version>
    <version id="V20_2_0_7__11_4" num="20.2.0.7" user="11" bsver="24">Fallout 3, Fallout NV</version>
    <version id="V20_2_0_7__11_5" num="20.2.0.7" user="11" bsver="25">Fallout 3, Fallout NV</version>
    <version id="V20_2_0_7__11_6" num="20.2.0.7" user="11" bsver="26">Fallout 3, Fallout NV</version>
    <version id="V20_2_0_7__11_7" num="20.2.0.7" user="11" bsver="27 28">Fallout 3, Fallout NV</version>
    <version id="V20_2_0_7__11_8" num="20.2.0.7" user="11" bsver="30 31 32 33">Fallout 3, Fallout NV</version>
    <version id="V20_2_0_7_FO3" num="20.2.0.7" user="11" bsver="34" ext="rdt">{{Fallout 3}}, {{Fallout NV}}</version>
    <version id="V20_2_0_7_SKY" num="20.2.0.7" user="12" bsver="83" ext="bto btr">{{Skyrim}}</version>
    <version id="V20_2_0_7_SSE" num="20.2.0.7" user="12" bsver="100" ext="bto btr">{{Skyrim SE}}</version>
    <version id="V20_2_0_7_FO4" num="20.2.0.7" user="12" bsver="130" ext="bto btr">{{Fallout 4}}</version>
    <version id="V20_2_0_7_F76" num="20.2.0.7" user="12" bsver="155" ext="bto">{{Fallout 76}}</version>
    <version id="V20_2_0_8" num="20.2.0.8" ext="nifcache">{{Empire Earth III}}, {{FFT Online}}, Atlantica Online, IRIS Online, Wizard101</version>
    <version id="V20_3_0_1" num="20.3.0.1">Emerge</version>
    <version id="V20_3_0_2" num="20.3.0.2">Emerge</version>
    <version id="V20_3_0_3" num="20.3.0.3">Emerge</version>
    <version id="V20_3_0_6" num="20.3.0.6">Emerge</version>
    <version id="V20_3_0_9" num="20.3.0.9" user="0 0x10000" ext="nft item">{{Bully SE}}, Warhammer, Lazeska, Howling Sword, Ragnarok Online 2, Divinity 2 (0x10000)</version>
    <version id="V20_3_0_9_DIV2" num="20.3.0.9" user="0x20000 0x30000" ext="item">{{Divinity 2}}</version>
    <version id="V20_5_0_0" num="20.5.0.0">MicroVolts, KrazyRain</version>
    <version id="V20_6_0_0" num="20.6.0.0">{{MicroVolts}}, {{IRIS Online}}, {{Ragnarok Online 2}}, KrazyRain, Atlantica Online, Wizard101</version>
    <version id="V20_6_5_0_DEM" num="20.6.5.0" user="17" supported="false">Epic Mickey 2</version>
    <version id="V30_0_0_2" num="30.0.0.2">Emerge</version>
    <version id="V30_1_0_1" num="30.1.0.1">Emerge</version>
    <version id="V30_1_0_3" num="30.1.0.3">Rocksmith, Rocksmith 2014</version>
    <version id="V30_2_0_3" num="30.2.0.3">Ghost In The Shell: First Assault, MapleStory 2</version>
-->

<!--
    <module name="NiMain" priority="0" />
    <module name="NiAnimation" priority="25" depends="NiMain" />
    <module name="NiParticle" priority="50" depends="NiMain NiAnimation" />
    <module name="NiMesh" priority="70" depends="NiMain NiAnimation" />
    <module name="NiPSParticle" priority="80" depends="NiMain NiMesh NiAnimation" />
    <module name="NiPhysX" priority="90" depends="NiMain NiMesh NiPSParticle" />
    <module name="NiLegacy" priority="99" depends="NiMain NiAnimation NiParticle" />
    <module name="BSMain" priority="100" depends="NiMain" custom="true" />
    <module name="BSAnimation" priority="125" depends="NiMain BSMain NiAnimation" custom="true" />
    <module name="BSParticle" priority="150" depends="NiMain NiParticle" custom="true" />
    <module name="BSHavok" priority="190" depends="NiMain" custom="true" />
    <module name="BSLegacy" priority="199" depends="NiMain NiLegacy" custom="true" />
    <module name="NiCustom" priority="255" depends="NiMain NiParticle" custom="true" />

    <token name="verexpr" attrs="vercond">
        Commonly used version expressions.
        NOTE: `string` should be wrapped in parentheses for string subsitutions in larger expressions.
        NOTE: BSVER 'Greater Than' Expressions only ever apply to BS i.e. BSVER GT 0.
        WARNING: BSVER 'Less Than' Expressions also apply to NI i.e. BSVER EQ 0.
        <verexpr token="#NISTREAM#" string="(#BSVER# #EQ# 0)">NiStream that are not Bethesda.</verexpr>
        <verexpr token="#BSSTREAM#" string="(#BSVER# #GT# 0)">NiStream that are Bethesda.</verexpr>
        <verexpr token="#NI_BS_LTE_16#" string="(#BSVER# #LTE# 16)">All NI + BS until BSVER 16.</verexpr>
        <verexpr token="#NI_BS_LT_FO3#" string="(#BSVER# #LT# 34)">All NI + BS before Fallout 3.</verexpr>
        <verexpr token="#NI_BS_LTE_FO3#" string="(#BSVER# #LTE# 34)">All NI + BS until Fallout 3.</verexpr>
        <verexpr token="#NI_BS_LT_SSE#" string="(#BSVER# #LT# 100)">All NI + BS before SSE.</verexpr>
        <verexpr token="#NI_BS_LT_FO4#" string="(#BSVER# #LT# 130)">All NI + BS before Fallout 4.</verexpr>
        <verexpr token="#NI_BS_LTE_FO4#" string="(#BSVER# #LTE# 130)">All NI + BS until Fallout 4.</verexpr>
        <verexpr token="#BS_GT_FO3#" string="(#BSVER# #GT# 34)">Skyrim, SSE, and Fallout 4</verexpr>
        <verexpr token="#BS_GTE_FO3#" string="(#BSVER# #GTE# 34)">FO3 and later.</verexpr>
        <verexpr token="#BS_GTE_SKY#" string="(#BSVER# #GTE# 83)">Skyrim and later.</verexpr>
        <verexpr token="#BS_GTE_SSE#" string="(#BSVER# #GTE# 100)">SSE and later.</verexpr>
        <verexpr token="#BS_SSE#" string="(#BSVER# #EQ# 100)">SSE only.</verexpr>
        <verexpr token="#BS_FO4#" string="(#BSVER# #EQ# 130)">Fallout 4 only.</verexpr>
        <verexpr token="#BS_GTE_FO4#" string="(#BSVER# #GTE# 130)">Fallout 4 and FO76.</verexpr>
        <verexpr token="#BS_F76#" string="(#BSVER# #EQ# 155)">Fallout 76 only.</verexpr>
        <verexpr token="#BS202#" string="((#VER# #EQ# 20.2.0.7) #AND# (#BSVER# #GT# 0))">Bethesda 20.2 only.</verexpr>
        <verexpr token="#DIVINITY2#" string="((#USER# #EQ# 0x20000) #OR# (#USER# #EQ# 0x30000))">Divinity 2</verexpr>
    </token>

    <token name="condexpr" attrs="cond">
        <condexpr token="#BSSTREAMHEADER#" string="(Version #EQ# 10.0.1.2) #OR# ((Version #EQ# 20.2.0.7) #OR# (Version #EQ# 20.0.0.5) #OR# ((Version #GTE# 10.1.0.0) #AND# (Version #LTE# 20.0.0.4) #AND# (User Version #LTE# 11))) #AND# (User Version #GTE# 3)" />
    </token>

    <token name="verset" attrs="versions">
        The set of versions that any Basic, Compound, NiObject, Enum, or Bitflags is restricted to.
        <verset token="#BETHESDA#" string="V10_0_1_2 V10_1_0_101 V10_1_0_106 V10_2_0_0__10 V20_0_0_4__10 V20_0_0_4__11 V20_0_0_5_OBL V20_2_0_7__11_1 V20_2_0_7__11_2 V20_2_0_7__11_3 V20_2_0_7__11_4 V20_2_0_7__11_5 V20_2_0_7__11_6 V20_2_0_7__11_7 V20_2_0_7__11_8 V20_2_0_7_FO3 V20_2_0_7_SKY V20_2_0_7_SSE V20_2_0_7_FO4 V20_2_0_7_F76" />
        <verset token="#FO3#" string="V20_0_0_4__11 V20_2_0_7__11_1 V20_2_0_7__11_2 V20_2_0_7__11_3 V20_2_0_7__11_4 V20_2_0_7__11_5 V20_2_0_7__11_6 V20_2_0_7__11_7 V20_2_0_7__11_8 V20_2_0_7_FO3" />
        <verset token="#SKY#" string="V20_2_0_7_SKY" />
        <verset token="#SSE#" string="V20_2_0_7_SSE" />
        <verset token="#FO4#" string="V20_2_0_7_FO4" />
        <verset token="#F76#" string="V20_2_0_7_F76" />
        <verset token="#FO3_AND_LATER#" string="V20_0_0_4__11 V20_2_0_7__11_1 V20_2_0_7__11_2 V20_2_0_7__11_3 V20_2_0_7__11_4 V20_2_0_7__11_5 V20_2_0_7__11_6 V20_2_0_7__11_7 V20_2_0_7__11_8 V20_2_0_7_FO3 V20_2_0_7_SKY V20_2_0_7_SSE V20_2_0_7_FO4 V20_2_0_7_F76" />
        <verset token="#SKY_AND_LATER#" string="V20_2_0_7_SKY V20_2_0_7_SSE V20_2_0_7_FO4 V20_2_0_7_F76" />
    </token>

    <token name="default" attrs="default">
        Commonly used default values.
        <default token="#UINT_MAX#" string="0xFFFFFFFF" />
        <default token="#USHRT_MAX#" string="0xFFFF" />
        <default token="#BYTE_MAX#" string="0xFF" />
        <default token="#INT_MAX#" string="2147483647" />
        <default token="#INT_MIN#" string="-2147483648" />
        <default token="#CHAR_MAX#" string="127" />
        <default token="#CHAR_MIN#" string="-128" />
        <default token="#VEC2_ONE#" string="1.0, 1.0" />
        <default token="#VEC3_ONE#" string="1.0, 1.0, 1.0" />
        <default token="#VEC3_ZERO#" string="0.0, 0.0, 0.0" />
        <default token="#VEC4_ONE#" string="1.0, 1.0, 1.0, 1.0" />
        <default token="#VEC4_ZERO#" string="0.0, 0.0, 0.0, 0.0" />
        <default token="#VEC4_1110#" string="1.0, 1.0, 1.0, 0.0" />
        <default token="#X_AXIS#" string="1.0, 0.0, 0.0" />
        <default token="#Y_AXIS#" string="0.0, 1.0, 0.0" />
        <default token="#Z_AXIS#" string="0.0, 0.0, 1.0" />
        <default token="#NEG_X_AXIS#" string="-1.0, 0.0, 0.0" />
        <default token="#NEG_Y_AXIS#" string="0.0, -1.0, 0.0" />
        <default token="#NEG_Z_AXIS#" string="0.0, 0.0, -1.0" />
        <default token="#FLT_MAX#" string="3.402823466e+38" />
        <default token="#FLT_MIN#" string="-3.402823466e+38" />
        <default token="#INV_FLT#" string="-3.402823466e+38" />
        <default token="#INV_VEC3#" string="-3.402823466e+38, -3.402823466e+38, -3.402823466e+38" />
        <default token="#INV_VEC4#" string="-3.402823466e+38, -3.402823466e+38, -3.402823466e+38, -3.402823466e+38" />
    </token>

    <token name="range" attrs="range">
        Commonly used range values.
        <range token="#F_POS#" string="0.0:" />
        <range token="#F_NEG#" string=":-0.0" />
        <range token="#F_PNZ#" string="0.000001:" />
        <range token="#F_NNZ#" string=":-0.000001" />
        <range token="#F_NRM#" string="-1.0:1.0" />
        <range token="#F_DEG#" string="-360.0:360.0" />
        <range token="#F0_1#" string="0.0:1.0" />
        <range token="#F0_PI#" string="0.0:3.1415926" />
        <range token="#F0_10#" string="0.0:10.0" />
        <range token="#F0_100#" string="0.0:100.0" />
        <range token="#F0_999#" string="0.0:999.0" />
        <range token="#F0_1000#" string="0.0:1000.0" />
        <range token="#F0_10000#" string="0.0:10000.0" />
        <range token="#FPM_1#" string="-1.0:1.0" />
        <range token="#FPM_PI#" string="-3.1415926:3.1415926" />
        <range token="#FPM_10#" string="-10.0:10.0" />
        <range token="#FPM_100#" string="-100.0:100.0" />
        <range token="#FPM_1000#" string="-1000.0:1000.0" />
    </token>

    <token name="global" attrs="vercond">
        Global Tokens.
        NOTE: These must be listed after the above tokens so that they replace last. For example, `verexpr` uses these tokens.
        <global token="#VER#" string="Version" />
        <global token="#USER#" string="User Version" />
        <global token="#BSVER#" string="BS Header\BS Version" />
    </token>

    <token name="operator" attrs="cond vercond arr1 arr2 arg">
        All Operators except for unary not (!), parentheses, and member of (\)
        NOTE: These can be ignored entirely by string substitution and dealt with directly.
        NOTE: These must be listed after the above tokens so that they replace last. For example, `verexpr` uses these tokens.
        <operator token="#ADD#" string="+" />
        <operator token="#SUB#" string="-" />
        <operator token="#MUL#" string="*" />
        <operator token="#DIV#" string="/" />
        <operator token="#AND#" string="&amp;&amp;" />
        <operator token="#OR#" string="||" />
        <operator token="#LT#" string="&lt;" />
        <operator token="#GT#" string="&gt;" />
        <operator token="#LTE#" string="&lt;=" />
        <operator token="#GTE#" string="&gt;=" />
        <operator token="#EQ#" string="==" />
        <operator token="#NEQ#" string="!=" />
        <operator token="#RSH#" string="&gt;&gt;" />
        <operator token="#LSH#" string="&lt;&lt;" />
        <operator token="#BITAND#" string="&amp;" />
        <operator token="#BITOR#" string="|" />
    </token>
-->

    <!--Basic Types-->

    <basic name="uint64" integral="true" countable="true" size="8">
        An unsigned 64-bit integer.
    </basic>

    <basic name="int64" integral="true" countable="false" size="8">
        A signed 64-bit integer.
    </basic>

    <basic name="ulittle32" count="1">
        A litte-endian unsigned 32-bit integer.
    </basic>

    <basic name="uint" count="1">
        An unsigned 32-bit integer.
    </basic>

    <basic name="int" count="1">
        A signed 32-bit integer.
    </basic>

    <basic name="ushort" count="1">
        An unsigned 16-bit integer.
    </basic>

    <basic name="short" count="1">
        A signed 16-bit integer.
    </basic>

    <basic name="char" count="0">
        An 8-bit character.
    </basic>

    <basic name="byte" count="1">
        An unsigned 8-bit integer.
    </basic>

    <basic name="bool" count="1">
        A boolean; 32-bit from 4.0.0.2, and 8-bit from 4.1.0.1 on.
    </basic>

    <basic name="BlockTypeIndex" count="0">
        A 16-bit (signed?) integer, which is used in the header to refer to a particular object type in a object type string array.
        The upper bit appears to be a flag used for PhysX block types.
    </basic>

    <basic name="FileVersion" count="0">
        A 32-bit integer that stores the version in hexadecimal format with each byte representing a number in the version string.

        Some widely-used versions and their hex representation:
        4.0.0.2:    0x04000002
        4.1.0.12:   0x0401000C
        4.2.0.2:    0x04020002
        4.2.1.0:    0x04020100
        4.2.2.0:    0x04020200
        10.0.1.0:   0x0A000100
        10.1.0.0:   0x0A010000
        10.2.0.0:   0x0A020000
        20.0.0.4:   0x14000004
        20.0.0.5:   0x14000005
    </basic>

    <basic name="Flags" count="0">
        A 16-bit integer, used for bit flags.  Function varies by object type.
    </basic>

    <basic name="float" count="0">
        A standard 32-bit floating point number.
    </basic>
    
    <basic name="hfloat" count="0">
        A 16-bit floating point number.
    </basic>
    
    <basic name="HeaderString" count="0">
        A variable length string that ends with a newline character (0x0A).  The string starts as follows depending on the version:

        Version &lt;= 10.0.1.0:  'NetImmerse File Format'
        Version &gt;= 10.1.0.0:  'Gamebryo File Format'
    </basic>

    <basic name="LineString" count="0">
        A variable length string that ends with a newline character (0x0A).
    </basic>

    <basic name="Ptr" count="0" istemplate="1">
        A signed 32-bit integer, referring to a object before this one in the hierarchy.  Examples:  Bones, gravity objects.
    </basic>

    <basic name="Ref" count="0" istemplate="1">
        A signed 32-bit integer, used to refer to another object; -1 means no reference. These should always point down the hierarchy. Other types are used for indexes that point to objects higher up.
    </basic>

    <basic name="StringOffset" count="0">
        A 32-bit unsigned integer, used to refer to strings in a NiStringPalette.
    </basic>

    <basic name="StringIndex" count="0"><!--Same as NiFixedString-->
        A 32-bit unsigned integer, used to refer to strings in the header.
    </basic>
    
    <!--Enumerations
        These are like C enums and consist of a list of options.  They can appear
        as parts of compounds or niobjects.-->

    <bitflags name="AccumFlags" storage="uint"><!--value is equivalant of bit from newer xml file-->
        Describes the options for the accum root on NiControllerSequence.
        <option value="0" name="ACCUM_X_TRANS">X Translation will be accumulated.</option>
        <option value="1" name="ACCUM_Y_TRANS">Y Translation will be accumulated.</option>
        <option value="2" name="ACCUM_Z_TRANS">Z Translation will be accumulated.</option>
        <option value="3" name="ACCUM_X_ROT">X Rotation will be accumulated.</option>
        <option value="4" name="ACCUM_Y_ROT">Y Rotation will be accumulated.</option>
        <option value="5" name="ACCUM_Z_ROT">Z Rotation will be accumulated.</option>
        <option value="6" name="ACCUM_X_FRONT">+X is front facing. (Default)</option>
        <option value="7" name="ACCUM_Y_FRONT">+Y is front facing.</option>
        <option value="8" name="ACCUM_Z_FRONT">+Z is front facing.</option>
        <option value="9" name="ACCUM_NEG_FRONT">-X is front facing.</option>
    </bitflags>

    <enum name="ApplyMode" storage="uint">
        Describes how the vertex colors are blended with the filtered texture color.
        <option value="0" name="APPLY_REPLACE">Replaces existing color</option>
        <option value="1" name="APPLY_DECAL">For placing images on the object like stickers.</option>
        <option value="2" name="APPLY_MODULATE">Modulates existing color. (Default)</option>
        <option value="3" name="APPLY_HILIGHT">PS2 Only.  Function Unknown.</option>
        <option value="4" name="APPLY_HILIGHT2">Parallax Flag in some Oblivion meshes.</option>
    </enum>

    <enum name="TexType" storage="uint">
        The type of texture.
        <option value="0" name="BASE_MAP">The basic texture used by most meshes.</option>
        <option value="1" name="DARK_MAP">Used to darken the model with false lighting.</option>
        <option value="2" name="DETAIL_MAP">Combined with base map for added detail.  Usually tiled over the mesh many times for close-up view.</option>
        <option value="3" name="GLOSS_MAP">Allows the specularity (glossyness) of an object to differ across its surface.</option>
        <option value="4" name="GLOW_MAP">Creates a glowing effect.  Basically an incandescence map.</option>
        <option value="5" name="BUMP_MAP">Used to make the object appear to have more detail than it really does.</option>
        <option value="6" name="NORMAL_MAP">Used to make the object appear to have more detail than it really does.</option>
        <option value="7" name="PARALLAX_MAP">Parallax map.</option>
        <option value="8" name="DECAL_0_MAP">For placing images on the object like stickers.</option>
        <option value="9" name="DECAL_1_MAP">For placing images on the object like stickers.</option>
        <option value="10" name="DECAL_2_MAP">For placing images on the object like stickers.</option>
        <option value="11" name="DECAL_3_MAP">For placing images on the object like stickers.</option>
    </enum>

    <enum name="KeyType" storage="uint">
        The type of animation interpolation (blending) that will be used on the associated key frames.
        <option value="1" name="LINEAR_KEY">Use linear interpolation.</option>
        <option value="2" name="QUADRATIC_KEY">Use quadratic interpolation.  Forward and back tangents will be stored.</option>
        <option value="3" name="TBC_KEY">Use Tension Bias Continuity interpolation.  Tension, bias, and continuity will be stored.</option>
        <option value="4" name="XYZ_ROTATION_KEY">For use only with rotation data.  Separate X, Y, and Z keys will be stored instead of using quaternions.</option>
        <option value="5" name="CONST_KEY">Step function. Used for visibility keys in NiBoolData.</option>
    </enum>

    <enum name="OblivionHavokMaterial" storage="uint"><!--versions="#BETHESDA#"-->
        Bethesda Havok. Material descriptor for a Havok shape in Oblivion.
        <option value="0" name="OB_HAV_MAT_STONE">Stone</option>
        <option value="1" name="OB_HAV_MAT_CLOTH">Cloth</option>
        <option value="2" name="OB_HAV_MAT_DIRT">Dirt</option>
        <option value="3" name="OB_HAV_MAT_GLASS">Glass</option>
        <option value="4" name="OB_HAV_MAT_GRASS">Grass</option>
        <option value="5" name="OB_HAV_MAT_METAL">Metal</option>
        <option value="6" name="OB_HAV_MAT_ORGANIC">Organic</option>
        <option value="7" name="OB_HAV_MAT_SKIN">Skin</option>
        <option value="8" name="OB_HAV_MAT_WATER">Water</option>
        <option value="9" name="OB_HAV_MAT_WOOD">Wood</option>
        <option value="10" name="OB_HAV_MAT_HEAVY_STONE">Heavy Stone</option>
        <option value="11" name="OB_HAV_MAT_HEAVY_METAL">Heavy Metal</option>
        <option value="12" name="OB_HAV_MAT_HEAVY_WOOD">Heavy Wood</option>
        <option value="13" name="OB_HAV_MAT_CHAIN">Chain</option>
        <option value="14" name="OB_HAV_MAT_SNOW">Snow</option>
        <option value="15" name="OB_HAV_MAT_STONE_STAIRS">Stone Stairs</option>
        <option value="16" name="OB_HAV_MAT_CLOTH_STAIRS">Cloth Stairs</option>
        <option value="17" name="OB_HAV_MAT_DIRT_STAIRS">Dirt Stairs</option>
        <option value="18" name="OB_HAV_MAT_GLASS_STAIRS">Glass Stairs</option>
        <option value="19" name="OB_HAV_MAT_GRASS_STAIRS">Grass Stairs</option>
        <option value="20" name="OB_HAV_MAT_METAL_STAIRS">Metal Stairs</option>
        <option value="21" name="OB_HAV_MAT_ORGANIC_STAIRS">Organic Stairs</option>
        <option value="22" name="OB_HAV_MAT_SKIN_STAIRS">Skin Stairs</option>
        <option value="23" name="OB_HAV_MAT_WATER_STAIRS">Water Stairs</option>
        <option value="24" name="OB_HAV_MAT_WOOD_STAIRS">Wood Stairs</option>
        <option value="25" name="OB_HAV_MAT_HEAVY_STONE_STAIRS">Heavy Stone Stairs</option>
        <option value="26" name="OB_HAV_MAT_HEAVY_METAL_STAIRS">Heavy Metal Stairs</option>
        <option value="27" name="OB_HAV_MAT_HEAVY_WOOD_STAIRS">Heavy Wood Stairs</option>
        <option value="28" name="OB_HAV_MAT_CHAIN_STAIRS">Chain Stairs</option>
        <option value="29" name="OB_HAV_MAT_SNOW_STAIRS">Snow Stairs</option>
        <option value="30" name="OB_HAV_MAT_ELEVATOR">Elevator</option>
        <option value="31" name="OB_HAV_MAT_RUBBER">Rubber</option>
    </enum>

    <enum name="Fallout3HavokMaterial" storage="uint"><!--versions="#BETHESDA#"-->
        Bethesda Havok. Material descriptor for a Havok shape in Fallout 3 and Fallout NV.
        <option value="0" name="FO_HAV_MAT_STONE">Stone</option>
        <option value="1" name="FO_HAV_MAT_CLOTH">Cloth</option>
        <option value="2" name="FO_HAV_MAT_DIRT">Dirt</option>
        <option value="3" name="FO_HAV_MAT_GLASS">Glass</option>
        <option value="4" name="FO_HAV_MAT_GRASS">Grass</option>
        <option value="5" name="FO_HAV_MAT_METAL">Metal</option>
        <option value="6" name="FO_HAV_MAT_ORGANIC">Organic</option>
        <option value="7" name="FO_HAV_MAT_SKIN">Skin</option>
        <option value="8" name="FO_HAV_MAT_WATER">Water</option>
        <option value="9" name="FO_HAV_MAT_WOOD">Wood</option>
        <option value="10" name="FO_HAV_MAT_HEAVY_STONE">Heavy Stone</option>
        <option value="11" name="FO_HAV_MAT_HEAVY_METAL">Heavy Metal</option>
        <option value="12" name="FO_HAV_MAT_HEAVY_WOOD">Heavy Wood</option>
        <option value="13" name="FO_HAV_MAT_CHAIN">Chain</option>
        <option value="14" name="FO_HAV_MAT_BOTTLECAP">Bottlecap</option>
        <option value="15" name="FO_HAV_MAT_ELEVATOR">Elevator</option>
        <option value="16" name="FO_HAV_MAT_HOLLOW_METAL">Hollow Metal</option>
        <option value="17" name="FO_HAV_MAT_SHEET_METAL">Sheet Metal</option>
        <option value="18" name="FO_HAV_MAT_SAND">Sand</option>
        <option value="19" name="FO_HAV_MAT_BROKEN_CONCRETE">Broken Concrete</option>
        <option value="20" name="FO_HAV_MAT_VEHICLE_BODY">Vehicle Body</option>
        <option value="21" name="FO_HAV_MAT_VEHICLE_PART_SOLID">Vehicle Part Solid</option>
        <option value="22" name="FO_HAV_MAT_VEHICLE_PART_HOLLOW">Vehicle Part Hollow</option>
        <option value="23" name="FO_HAV_MAT_BARREL">Barrel</option>
        <option value="24" name="FO_HAV_MAT_BOTTLE">Bottle</option>
        <option value="25" name="FO_HAV_MAT_SODA_CAN">Soda Can</option>
        <option value="26" name="FO_HAV_MAT_PISTOL">Pistol</option>
        <option value="27" name="FO_HAV_MAT_RIFLE">Rifle</option>
        <option value="28" name="FO_HAV_MAT_SHOPPING_CART">Shopping Cart</option>
        <option value="29" name="FO_HAV_MAT_LUNCHBOX">Lunchbox</option>
        <option value="30" name="FO_HAV_MAT_BABY_RATTLE">Baby Rattle</option>
        <option value="31" name="FO_HAV_MAT_RUBBER_BALL">Rubber Ball</option>
        <option value="32" name="FO_HAV_MAT_STONE_PLATFORM">Stone</option>
        <option value="33" name="FO_HAV_MAT_CLOTH_PLATFORM">Cloth</option>
        <option value="34" name="FO_HAV_MAT_DIRT_PLATFORM">Dirt</option>
        <option value="35" name="FO_HAV_MAT_GLASS_PLATFORM">Glass</option>
        <option value="36" name="FO_HAV_MAT_GRASS_PLATFORM">Grass</option>
        <option value="37" name="FO_HAV_MAT_METAL_PLATFORM">Metal</option>
        <option value="38" name="FO_HAV_MAT_ORGANIC_PLATFORM">Organic</option>
        <option value="39" name="FO_HAV_MAT_SKIN_PLATFORM">Skin</option>
        <option value="40" name="FO_HAV_MAT_WATER_PLATFORM">Water</option>
        <option value="41" name="FO_HAV_MAT_WOOD_PLATFORM">Wood</option>
        <option value="42" name="FO_HAV_MAT_HEAVY_STONE_PLATFORM">Heavy Stone</option>
        <option value="43" name="FO_HAV_MAT_HEAVY_METAL_PLATFORM">Heavy Metal</option>
        <option value="44" name="FO_HAV_MAT_HEAVY_WOOD_PLATFORM">Heavy Wood</option>
        <option value="45" name="FO_HAV_MAT_CHAIN_PLATFORM">Chain</option>
        <option value="46" name="FO_HAV_MAT_BOTTLECAP_PLATFORM">Bottlecap</option>
        <option value="47" name="FO_HAV_MAT_ELEVATOR_PLATFORM">Elevator</option>
        <option value="48" name="FO_HAV_MAT_HOLLOW_METAL_PLATFORM">Hollow Metal</option>
        <option value="49" name="FO_HAV_MAT_SHEET_METAL_PLATFORM">Sheet Metal</option>
        <option value="50" name="FO_HAV_MAT_SAND_PLATFORM">Sand</option>
        <option value="51" name="FO_HAV_MAT_BROKEN_CONCRETE_PLATFORM">Broken Concrete</option>
        <option value="52" name="FO_HAV_MAT_VEHICLE_BODY_PLATFORM">Vehicle Body</option>
        <option value="53" name="FO_HAV_MAT_VEHICLE_PART_SOLID_PLATFORM">Vehicle Part Solid</option>
        <option value="54" name="FO_HAV_MAT_VEHICLE_PART_HOLLOW_PLATFORM">Vehicle Part Hollow</option>
        <option value="55" name="FO_HAV_MAT_BARREL_PLATFORM">Barrel</option>
        <option value="56" name="FO_HAV_MAT_BOTTLE_PLATFORM">Bottle</option>
        <option value="57" name="FO_HAV_MAT_SODA_CAN_PLATFORM">Soda Can</option>
        <option value="58" name="FO_HAV_MAT_PISTOL_PLATFORM">Pistol</option>
        <option value="59" name="FO_HAV_MAT_RIFLE_PLATFORM">Rifle</option>
        <option value="60" name="FO_HAV_MAT_SHOPPING_CART_PLATFORM">Shopping Cart</option>
        <option value="61" name="FO_HAV_MAT_LUNCHBOX_PLATFORM">Lunchbox</option>
        <option value="62" name="FO_HAV_MAT_BABY_RATTLE_PLATFORM">Baby Rattle</option>
        <option value="63" name="FO_HAV_MAT_RUBBER_BALL_PLATFORM">Rubber Ball</option>
        <option value="64" name="FO_HAV_MAT_STONE_STAIRS">Stone</option>
        <option value="65" name="FO_HAV_MAT_CLOTH_STAIRS">Cloth</option>
        <option value="66" name="FO_HAV_MAT_DIRT_STAIRS">Dirt</option>
        <option value="67" name="FO_HAV_MAT_GLASS_STAIRS">Glass</option>
        <option value="68" name="FO_HAV_MAT_GRASS_STAIRS">Grass</option>
        <option value="69" name="FO_HAV_MAT_METAL_STAIRS">Metal</option>
        <option value="70" name="FO_HAV_MAT_ORGANIC_STAIRS">Organic</option>
        <option value="71" name="FO_HAV_MAT_SKIN_STAIRS">Skin</option>
        <option value="72" name="FO_HAV_MAT_WATER_STAIRS">Water</option>
        <option value="73" name="FO_HAV_MAT_WOOD_STAIRS">Wood</option>
        <option value="74" name="FO_HAV_MAT_HEAVY_STONE_STAIRS">Heavy Stone</option>
        <option value="75" name="FO_HAV_MAT_HEAVY_METAL_STAIRS">Heavy Metal</option>
        <option value="76" name="FO_HAV_MAT_HEAVY_WOOD_STAIRS">Heavy Wood</option>
        <option value="77" name="FO_HAV_MAT_CHAIN_STAIRS">Chain</option>
        <option value="78" name="FO_HAV_MAT_BOTTLECAP_STAIRS">Bottlecap</option>
        <option value="79" name="FO_HAV_MAT_ELEVATOR_STAIRS">Elevator</option>
        <option value="80" name="FO_HAV_MAT_HOLLOW_METAL_STAIRS">Hollow Metal</option>
        <option value="81" name="FO_HAV_MAT_SHEET_METAL_STAIRS">Sheet Metal</option>
        <option value="82" name="FO_HAV_MAT_SAND_STAIRS">Sand</option>
        <option value="83" name="FO_HAV_MAT_BROKEN_CONCRETE_STAIRS">Broken Concrete</option>
        <option value="84" name="FO_HAV_MAT_VEHICLE_BODY_STAIRS">Vehicle Body</option>
        <option value="85" name="FO_HAV_MAT_VEHICLE_PART_SOLID_STAIRS">Vehicle Part Solid</option>
        <option value="86" name="FO_HAV_MAT_VEHICLE_PART_HOLLOW_STAIRS">Vehicle Part Hollow</option>
        <option value="87" name="FO_HAV_MAT_BARREL_STAIRS">Barrel</option>
        <option value="88" name="FO_HAV_MAT_BOTTLE_STAIRS">Bottle</option>
        <option value="89" name="FO_HAV_MAT_SODA_CAN_STAIRS">Soda Can</option>
        <option value="90" name="FO_HAV_MAT_PISTOL_STAIRS">Pistol</option>
        <option value="91" name="FO_HAV_MAT_RIFLE_STAIRS">Rifle</option>
        <option value="92" name="FO_HAV_MAT_SHOPPING_CART_STAIRS">Shopping Cart</option>
        <option value="93" name="FO_HAV_MAT_LUNCHBOX_STAIRS">Lunchbox</option>
        <option value="94" name="FO_HAV_MAT_BABY_RATTLE_STAIRS">Baby Rattle</option>
        <option value="95" name="FO_HAV_MAT_RUBBER_BALL_STAIRS">Rubber Ball</option>
        <option value="96" name="FO_HAV_MAT_STONE_STAIRS_PLATFORM">Stone</option>
        <option value="97" name="FO_HAV_MAT_CLOTH_STAIRS_PLATFORM">Cloth</option>
        <option value="98" name="FO_HAV_MAT_DIRT_STAIRS_PLATFORM">Dirt</option>
        <option value="99" name="FO_HAV_MAT_GLASS_STAIRS_PLATFORM">Glass</option>
        <option value="100" name="FO_HAV_MAT_GRASS_STAIRS_PLATFORM">Grass</option>
        <option value="101" name="FO_HAV_MAT_METAL_STAIRS_PLATFORM">Metal</option>
        <option value="102" name="FO_HAV_MAT_ORGANIC_STAIRS_PLATFORM">Organic</option>
        <option value="103" name="FO_HAV_MAT_SKIN_STAIRS_PLATFORM">Skin</option>
        <option value="104" name="FO_HAV_MAT_WATER_STAIRS_PLATFORM">Water</option>
        <option value="105" name="FO_HAV_MAT_WOOD_STAIRS_PLATFORM">Wood</option>
        <option value="106" name="FO_HAV_MAT_HEAVY_STONE_STAIRS_PLATFORM">Heavy Stone</option>
        <option value="107" name="FO_HAV_MAT_HEAVY_METAL_STAIRS_PLATFORM">Heavy Metal</option>
        <option value="108" name="FO_HAV_MAT_HEAVY_WOOD_STAIRS_PLATFORM">Heavy Wood</option>
        <option value="109" name="FO_HAV_MAT_CHAIN_STAIRS_PLATFORM">Chain</option>
        <option value="110" name="FO_HAV_MAT_BOTTLECAP_STAIRS_PLATFORM">Bottlecap</option>
        <option value="111" name="FO_HAV_MAT_ELEVATOR_STAIRS_PLATFORM">Elevator</option>
        <option value="112" name="FO_HAV_MAT_HOLLOW_METAL_STAIRS_PLATFORM">Hollow Metal</option>
        <option value="113" name="FO_HAV_MAT_SHEET_METAL_STAIRS_PLATFORM">Sheet Metal</option>
        <option value="114" name="FO_HAV_MAT_SAND_STAIRS_PLATFORM">Sand</option>
        <option value="115" name="FO_HAV_MAT_BROKEN_CONCRETE_STAIRS_PLATFORM">Broken Concrete</option>
        <option value="116" name="FO_HAV_MAT_VEHICLE_BODY_STAIRS_PLATFORM">Vehicle Body</option>
        <option value="117" name="FO_HAV_MAT_VEHICLE_PART_SOLID_STAIRS_PLATFORM">Vehicle Part Solid</option>
        <option value="118" name="FO_HAV_MAT_VEHICLE_PART_HOLLOW_STAIRS_PLATFORM">Vehicle Part Hollow</option>
        <option value="119" name="FO_HAV_MAT_BARREL_STAIRS_PLATFORM">Barrel</option>
        <option value="120" name="FO_HAV_MAT_BOTTLE_STAIRS_PLATFORM">Bottle</option>
        <option value="121" name="FO_HAV_MAT_SODA_CAN_STAIRS_PLATFORM">Soda Can</option>
        <option value="122" name="FO_HAV_MAT_PISTOL_STAIRS_PLATFORM">Pistol</option>
        <option value="123" name="FO_HAV_MAT_RIFLE_STAIRS_PLATFORM">Rifle</option>
        <option value="124" name="FO_HAV_MAT_SHOPPING_CART_STAIRS_PLATFORM">Shopping Cart</option>
        <option value="125" name="FO_HAV_MAT_LUNCHBOX_STAIRS_PLATFORM">Lunchbox</option>
        <option value="126" name="FO_HAV_MAT_BABY_RATTLE_STAIRS_PLATFORM">Baby Rattle</option>
        <option value="127" name="FO_HAV_MAT_RUBBER_BALL_STAIRS_PLATFORM">Rubber Ball</option>
    </enum>

    <enum name="SkyrimHavokMaterial" storage="uint"><!--versions="#SKY_AND_LATER#"-->
        Bethesda Havok. Material descriptor for a Havok shape in Skyrim.
        <option value="131151687" name="SKY_HAV_MAT_BROKEN_STONE">Broken Stone</option>
        <option value="365420259" name="SKY_HAV_MAT_LIGHT_WOOD">Light Wood</option>
        <option value="398949039" name="SKY_HAV_MAT_SNOW">Snow</option>
        <option value="428587608" name="SKY_HAV_MAT_GRAVEL">Gravel</option>
        <option value="438912228" name="SKY_HAV_MAT_MATERIAL_CHAIN_METAL">Material Chain Metal</option>
        <option value="493553910" name="SKY_HAV_MAT_BOTTLE">Bottle</option>
        <option value="500811281" name="SKY_HAV_MAT_WOOD">Wood</option>
        <option value="591247106" name="SKY_HAV_MAT_SKIN">Skin</option>
        <option value="617099282" name="SKY_HAV_MAT_UNKNOWN_617099282">Unknown in Creation Kit v1.9.32.0. Found in Dawnguard DLC in meshes\dlc01\clutter\dlc01deerskin.nif.</option>
        <option value="732141076" name="SKY_HAV_MAT_BARREL">Barrel</option>
        <option value="781661019" name="SKY_HAV_MAT_MATERIAL_CERAMIC_MEDIUM">Material Ceramic Medium</option>
        <option value="790784366" name="SKY_HAV_MAT_MATERIAL_BASKET">Material Basket</option>
        <option value="873356572" name="SKY_HAV_MAT_ICE">Ice</option>
        <option value="899511101" name="SKY_HAV_MAT_STAIRS_STONE">Stairs Stone</option>
        <option value="1024582599" name="SKY_HAV_MAT_WATER">Water</option>
        <option value="1028101969" name="SKY_HAV_MAT_UNKNOWN_1028101969">Unknown in Creation Kit v1.6.89.0. Found in actors\draugr\character assets\skeletons.nif.</option>
        <option value="1060167844" name="SKY_HAV_MAT_MATERIAL_BLADE_1HAND">Material Blade 1 Hand</option>
        <option value="1264672850" name="SKY_HAV_MAT_MATERIAL_BOOK">Material Book</option>
        <option value="1286705471" name="SKY_HAV_MAT_MATERIAL_CARPET">Material Carpet</option>
        <option value="1288358971" name="SKY_HAV_MAT_SOLID_METAL">Solid Metal</option>
        <option value="1305674443" name="SKY_HAV_MAT_MATERIAL_AXE_1HAND">Material Axe 1Hand</option>
        <option value="1440721808" name="SKY_HAV_MAT_UNKNOWN_1440721808">Unknown in Creation Kit v1.6.89.0. Found in armor\draugr\draugrbootsfemale_go.nif or armor\amuletsandrings\amuletgnd.nif.</option>
        <option value="1461712277" name="SKY_HAV_MAT_STAIRS_WOOD">Stairs Wood</option>
        <option value="1486385281" name="SKY_HAV_MAT_MUD">Mud</option>
        <option value="1550912982" name="SKY_HAV_MAT_MATERIAL_BOULDER_SMALL">Material Boulder Small</option>
        <option value="1560365355" name="SKY_HAV_MAT_STAIRS_SNOW">Stairs Snow</option>
        <option value="1570821952" name="SKY_HAV_MAT_HEAVY_STONE">Heavy Stone</option>
        <option value="1574477864" name="SKY_HAV_MAT_UNKNOWN_1574477864">Unknown in Creation Kit v1.6.89.0. Found in actors\dragon\character assets\skeleton.nif.</option>
        <option value="1591009235" name="SKY_HAV_MAT_UNKNOWN_1591009235">Unknown in Creation Kit v1.6.89.0. Found in trap objects or clutter\displaycases\displaycaselgangled01.nif or actors\deer\character assets\skeleton.nif.</option>
        <option value="1607128641" name="SKY_HAV_MAT_MATERIAL_BOWS_STAVES">Material Bows Staves</option>
        <option value="1803571212" name="SKY_HAV_MAT_MATERIAL_WOOD_AS_STAIRS">Material Wood As Stairs</option>
        <option value="1848600814" name="SKY_HAV_MAT_GRASS">Grass</option>
        <option value="1885326971" name="SKY_HAV_MAT_MATERIAL_BOULDER_LARGE">Material Boulder Large</option>
        <option value="1886078335" name="SKY_HAV_MAT_MATERIAL_STONE_AS_STAIRS">Material Stone As Stairs</option>
        <option value="2022742644" name="SKY_HAV_MAT_MATERIAL_BLADE_2HAND">Material Blade 2Hand</option>
        <option value="2025794648" name="SKY_HAV_MAT_MATERIAL_BOTTLE_SMALL">Material Bottle Small</option>
        <option value="2168343821" name="SKY_HAV_MAT_SAND">Sand</option>
        <option value="2229413539" name="SKY_HAV_MAT_HEAVY_METAL">Heavy Metal</option>
        <option value="2290050264" name="SKY_HAV_MAT_UNKNOWN_2290050264">Unknown in Creation Kit v1.9.32.0. Found in Dawnguard DLC in meshes\dlc01\clutter\dlc01sabrecatpelt.nif.</option>
        <option value="2518321175" name="SKY_HAV_MAT_DRAGON">Dragon</option>
        <option value="2617944780" name="SKY_HAV_MAT_MATERIAL_BLADE_1HAND_SMALL">Material Blade 1Hand Small</option>
        <option value="2632367422" name="SKY_HAV_MAT_MATERIAL_SKIN_SMALL">Material Skin Small</option>
        <option value="2892392795" name="SKY_HAV_MAT_STAIRS_BROKEN_STONE">Stairs Broken Stone</option>
        <option value="2965929619" name="SKY_HAV_MAT_MATERIAL_SKIN_LARGE">Material Skin Large</option>
        <option value="2974920155" name="SKY_HAV_MAT_ORGANIC">Organic</option>
        <option value="3049421844" name="SKY_HAV_MAT_MATERIAL_BONE">Material Bone</option>
        <option value="3070783559" name="SKY_HAV_MAT_HEAVY_WOOD">Heavy Wood</option>
        <option value="3074114406" name="SKY_HAV_MAT_MATERIAL_CHAIN">Material Chain</option>
        <option value="3106094762" name="SKY_HAV_MAT_DIRT">Dirt</option>
        <option value="3424720541" name="SKY_HAV_MAT_MATERIAL_ARMOR_LIGHT">Material Armor Light</option>
        <option value="3448167928" name="SKY_HAV_MAT_MATERIAL_SHIELD_LIGHT">Material Shield Light</option>
        <option value="3589100606" name="SKY_HAV_MAT_MATERIAL_COIN">Material Coin</option>
        <option value="3702389584" name="SKY_HAV_MAT_MATERIAL_SHIELD_HEAVY">Material Shield Heavy</option>
        <option value="3708432437" name="SKY_HAV_MAT_MATERIAL_ARMOR_HEAVY">Material Armor Heavy</option>
        <option value="3725505938" name="SKY_HAV_MAT_MATERIAL_ARROW">Material Arrow</option>
        <option value="3739830338" name="SKY_HAV_MAT_GLASS">Glass</option>
        <option value="3741512247" name="SKY_HAV_MAT_STONE">Stone</option>
        <option value="3839073443" name="SKY_HAV_MAT_CLOTH">Cloth</option>
        <option value="3969592277" name="SKY_HAV_MAT_MATERIAL_BLUNT_2HAND">Material Blunt 2Hand</option>
        <option value="4239621792" name="SKY_HAV_MAT_UNKNOWN_4239621792">Unknown in Creation Kit v1.9.32.0. Found in Dawnguard DLC in meshes\dlc01\prototype\dlc1protoswingingbridge.nif.</option>
        <option value="4283869410" name="SKY_HAV_MAT_MATERIAL_BOULDER_MEDIUM">Material Boulder Medium</option>
    </enum>

    <enum name="OblivionLayer" storage="byte"><!--versions="#SKY_AND_LATER#"-->
        Bethesda Havok. Describes the collision layer a body belongs to in Oblivion.
        <option value="0" name="OL_UNIDENTIFIED">Unidentified (white)</option>
        <option value="1" name="OL_STATIC">Static (red)</option>
        <option value="2" name="OL_ANIM_STATIC">AnimStatic (magenta)</option>
        <option value="3" name="OL_TRANSPARENT">Transparent (light pink)</option>
        <option value="4" name="OL_CLUTTER">Clutter (light blue)</option>
        <option value="5" name="OL_WEAPON">Weapon (orange)</option>
        <option value="6" name="OL_PROJECTILE">Projectile (light orange)</option>
        <option value="7" name="OL_SPELL">Spell (cyan)</option>
        <option value="8" name="OL_BIPED">Biped (green) Seems to apply to all creatures/NPCs</option>
        <option value="9" name="OL_TREES">Trees (light brown)</option>
        <option value="10" name="OL_PROPS">Props (magenta)</option>
        <option value="11" name="OL_WATER">Water (cyan)</option>
        <option value="12" name="OL_TRIGGER">Trigger (light grey)</option>
        <option value="13" name="OL_TERRAIN">Terrain (light yellow)</option>
        <option value="14" name="OL_TRAP">Trap (light grey)</option>
        <option value="15" name="OL_NONCOLLIDABLE">NonCollidable (white)</option>
        <option value="16" name="OL_CLOUD_TRAP">CloudTrap (greenish grey)</option>
        <option value="17" name="OL_GROUND">Ground (none)</option>
        <option value="18" name="OL_PORTAL">Portal (green)</option>
        <option value="19" name="OL_STAIRS">Stairs (white)</option>
        <option value="20" name="OL_CHAR_CONTROLLER">CharController (yellow)</option>
        <option value="21" name="OL_AVOID_BOX">AvoidBox (dark yellow)</option>
        <option value="22" name="OL_UNKNOWN1">? (white)</option>
        <option value="23" name="OL_UNKNOWN2">? (white)</option>
        <option value="24" name="OL_CAMERA_PICK">CameraPick (white)</option>
        <option value="25" name="OL_ITEM_PICK">ItemPick (white)</option>
        <option value="26" name="OL_LINE_OF_SIGHT">LineOfSight (white)</option>
        <option value="27" name="OL_PATH_PICK">PathPick (white)</option>
        <option value="28" name="OL_CUSTOM_PICK_1">CustomPick1 (white)</option>
        <option value="29" name="OL_CUSTOM_PICK_2">CustomPick2 (white)</option>
        <option value="30" name="OL_SPELL_EXPLOSION">SpellExplosion (white)</option>
        <option value="31" name="OL_DROPPING_PICK">DroppingPick (white)</option>
        <option value="32" name="OL_OTHER">Other (white)</option>
        <option value="33" name="OL_HEAD">Head</option>
        <option value="34" name="OL_BODY">Body</option>
        <option value="35" name="OL_SPINE1">Spine1</option>
        <option value="36" name="OL_SPINE2">Spine2</option>
        <option value="37" name="OL_L_UPPER_ARM">LUpperArm</option>
        <option value="38" name="OL_L_FOREARM">LForeArm</option>
        <option value="39" name="OL_L_HAND">LHand</option>
        <option value="40" name="OL_L_THIGH">LThigh</option>
        <option value="41" name="OL_L_CALF">LCalf</option>
        <option value="42" name="OL_L_FOOT">LFoot</option>
        <option value="43" name="OL_R_UPPER_ARM">RUpperArm</option>
        <option value="44" name="OL_R_FOREARM">RForeArm</option>
        <option value="45" name="OL_R_HAND">RHand</option>
        <option value="46" name="OL_R_THIGH">RThigh</option>
        <option value="47" name="OL_R_CALF">RCalf</option>
        <option value="48" name="OL_R_FOOT">RFoot</option>
        <option value="49" name="OL_TAIL">Tail</option>
        <option value="50" name="OL_SIDE_WEAPON">SideWeapon</option>
        <option value="51" name="OL_SHIELD">Shield</option>
        <option value="52" name="OL_QUIVER">Quiver</option>
        <option value="53" name="OL_BACK_WEAPON">BackWeapon</option>
        <option value="54" name="OL_BACK_WEAPON2">BackWeapon (?)</option>
        <option value="55" name="OL_PONYTAIL">PonyTail</option>
        <option value="56" name="OL_WING">Wing</option>
        <option value="57" name="OL_NULL">Null</option>
    </enum>

    <enum name="Fallout3Layer" storage="byte"><!--versions="#BETHESDA#"-->
        Bethesda Havok. Describes the collision layer a body belongs to in Fallout 3 and Fallout NV.
        <option value="0" name="FOL_UNIDENTIFIED">Unidentified (white)</option>
        <option value="1" name="FOL_STATIC">Static (red)</option>
        <option value="2" name="FOL_ANIM_STATIC">AnimStatic (magenta)</option>
        <option value="3" name="FOL_TRANSPARENT">Transparent (light pink)</option>
        <option value="4" name="FOL_CLUTTER">Clutter (light blue)</option>
        <option value="5" name="FOL_WEAPON">Weapon (orange)</option>
        <option value="6" name="FOL_PROJECTILE">Projectile (light orange)</option>
        <option value="7" name="FOL_SPELL">Spell (cyan)</option>
        <option value="8" name="FOL_BIPED">Biped (green) Seems to apply to all creatures/NPCs</option>
        <option value="9" name="FOL_TREES">Trees (light brown)</option>
        <option value="10" name="FOL_PROPS">Props (magenta)</option>
        <option value="11" name="FOL_WATER">Water (cyan)</option>
        <option value="12" name="FOL_TRIGGER">Trigger (light grey)</option>
        <option value="13" name="FOL_TERRAIN">Terrain (light yellow)</option>
        <option value="14" name="FOL_TRAP">Trap (light grey)</option>
        <option value="15" name="FOL_NONCOLLIDABLE">NonCollidable (white)</option>
        <option value="16" name="FOL_CLOUD_TRAP">CloudTrap (greenish grey)</option>
        <option value="17" name="FOL_GROUND">Ground (none)</option>
        <option value="18" name="FOL_PORTAL">Portal (green)</option>
        <option value="19" name="FOL_DEBRIS_SMALL">DebrisSmall (white)</option>
        <option value="20" name="FOL_DEBRIS_LARGE">DebrisLarge (white)</option>
        <option value="21" name="FOL_ACOUSTIC_SPACE">AcousticSpace (white)</option>
        <option value="22" name="FOL_ACTORZONE">Actorzone (white)</option>
        <option value="23" name="FOL_PROJECTILEZONE">Projectilezone (white)</option>
        <option value="24" name="FOL_GASTRAP">GasTrap (yellowish green)</option>
        <option value="25" name="FOL_SHELLCASING">ShellCasing (white)</option>
        <option value="26" name="FOL_TRANSPARENT_SMALL">TransparentSmall (white)</option>
        <option value="27" name="FOL_INVISIBLE_WALL">InvisibleWall (white)</option>
        <option value="28" name="FOL_TRANSPARENT_SMALL_ANIM">TransparentSmallAnim (white)</option>
        <option value="29" name="FOL_DEADBIP">Dead Biped (green)</option>
        <option value="30" name="FOL_CHARCONTROLLER">CharController (yellow)</option>
        <option value="31" name="FOL_AVOIDBOX">Avoidbox (orange)</option>
        <option value="32" name="FOL_COLLISIONBOX">Collisionbox (white)</option>
        <option value="33" name="FOL_CAMERASPHERE">Camerasphere (white)</option>
        <option value="34" name="FOL_DOORDETECTION">Doordetection (white)</option>
        <option value="35" name="FOL_CAMERAPICK">Camerapick (white)</option>
        <option value="36" name="FOL_ITEMPICK">Itempick (white)</option>
        <option value="37" name="FOL_LINEOFSIGHT">LineOfSight (white)</option>
        <option value="38" name="FOL_PATHPICK">Pathpick (white)</option>
        <option value="39" name="FOL_CUSTOMPICK1">Custompick1 (white)</option>
        <option value="40" name="FOL_CUSTOMPICK2">Custompick2 (white)</option>
        <option value="41" name="FOL_SPELLEXPLOSION">SpellExplosion (white)</option>
        <option value="42" name="FOL_DROPPINGPICK">Droppingpick (white)</option>
        <option value="43" name="FOL_NULL">Null (white)</option>
    </enum>

    <enum name="SkyrimLayer" storage="byte"><!--versions="#SKY_AND_LATER#"-->
        Bethesda Havok. Describes the collision layer a body belongs to in Skyrim.
        <option value="0" name="SKYL_UNIDENTIFIED">Unidentified</option>
        <option value="1" name="SKYL_STATIC">Static</option>
        <option value="2" name="SKYL_ANIMSTATIC">Anim Static</option>
        <option value="3" name="SKYL_TRANSPARENT">Transparent</option>
        <option value="4" name="SKYL_CLUTTER">Clutter. Object with this layer will float on water surface.</option>
        <option value="5" name="SKYL_WEAPON">Weapon</option>
        <option value="6" name="SKYL_PROJECTILE">Projectile</option>
        <option value="7" name="SKYL_SPELL">Spell</option>
        <option value="8" name="SKYL_BIPED">Biped. Seems to apply to all creatures/NPCs</option>
        <option value="9" name="SKYL_TREES">Trees</option>
        <option value="10" name="SKYL_PROPS">Props</option>
        <option value="11" name="SKYL_WATER">Water</option>
        <option value="12" name="SKYL_TRIGGER">Trigger</option>
        <option value="13" name="SKYL_TERRAIN">Terrain</option>
        <option value="14" name="SKYL_TRAP">Trap</option>
        <option value="15" name="SKYL_NONCOLLIDABLE">NonCollidable</option>
        <option value="16" name="SKYL_CLOUD_TRAP">CloudTrap</option>
        <option value="17" name="SKYL_GROUND">Ground. It seems that produces no sound when collide.</option>
        <option value="18" name="SKYL_PORTAL">Portal</option>
        <option value="19" name="SKYL_DEBRIS_SMALL">Debris Small</option>
        <option value="20" name="SKYL_DEBRIS_LARGE">Debris Large</option>
        <option value="21" name="SKYL_ACOUSTIC_SPACE">Acoustic Space</option>
        <option value="22" name="SKYL_ACTORZONE">Actor Zone</option>
        <option value="23" name="SKYL_PROJECTILEZONE">Projectile Zone</option>
        <option value="24" name="SKYL_GASTRAP">Gas Trap</option>
        <option value="25" name="SKYL_SHELLCASING">Shell Casing</option>
        <option value="26" name="SKYL_TRANSPARENT_SMALL">Transparent Small</option>
        <option value="27" name="SKYL_INVISIBLE_WALL">Invisible Wall</option>
        <option value="28" name="SKYL_TRANSPARENT_SMALL_ANIM">Transparent Small Anim</option>
        <option value="29" name="SKYL_WARD">Ward</option>
        <option value="30" name="SKYL_CHARCONTROLLER">Char Controller</option>
        <option value="31" name="SKYL_STAIRHELPER">Stair Helper</option>
        <option value="32" name="SKYL_DEADBIP">Dead Bip</option>
        <option value="33" name="SKYL_BIPED_NO_CC">Biped No CC</option>
        <option value="34" name="SKYL_AVOIDBOX">Avoid Box</option>
        <option value="35" name="SKYL_COLLISIONBOX">Collision Box</option>
        <option value="36" name="SKYL_CAMERASHPERE">Camera Sphere</option>
        <option value="37" name="SKYL_DOORDETECTION">Door Detection</option>
        <option value="38" name="SKYL_CONEPROJECTILE">Cone Projectile</option>
        <option value="39" name="SKYL_CAMERAPICK">Camera Pick</option>
        <option value="40" name="SKYL_ITEMPICK">Item Pick</option>
        <option value="41" name="SKYL_LINEOFSIGHT">Line of Sight</option>
        <option value="42" name="SKYL_PATHPICK">Path Pick</option>
        <option value="43" name="SKYL_CUSTOMPICK1">Custom Pick 1</option>
        <option value="44" name="SKYL_CUSTOMPICK2">Custom Pick 2</option>
        <option value="45" name="SKYL_SPELLEXPLOSION">Spell Explosion</option>
        <option value="46" name="SKYL_DROPPINGPICK">Dropping Pick</option>
        <option value="47" name="SKYL_NULL">Null</option>
    </enum>

    <enum name="BipedPart" storage="byte">
        <option value="0" name="P_OTHER">Other</option>
        <option value="1" name="P_HEAD">Head</option>
        <option value="2" name="P_BODY">Body</option>
        <option value="3" name="P_SPINE1">Spine1</option>
        <option value="4" name="P_SPINE2">Spine2</option>
        <option value="5" name="P_L_UPPER_ARM">LUpperArm</option>
        <option value="6" name="P_L_FOREARM">LForeArm</option>
        <option value="7" name="P_L_HAND">LHand</option>
        <option value="8" name="P_L_THIGH">LThigh</option>
        <option value="9" name="P_L_CALF">LCalf</option>
        <option value="10" name="P_L_FOOT">LFoot</option>
        <option value="11" name="P_R_UPPER_ARM">RUpperArm</option>
        <option value="12" name="P_R_FOREARM">RForeArm</option>
        <option value="13" name="P_R_HAND">RHand</option>
        <option value="14" name="P_R_THIGH">RThigh</option>
        <option value="15" name="P_R_CALF">RCalf</option>
        <option value="16" name="P_R_FOOT">RFoot</option>
        <option value="17" name="P_TAIL">Tail</option>
        <option value="18" name="P_SHIELD">Shield</option>
        <option value="19" name="P_QUIVER">Quiver</option>
        <option value="20" name="P_WEAPON">Weapon</option>
        <option value="21" name="P_PONYTAIL">Ponytail</option>
        <option value="22" name="P_WING">Wing</option>
        <option value="23" name="P_PACK">Pack</option>
        <option value="24" name="P_CHAIN">Chain</option>
        <option value="25" name="P_ADDON_HEAD">AddonHead</option>
        <option value="26" name="P_ADDON_CHEST">AddonChest</option>
        <option value="27" name="P_ADDON_LEG">AddonLeg</option>
        <option value="28" name="P_ADDON_ARM">AddonArm</option>
    </enum>

    <enum name="MoppDataBuildType" storage="byte"><!--Same as hkMoppCodeBuildType-->
        Bethesda Havok(hkpMoppCode::BuildType).
        A byte describing if MOPP Data is organized into chunks (PS3) or not (PC)
        <option value="0" name="BUILT_WITH_CHUNK_SUBDIVISION">Organized in chunks for PS3.</option>
        <option value="1" name="BUILT_WITHOUT_CHUNK_SUBDIVISION">Not organized in chunks for PC. (Default)</option>
        <option value="2" name="BUILD_NOT_SET">Build type not set yet.</option>
    </enum>

    <enum name="PlatformID" storage="uint" prefix="PLATFORM">
        Target platform for NiPersistentSrcTextureRendererData (later than 30.1).
        <option value="0" name="ANY" />
        <option value="1" name="XENON" />
        <option value="2" name="PS3" />
        <option value="3" name="DX9" />
        <option value="4" name="WII" />
        <option value="5" name="D3D10" />
    </enum>

    <enum name="RendererID" storage="uint" prefix="RENDERER">
        Target renderer for NiPersistentSrcTextureRendererData (until 30.1).
        <option value="0" name="XBOX360" />
        <option value="1" name="PS3" />
        <option value="2" name="DX9" />
        <option value="3" name="D3D10" />
        <option value="4" name="WII" />
        <option value="5" name="GENERIC" />
        <option value="6" name="D3D11" />
    </enum>

    <enum name="PixelFormat" storage="uint" prefix="PX">
        Describes the pixel format used by the NiPixelData object to store a texture.
        <option value="0" name="FMT_RGB">24-bit RGB. 8 bits per red, blue, and green component.</option>
        <option value="1" name="FMT_RGBA">32-bit RGB with alpha. 8 bits per red, blue, green, and alpha component.</option>
        <option value="2" name="FMT_PAL">8-bit palette index.</option>
        <option value="3" name="FMT_PALA">8-bit palette index with alpha.</option>
        <option value="4" name="FMT_DXT1">DXT1 compressed texture.</option>
        <option value="5" name="FMT_DXT3">DXT3 compressed texture.</option>
        <option value="6" name="FMT_DXT5">DXT5 compressed texture.</option>
        <option value="7" name="FMT_RGB24NONINT">(Deprecated) 24-bit noninterleaved texture, an old PS2 format.</option>
        <option value="8" name="FMT_BUMP">Uncompressed dU/dV gradient bump map.</option>
        <option value="9" name="FMT_BUMPLUMA">Uncompressed dU/dV gradient bump map with luma channel representing shininess.</option>
        <option value="10" name="FMT_RENDERSPEC">Generic descriptor for any renderer-specific format not described by other formats.</option>
        <option value="11" name="FMT_1CH">Generic descriptor for formats with 1 component.</option>
        <option value="12" name="FMT_2CH">Generic descriptor for formats with 2 components.</option>
        <option value="13" name="FMT_3CH">Generic descriptor for formats with 3 components.</option>
        <option value="14" name="FMT_4CH">Generic descriptor for formats with 4 components.</option>
        <option value="15" name="FMT_DEPTH_STENCIL">Indicates the NiPixelFormat is meant to be used on a depth/stencil surface.</option>
        <option value="16" name="FMT_UNKNOWN" />
    </enum>

    <enum name="PixelTiling" storage="uint" prefix="PX">
        Describes whether pixels have been tiled from their standard row-major format to a format optimized for a particular platform.
        <option value="0" name="TILE_NONE" />
        <option value="1" name="TILE_XENON" />
        <option value="2" name="TILE_WII" />
        <option value="3" name="TILE_NV_SWIZZLED" />
    </enum>

    <enum name="PixelComponent" storage="uint" prefix="PX">
        Describes the pixel format used by the NiPixelData object to store a texture.
        <option value="0" name="COMP_RED" />
        <option value="1" name="COMP_GREEN" />
        <option value="2" name="COMP_BLUE" />
        <option value="3" name="COMP_ALPHA" />
        <option value="4" name="COMP_COMPRESSED" />
        <option value="5" name="COMP_OFFSET_U" />
        <option value="6" name="COMP_OFFSET_V" />
        <option value="7" name="COMP_OFFSET_W" />
        <option value="8" name="COMP_OFFSET_Q" />
        <option value="9" name="COMP_LUMA" />
        <option value="10" name="COMP_HEIGHT" />
        <option value="11" name="COMP_VECTOR_X" />
        <option value="12" name="COMP_VECTOR_Y" />
        <option value="13" name="COMP_VECTOR_Z" />
        <option value="14" name="COMP_PADDING" />
        <option value="15" name="COMP_INTENSITY" />
        <option value="16" name="COMP_INDEX" />
        <option value="17" name="COMP_DEPTH" />
        <option value="18" name="COMP_STENCIL" />
        <option value="19" name="COMP_EMPTY" />
    </enum>

    <enum name="PixelRepresentation" storage="uint" prefix="PX">
        Describes how each pixel should be accessed on NiPixelFormat.
        <option value="0" name="REP_NORM_INT" />
        <option value="1" name="REP_HALF" />
        <option value="2" name="REP_FLOAT" />
        <option value="3" name="REP_INDEX" />
        <option value="4" name="REP_COMPRESSED" />
        <option value="5" name="REP_UNKNOWN" />
        <option value="6" name="REP_INT" />
    </enum>

    <enum name="PixelLayout" storage="uint" prefix="PX">
        Describes the color depth in an NiTexture.
        <option value="0" name="LAY_PALETTIZED_8">Texture is in 8-bit palettized format.</option>
        <option value="1" name="LAY_HIGH_COLOR_16">Texture is in 16-bit high color format.</option>
        <option value="2" name="LAY_TRUE_COLOR_32">Texture is in 32-bit true color format.</option>
        <option value="3" name="LAY_COMPRESSED">Texture is compressed.</option>
        <option value="4" name="LAY_BUMPMAP">Texture is a grayscale bump map.</option>
        <option value="5" name="LAY_PALETTIZED_4">Texture is in 4-bit palettized format.</option>
        <option value="6" name="LAY_DEFAULT">Use default setting.</option>
        <option value="7" name="LAY_SINGLE_COLOR_8" />
        <option value="8" name="LAY_SINGLE_COLOR_16" />
        <option value="9" name="LAY_SINGLE_COLOR_32" />
        <option value="10" name="LAY_DOUBLE_COLOR_32" />
        <option value="11" name="LAY_DOUBLE_COLOR_64" />
        <option value="12" name="LAY_FLOAT_COLOR_32" />
        <option value="13" name="LAY_FLOAT_COLOR_64" />
        <option value="14" name="LAY_FLOAT_COLOR_128" />
        <option value="15" name="LAY_SINGLE_COLOR_4" />
        <option value="16" name="LAY_DEPTH_24_X8" />
    </enum>

    <enum name="MipMapFormat" storage="uint">
        Describes how mipmaps are handled in an NiTexture.
        <option value="0" name="MIP_FMT_NO">Texture does not use mip maps.</option>
        <option value="1" name="MIP_FMT_YES">Texture uses mip maps.</option>
        <option value="2" name="MIP_FMT_DEFAULT">Use default setting.</option>
    </enum>

    <enum name="AlphaFormat" storage="uint">
        Describes how transparency is handled in an NiTexture.
        <option value="0" name="ALPHA_NONE">No alpha.</option>
        <option value="1" name="ALPHA_BINARY">1-bit alpha.</option>
        <option value="2" name="ALPHA_SMOOTH">Interpolated 4- or 8-bit alpha.</option>
        <option value="3" name="ALPHA_DEFAULT">Use default setting.</option>
    </enum>

    <enum name="TexClampMode" storage="uint">
        Describes the availiable texture clamp modes, i.e. the behavior of UV mapping outside the [0,1] range.
        <option value="0" name="CLAMP_S_CLAMP_T">Clamp in both directions.</option>
        <option value="1" name="CLAMP_S_WRAP_T">Clamp in the S(U) direction but wrap in the T(V) direction.</option>
        <option value="2" name="WRAP_S_CLAMP_T">Wrap in the S(U) direction but clamp in the T(V) direction.</option>
        <option value="3" name="WRAP_S_WRAP_T">Wrap in both directions.</option>
    </enum>

    <enum name="TexFilterMode" storage="uint">
        Describes the availiable texture filter modes, i.e. the way the pixels in a texture are displayed on screen.
        <option value="0" name="FILTER_NEAREST">Nearest neighbor. Uses nearest texel with no mipmapping.</option>
        <option value="1" name="FILTER_BILERP">Bilinear. Linear interpolation with no mipmapping.</option>
        <option value="2" name="FILTER_TRILERP">Trilinear. Linear intepolation between 8 texels (4 nearest texels between 2 nearest mip levels).</option>
        <option value="3" name="FILTER_NEAREST_MIPNEAREST">Nearest texel on nearest mip level.</option>
        <option value="4" name="FILTER_NEAREST_MIPLERP">Linear interpolates nearest texel between two nearest mip levels.</option>
        <option value="5" name="FILTER_BILERP_MIPNEAREST">Linear interpolates on nearest mip level.</option>
        <option value="6" name="FILTER_ANISOTROPIC">Anisotropic filtering. One or many trilinear samples depending on anisotropy.</option>
    </enum>

    <enum name="VertMode" storage="uint"><!--Same as SourceVertexMode-->
        Describes how to apply vertex colors for NiVertexColorProperty.
        <option value="0" name="VERT_MODE_SRC_IGNORE">Emissive, ambient, and diffuse colors are all specified by the NiMaterialProperty.</option>
        <option value="1" name="VERT_MODE_SRC_EMISSIVE">Emissive colors are specified by the source vertex colors. Ambient+Diffuse are specified by the NiMaterialProperty.</option>
        <option value="2" name="VERT_MODE_SRC_AMB_DIF">Ambient+Diffuse colors are specified by the source vertex colors. Emissive is specified by the NiMaterialProperty. (Default)</option>
    </enum>

    <enum name="LightMode" storage="uint"><!--Same as LightingMode-->
        Describes which lighting equation components influence the final vertex color for NiVertexColorProperty.
        <option value="0" name="LIGHT_MODE_EMISSIVE">Emissive.</option>
        <option value="1" name="LIGHT_MODE_EMI_AMB_DIF">Emissive + Ambient + Diffuse. (Default)</option>
    </enum>

    <enum name="CycleType" storage="uint">
        The animation cyle behavior.
        <option value="0" name="CYCLE_LOOP">Loop</option>
        <option value="1" name="CYCLE_REVERSE">Reverse</option>
        <option value="2" name="CYCLE_CLAMP">Clamp</option>
    </enum>

    <enum name="FieldType" storage="uint">
        The force field type.
        <option value="0" name="FIELD_WIND">Wind (fixed direction)</option>
        <option value="1" name="FIELD_POINT">Point (fixed origin)</option>
    </enum>

    <enum name="BillboardMode" storage="ushort">
        Determines the way the billboard will react to the camera.
        Billboard mode is stored in lowest 3 bits although Oblivion vanilla nifs uses values higher than 7.
        <option value="0" name="ALWAYS_FACE_CAMERA">Align billboard and camera forward vector. Minimized rotation.</option>
        <option value="1" name="ROTATE_ABOUT_UP">Align billboard and camera forward vector while allowing rotation around the up axis.</option>
        <option value="2" name="RIGID_FACE_CAMERA">Align billboard and camera forward vector. Non-minimized rotation.</option>
        <option value="3" name="ALWAYS_FACE_CENTER">Billboard forward vector always faces camera ceneter. Minimized rotation.</option>
        <option value="4" name="RIGID_FACE_CENTER">Billboard forward vector always faces camera ceneter. Non-minimized rotation.</option>
        <!-- TODO: Unverified -->
        <option value="5" name="BSROTATE_ABOUT_UP">The billboard will only rotate around its local Z axis (it always stays in its local X-Y plane).</option>
        <option value="9" name="ROTATE_ABOUT_UP2">The billboard will only rotate around the up axis (same as ROTATE_ABOUT_UP?).</option>
    </enum>

    <enum name="StencilCompareMode" storage="uint" prefix="STENCIL"><!--Same as StencilTestFunc-->
        Describes stencil buffer test modes for NiStencilProperty.
        <option value="0" name="TEST_NEVER">Always false. Ref value is ignored.</option>
        <option value="1" name="TEST_LESS">VRef ‹ VBuf</option>
        <option value="2" name="TEST_EQUAL">VRef = VBuf</option>
        <option value="3" name="TEST_LESS_EQUAL">VRef ≤ VBuf</option>
        <option value="4" name="TEST_GREATER">VRef › VBuf</option>
        <option value="5" name="TEST_NOT_EQUAL">VRef ≠ VBuf</option>
        <option value="6" name="TEST_GREATER_EQUAL">VRef ≥ VBuf</option>
        <option value="7" name="TEST_ALWAYS">Always true. Buffer is ignored.</option>
    </enum>

    <enum name="StencilAction" storage="uint">
        Describes the actions which can occur as a result of tests for NiStencilProperty.
        <option value="0" name="ACTION_KEEP">Keep the current value in the stencil buffer.</option>
        <option value="1" name="ACTION_ZERO">Write zero to the stencil buffer.</option>
        <option value="2" name="ACTION_REPLACE">Write the reference value to the stencil buffer.</option>
        <option value="3" name="ACTION_INCREMENT">Increment the value in the stencil buffer.</option>
        <option value="4" name="ACTION_DECREMENT">Decrement the value in the stencil buffer.</option>
        <option value="5" name="ACTION_INVERT">Bitwise invert the value in the stencil buffer.</option>
    </enum>

    <enum name="StencilDrawMode" storage="uint">
        Describes the face culling options for NiStencilProperty.
        <option value="0" name="DRAW_CCW_OR_BOTH">Application default, chooses between DRAW_CCW or DRAW_BOTH.</option>
        <option value="1" name="DRAW_CCW">Draw only the triangles whose vertices are ordered CCW with respect to the viewer. (Standard behavior)</option>
        <option value="2" name="DRAW_CW">Draw only the triangles whose vertices are ordered CW with respect to the viewer. (Effectively flips faces)</option>
        <option value="3" name="DRAW_BOTH">Draw all triangles, regardless of orientation. (Effectively force double-sided)</option>
    </enum>

    <enum name="ZCompareMode" storage="uint"><!--Same as TestFunction except for separate names for same values-->
        Describes Z-buffer test modes for NiZBufferProperty.
        "Less than" = closer to camera, "Greater than" = further from camera.
        <option value="0" name="ZCOMP_ALWAYS">Always true. Buffer is ignored.</option>
        <option value="1" name="ZCOMP_LESS">VRef ‹ VBuf</option>
        <option value="2" name="ZCOMP_EQUAL">VRef = VBuf</option>
        <option value="3" name="ZCOMP_LESS_EQUAL">VRef ≤ VBuf</option>
        <option value="4" name="ZCOMP_GREATER">VRef › VBuf</option>
        <option value="5" name="ZCOMP_NOT_EQUAL">VRef ≠ VBuf</option>
        <option value="6" name="ZCOMP_GREATER_EQUAL">VRef ≥ VBuf</option>
        <option value="7" name="ZCOMP_NEVER">Always false. Ref value is ignored.</option>
    </enum>

    <enum name="AlphaFunction" storage="ushort" prefix="ALPHA">
        Describes alpha blend modes for NiAlphaProperty.
        <option value="0" name="ONE" />
        <option value="1" name="ZERO" />
        <option value="2" name="SRC_COLOR" />
        <option value="3" name="INV_SRC_COLOR" />
        <option value="4" name="DEST_COLOR" />
        <option value="5" name="INV_DEST_COLOR" />
        <option value="6" name="SRC_ALPHA" />
        <option value="7" name="INV_SRC_ALPHA" />
        <option value="8" name="DEST_ALPHA" />
        <option value="9" name="INV_DEST_ALPHA" />
        <option value="10" name="SRC_ALPHA_SATURATE" />
    </enum>
    
    <enum name="hkMotionType" storage="byte">
        Bethesda Havok, based on hkpMotion::MotionType. Motion type of a rigid body determines what happens when it is simulated.
        <option value="0" name="MO_SYS_INVALID">Invalid</option>
        <option value="1" name="MO_SYS_DYNAMIC">A fully-simulated, movable rigid body. At construction time the engine checks the input inertia and selects MO_SYS_SPHERE_INERTIA or MO_SYS_BOX_INERTIA as appropriate.</option>
        <option value="2" name="MO_SYS_SPHERE_INERTIA">Simulation is performed using a sphere inertia tensor.</option>
        <option value="3" name="MO_SYS_SPHERE_STABILIZED">This is the same as MO_SYS_SPHERE_INERTIA, except that simulation of the rigid body is "softened".</option>
        <option value="4" name="MO_SYS_BOX_INERTIA">Simulation is performed using a box inertia tensor.</option>
        <option value="5" name="MO_SYS_BOX_STABILIZED">This is the same as MO_SYS_BOX_INERTIA, except that simulation of the rigid body is "softened".</option>
        <option value="6" name="MO_SYS_KEYFRAMED">Simulation is not performed as a normal rigid body. The keyframed rigid body has an infinite mass when viewed by the rest of the system. (used for creatures)</option>
        <option value="7" name="MO_SYS_FIXED">This motion type is used for the static elements of a game scene, e.g. the landscape. Faster than MO_SYS_KEYFRAMED at velocity 0. (used for weapons)</option>
        <option value="8" name="MO_SYS_THIN_BOX">A box inertia motion which is optimized for thin boxes and has less stability problems</option>
        <option value="9" name="MO_SYS_CHARACTER">A specialized motion used for character controllers</option>
    </enum>

    <enum name="hkDeactivatorType" storage="byte"><!--versions="#BETHESDA#"-->
        Bethesda Havok, based on hkpRigidBodyDeactivator::DeactivatorType.
        Deactivator Type determines which mechanism Havok will use to classify the body as deactivated.
        <option value="0" name="DEACTIVATOR_INVALID">Invalid</option>
        <option value="1" name="DEACTIVATOR_NEVER">This will force the rigid body to never deactivate.</option>
        <option value="2" name="DEACTIVATOR_SPATIAL">Tells Havok to use a spatial deactivation scheme. This makes use of high and low frequencies of positional motion to determine when deactivation should occur.</option>
    </enum>

    <enum name="hkSolverDeactivation" storage="byte"><!--versions="#BETHESDA#"-->
        Bethesda Havok, based on hkpRigidBodyCinfo::SolverDeactivation.
        A list of possible solver deactivation settings. This value defines how aggressively the solver deactivates objects.
        Note: Solver deactivation does not save CPU, but reduces creeping of movable objects in a pile quite dramatically.
        <option value="0" name="SOLVER_DEACTIVATION_INVALID">Invalid</option>
        <option value="1" name="SOLVER_DEACTIVATION_OFF">No solver deactivation.</option>
        <option value="2" name="SOLVER_DEACTIVATION_LOW">Very conservative deactivation, typically no visible artifacts.</option>
        <option value="3" name="SOLVER_DEACTIVATION_MEDIUM">Normal deactivation, no serious visible artifacts in most cases.</option>
        <option value="4" name="SOLVER_DEACTIVATION_HIGH">Fast deactivation, visible artifacts.</option>
        <option value="5" name="SOLVER_DEACTIVATION_MAX">Very fast deactivation, visible artifacts.</option>
    </enum>

    <enum name="hkQualityType" storage="byte"><!--versions="#BETHESDA#"-->
        Bethesda Havok, based on hkpCollidableQualityType. Describes the priority and quality of collisions for a body,
            e.g. you may expect critical game play objects to have solid high-priority collisions so that they never sink into ground,
            or may allow penetrations for visual debris objects.
        Notes:
            - Fixed and keyframed objects cannot interact with each other.
            - Debris can interpenetrate but still responds to Bullet hits.
            - Critical objects are forced to not interpenetrate.
            - Moving objects can interpenetrate slightly with other Moving or Debris objects but nothing else.
        <option value="0" name="MO_QUAL_INVALID">Automatically assigned to MO_QUAL_FIXED, MO_QUAL_KEYFRAMED or MO_QUAL_DEBRIS</option>
        <option value="1" name="MO_QUAL_FIXED">Static body.</option>
        <option value="2" name="MO_QUAL_KEYFRAMED">Animated body with infinite mass.</option>
        <option value="3" name="MO_QUAL_DEBRIS">Low importance bodies adding visual detail.</option>
        <option value="4" name="MO_QUAL_MOVING">Moving bodies which should not penetrate or leave the world, but can.</option>
        <option value="5" name="MO_QUAL_CRITICAL">Gameplay critical bodies which cannot penetrate or leave the world under any circumstance.</option>
        <option value="6" name="MO_QUAL_BULLET">Fast-moving bodies, such as projectiles.</option>
        <option value="7" name="MO_QUAL_USER">For user.</option>
        <option value="8" name="MO_QUAL_CHARACTER">For use with rigid body character controllers.</option>
        <option value="9" name="MO_QUAL_KEYFRAMED_REPORT">
            Moving bodies with infinite mass which should report contact points and TOI collisions against all other bodies.
        </option>
    </enum>

    <enum name="ForceType" storage="uint">
        Describes the type of gravitational force.
        <option value="0" name="FORCE_PLANAR" />
        <option value="1" name="FORCE_SPHERICAL" />
        <option value="2" name="FORCE_UNKNOWN" />
    </enum>

    <enum name="TransformMember" storage="uint">
        Describes which aspect of the NiTextureTransform the NiTextureTransformController will modify.
        <option value="0" name="TT_TRANSLATE_U">Control the translation of the U coordinates.</option>
        <option value="1" name="TT_TRANSLATE_V">Control the translation of the V coordinates.</option>
        <option value="2" name="TT_ROTATE">Control the rotation of the coordinates.</option>
        <option value="3" name="TT_SCALE_U">Control the scale of the U coordinates.</option>
        <option value="4" name="TT_SCALE_V">Control the scale of the V coordinates.</option>
    </enum>

    <enum name="DecayType" storage="uint">
        Describes the decay function of bomb forces.
        <option value="0" name="DECAY_NONE">No decay.</option>
        <option value="1" name="DECAY_LINEAR">Linear decay.</option>
        <option value="2" name="DECAY_EXPONENTIAL">Exponential decay.</option>
    </enum>

    <enum name="SymmetryType" storage="uint">
        Describes the symmetry type of bomb forces.
        <option value="0" name="SPHERICAL_SYMMETRY">Spherical Symmetry.</option>
        <option value="1" name="CYLINDRICAL_SYMMETRY">Cylindrical Symmetry.</option>
        <option value="2" name="PLANAR_SYMMETRY">Planar Symmetry.</option>
    </enum>

    <enum name="VelocityType" storage="uint">
        Controls the way the a particle mesh emitter determines the starting speed and direction of the particles that are emitted.
        <option value="0" name="VELOCITY_USE_NORMALS">Uses the normals of the meshes to determine staring velocity.</option>
        <option value="1" name="VELOCITY_USE_RANDOM">Starts particles with a random velocity.</option>
        <option value="2" name="VELOCITY_USE_DIRECTION">Uses the emission axis to determine initial particle direction?</option>
    </enum>

    <enum name="EmitFrom" storage="uint">
        Controls which parts of the mesh that the particles are emitted from.
        <option value="0" name="EMIT_FROM_VERTICES">Emit particles from the vertices of the mesh.</option>
        <option value="1" name="EMIT_FROM_FACE_CENTER">Emit particles from the center of the faces of the mesh.</option>
        <option value="2" name="EMIT_FROM_EDGE_CENTER">Emit particles from the center of the edges of the mesh.</option>
        <option value="3" name="EMIT_FROM_FACE_SURFACE">Perhaps randomly emit particles from anywhere on the faces of the mesh?</option>
        <option value="4" name="EMIT_FROM_EDGE_SURFACE">Perhaps randomly emit particles from anywhere on the edges of the mesh?</option>
    </enum>

    <enum name="TextureType" storage="uint">
        The type of information that is stored in a texture used by an NiTextureEffect.
        <option value="0" name="TEX_PROJECTED_LIGHT">Apply a projected light texture. Each light effect is summed before multiplying by the base texture.</option>
        <option value="1" name="TEX_PROJECTED_SHADOW">Apply a projected shadow texture. Each shadow effect is multiplied by the base texture.</option>
        <option value="2" name="TEX_ENVIRONMENT_MAP">Apply an environment map texture. Added to the base texture and light/shadow/decal maps.</option>
        <option value="3" name="TEX_FOG_MAP">Apply a fog map texture. Alpha channel is used to blend the color channel with the base texture.</option>
    </enum>

    <enum name="CoordGenType" storage="uint">
        Determines the way that UV texture coordinates are generated.
        <option value="0" name="CG_WORLD_PARALLEL">Use planar mapping.</option>
        <option value="1" name="CG_WORLD_PERSPECTIVE">Use perspective mapping.</option>
        <option value="2" name="CG_SPHERE_MAP">Use spherical mapping.</option>
        <option value="3" name="CG_SPECULAR_CUBE_MAP">Use specular cube mapping. For NiSourceCubeMap only.</option>
        <option value="4" name="CG_DIFFUSE_CUBE_MAP">Use diffuse cube mapping. For NiSourceCubeMap only.</option>
    </enum>

    <enum name="EndianType" storage="byte">
        <option value="0" name="ENDIAN_BIG">The numbers are stored in big endian format, such as those used by PowerPC Mac processors.</option>
        <option value="1" name="ENDIAN_LITTLE">The numbers are stored in little endian format, such as those used by Intel and AMD x86 processors.</option>
    </enum>

    <enum name="MaterialColor" storage="ushort">
        Used by NiMaterialColorControllers to select which type of color in the controlled object that will be animated.
        <option value="0" name="TC_AMBIENT">Control the ambient color.</option>
        <option value="1" name="TC_DIFFUSE">Control the diffuse color.</option>
        <option value="2" name="TC_SPECULAR">Control the specular color.</option>
        <option value="3" name="TC_SELF_ILLUM">Control the self illumination color.</option>
    </enum>

    <enum name="LightColor" storage="ushort">
        Used by NiLightColorControllers to select which type of color in the controlled object that will be animated.
        <option value="0" name="LC_DIFFUSE">Control the diffuse color.</option>
        <option value="1" name="LC_AMBIENT">Control the ambient color.</option>
    </enum>

    <enum name="ConsistencyType" storage="ushort">
        Used by NiGeometryData to control the volatility of the mesh.
        Consistency Type is masked to only the upper 4 bits (0xF000). Dirty mask is the lower 12 (0x0FFF) but only used at runtime.
        <option value="0x0000" name="CT_MUTABLE">Mutable Mesh</option>
        <option value="0x4000" name="CT_STATIC">Static Mesh</option>
        <option value="0x8000" name="CT_VOLATILE">Volatile Mesh</option>
    </enum>

    <enum name="SortingMode" storage="uint">
        Describes the way that NiSortAdjustNode modifies the sorting behavior for the subtree below it.
        <option value="0" name="SORTING_INHERIT">Inherit. Acts identical to NiNode.</option>
        <option value="1" name="SORTING_OFF">Disables sort on all geometry under this node.</option>
    </enum>

    <enum name="PropagationMode" storage="uint">
        The propagation mode controls scene graph traversal during collision detection operations for NiCollisionData.
        <option value="0" name="PROPAGATE_ON_SUCCESS">Propagation only occurs as a result of a successful collision.</option>
        <option value="1" name="PROPAGATE_ON_FAILURE">(Deprecated) Propagation only occurs as a result of a failed collision.</option>
        <option value="2" name="PROPAGATE_ALWAYS">Propagation always occurs regardless of collision result.</option>
        <option value="3" name="PROPAGATE_NEVER">Propagation never occurs regardless of collision result.</option>
    </enum>

    <enum name="CollisionMode" prefix="CM" storage="uint">
        The collision mode controls the type of collision operation that is to take place for NiCollisionData.
        <option value="0" name="CM_USE_OBB">Use Bounding Box</option>
        <option value="1" name="CM_USE_TRI">Use Triangles</option>
        <option value="2" name="CM_USE_ABV">Use Alternate Bounding Volumes</option>
        <option value="3" name="CM_NOTEST">Indicates that no collision test should be made.</option>
        <option value="4" name="CM_USE_NIBOUND">Use NiBound</option>
    </enum>

    <enum name="BoundVolumeType" storage="uint">
        <option value="0xffffffff" name="BASE_BV">Default</option>
        <option value="0" name="SPHERE_BV">Sphere</option>
        <option value="1" name="BOX_BV">Box</option>
        <option value="2" name="CAPSULE_BV">Capsule</option>
        <option value="4" name="UNION_BV">Union</option>
        <option value="5" name="HALFSPACE_BV">Half Space</option>
    </enum>

    <enum name="hkResponseType" storage="byte"><!--versions="#BETHESDA#"-->
        Bethesda Havok(hkpMaterial::ResponseType).
        <option value="0" name="RESPONSE_INVALID">Invalid Response</option>
        <option value="1" name="RESPONSE_SIMPLE_CONTACT">Do normal collision resolution</option>
        <option value="2" name="RESPONSE_REPORTING">No collision resolution is performed but listeners are called</option>
        <option value="3" name="RESPONSE_NONE">Do nothing, ignore all the results.</option>
    </enum>
    
    <enum name="BSDismemberBodyPartType" storage="ushort"><!--versions="#BETHESDA#"-->
        Biped bodypart data used for visibility control of triangles.  Options are Fallout 3, except where marked for Skyrim (uses SBP prefix)
        Skyrim BP names are listed only for vanilla names, different creatures have different defnitions for naming.
        <option value="0" name="BP_TORSO">Torso</option>
        <option value="1" name="BP_HEAD">Head</option>
        <option value="2" name="BP_HEAD2">Head 2</option>
        <option value="3" name="BP_LEFTARM">Left Arm</option>
        <option value="4" name="BP_LEFTARM2">Left Arm 2</option>
        <option value="5" name="BP_RIGHTARM">Right Arm</option>
        <option value="6" name="BP_RIGHTARM2">Right Arm 2</option>
        <option value="7" name="BP_LEFTLEG">Left Leg</option>
        <option value="8" name="BP_LEFTLEG2">Left Leg 2</option>
        <option value="9" name="BP_LEFTLEG3">Left Leg 3</option>
        <option value="10" name="BP_RIGHTLEG">Right Leg</option>
        <option value="11" name="BP_RIGHTLEG2">Right Leg 2</option>
        <option value="12" name="BP_RIGHTLEG3">Right Leg 3</option>
        <option value="13" name="BP_BRAIN">Brain</option>
        
        <option value="30" name="SBP_30_HEAD">Skyrim, Head(Human), Body(Atronachs,Beasts), Mask(Dragonpriest)</option>
        <option value="31" name="SBP_31_HAIR">Skyrim, Hair(human), Far(Dragon), Mask2(Dragonpriest),SkinnedFX(Spriggan)</option>
        <option value="32" name="SBP_32_BODY">Skyrim, Main body, extras(Spriggan)</option>
        <option value="33" name="SBP_33_HANDS">Skyrim, Hands L/R, BodyToo(Dragonpriest), Legs(Draugr), Arms(Giant)</option>
        <option value="34" name="SBP_34_FOREARMS">Skyrim, Forearms L/R, Beard(Draugr)</option>
        <option value="35" name="SBP_35_AMULET">Skyrim, Amulet</option>
        <option value="36" name="SBP_36_RING">Skyrim, Ring</option>
        <option value="37" name="SBP_37_FEET">Skyrim, Feet L/R</option>
        <option value="38" name="SBP_38_CALVES">Skyrim, Calves L/R</option>
        <option value="39" name="SBP_39_SHIELD">Skyrim, Shield</option>
        <option value="40" name="SBP_40_TAIL">Skyrim, Tail(Argonian/Khajiit), Skeleton01(Dragon), FX01(AtronachStorm),FXMist (Dragonpriest), Spit(Chaurus,Spider),SmokeFins(IceWraith)</option>
        <option value="41" name="SBP_41_LONGHAIR">Skyrim, Long Hair(Human), Skeleton02(Dragon),FXParticles(Dragonpriest)</option>
        <option value="42" name="SBP_42_CIRCLET">Skyrim, Circlet(Human, MouthFireEffect(Dragon)</option>
        <option value="43" name="SBP_43_EARS">Skyrim, Ears</option>
        <option value="44" name="SBP_44_DRAGON_BLOODHEAD_OR_MOD_MOUTH">Skyrim, Bloodied dragon head, or NPC face/mouth</option>
        <option value="45" name="SBP_45_DRAGON_BLOODWINGL_OR_MOD_NECK">Skyrim, Left Bloodied dragon wing, Saddle(Horse), or NPC cape, scarf, shawl, neck-tie, etc.</option>
        <option value="46" name="SBP_46_DRAGON_BLOODWINGR_OR_MOD_CHEST_PRIMARY">Skyrim, Right Bloodied dragon wing, or NPC chest primary or outergarment</option>
        <option value="47" name="SBP_47_DRAGON_BLOODTAIL_OR_MOD_BACK">Skyrim, Bloodied dragon tail, or NPC backpack/wings/...</option>
        <option value="48" name="SBP_48_MOD_MISC1">Anything that does not fit in the list</option>
        <option value="49" name="SBP_49_MOD_PELVIS_PRIMARY">Pelvis primary or outergarment</option>
        <option value="50" name="SBP_50_DECAPITATEDHEAD">Skyrim, Decapitated Head</option>
        <option value="51" name="SBP_51_DECAPITATE">Skyrim, Decapitate, neck gore</option>
        <option value="52" name="SBP_52_MOD_PELVIS_SECONDARY">Pelvis secondary or undergarment</option>
        <option value="53" name="SBP_53_MOD_LEG_RIGHT">Leg primary or outergarment or right leg</option>
        <option value="54" name="SBP_54_MOD_LEG_LEFT">Leg secondary or undergarment or left leg</option>
        <option value="55" name="SBP_55_MOD_FACE_JEWELRY">Face alternate or jewelry</option>
        <option value="56" name="SBP_56_MOD_CHEST_SECONDARY">Chest secondary or undergarment</option>
        <option value="57" name="SBP_57_MOD_SHOULDER">Shoulder</option>
        <option value="58" name="SBP_58_MOD_ARM_LEFT">Arm secondary or undergarment or left arm</option>
        <option value="59" name="SBP_59_MOD_ARM_RIGHT">Arm primary or outergarment or right arm</option>
        <option value="60" name="SBP_60_MOD_MISC2">Anything that does not fit in the list</option>
        <option value="61" name="SBP_61_FX01">Skyrim, FX01(Humanoid)</option>
        
        <option value="101" name="BP_SECTIONCAP_HEAD">Section Cap | Head</option>
        <option value="102" name="BP_SECTIONCAP_HEAD2">Section Cap | Head 2</option>
        <option value="103" name="BP_SECTIONCAP_LEFTARM">Section Cap | Left Arm</option>
        <option value="104" name="BP_SECTIONCAP_LEFTARM2">Section Cap | Left Arm 2</option>
        <option value="105" name="BP_SECTIONCAP_RIGHTARM">Section Cap | Right Arm</option>
        <option value="106" name="BP_SECTIONCAP_RIGHTARM2">Section Cap | Right Arm 2</option>
        <option value="107" name="BP_SECTIONCAP_LEFTLEG">Section Cap | Left Leg</option>
        <option value="108" name="BP_SECTIONCAP_LEFTLEG2">Section Cap | Left Leg 2</option>
        <option value="109" name="BP_SECTIONCAP_LEFTLEG3">Section Cap | Left Leg 3</option>
        <option value="110" name="BP_SECTIONCAP_RIGHTLEG">Section Cap | Right Leg</option>
        <option value="111" name="BP_SECTIONCAP_RIGHTLEG2">Section Cap | Right Leg 2</option>
        <option value="112" name="BP_SECTIONCAP_RIGHTLEG3">Section Cap | Right Leg 3</option>
        <option value="113" name="BP_SECTIONCAP_BRAIN">Section Cap | Brain</option>
        
        <option value="130" name="SBP_130_HEAD">Skyrim, Head slot, use on full-face helmets</option>
        <option value="131" name="SBP_131_HAIR">Skyrim, Hair slot 1, use on hoods</option>
        <option value="141" name="SBP_141_LONGHAIR">Skyrim, Hair slot 2, use for longer hair</option>
        <option value="142" name="SBP_142_CIRCLET">Skyrim, Circlet slot 1, use for circlets</option>
        <option value="143" name="SBP_143_EARS">Skyrim, Ear slot</option>
        <option value="150" name="SBP_150_DECAPITATEDHEAD">Skyrim, neck gore on head side</option>

        <option value="201" name="BP_TORSOCAP_HEAD">Torso Cap | Head</option>
        <option value="202" name="BP_TORSOCAP_HEAD2">Torso Cap | Head 2</option>
        <option value="203" name="BP_TORSOCAP_LEFTARM">Torso Cap | Left Arm</option>
        <option value="204" name="BP_TORSOCAP_LEFTARM2">Torso Cap | Left Arm 2</option>
        <option value="205" name="BP_TORSOCAP_RIGHTARM">Torso Cap | Right Arm</option>
        <option value="206" name="BP_TORSOCAP_RIGHTARM2">Torso Cap | Right Arm 2</option>
        <option value="207" name="BP_TORSOCAP_LEFTLEG">Torso Cap | Left Leg</option>
        <option value="208" name="BP_TORSOCAP_LEFTLEG2">Torso Cap | Left Leg 2</option>
        <option value="209" name="BP_TORSOCAP_LEFTLEG3">Torso Cap | Left Leg 3</option>
        <option value="210" name="BP_TORSOCAP_RIGHTLEG">Torso Cap | Right Leg</option>
        <option value="211" name="BP_TORSOCAP_RIGHTLEG2">Torso Cap | Right Leg 2</option>
        <option value="212" name="BP_TORSOCAP_RIGHTLEG3">Torso Cap | Right Leg 3</option>
        <option value="213" name="BP_TORSOCAP_BRAIN">Torso Cap | Brain</option>

        <option value="230" name="SBP_230_HEAD">Skyrim, Head slot, use for neck on character head</option>

        <option value="1000" name="BP_TORSOSECTION_HEAD">Torso Section | Head</option>
        <option value="2000" name="BP_TORSOSECTION_HEAD2">Torso Section | Head 2</option>
        <option value="3000" name="BP_TORSOSECTION_LEFTARM">Torso Section | Left Arm</option>
        <option value="4000" name="BP_TORSOSECTION_LEFTARM2">Torso Section | Left Arm 2</option>
        <option value="5000" name="BP_TORSOSECTION_RIGHTARM">Torso Section | Right Arm</option>
        <option value="6000" name="BP_TORSOSECTION_RIGHTARM2">Torso Section | Right Arm 2</option>
        <option value="7000" name="BP_TORSOSECTION_LEFTLEG">Torso Section | Left Leg</option>
        <option value="8000" name="BP_TORSOSECTION_LEFTLEG2">Torso Section | Left Leg 2</option>
        <option value="9000" name="BP_TORSOSECTION_LEFTLEG3">Torso Section | Left Leg 3</option>
        <option value="10000" name="BP_TORSOSECTION_RIGHTLEG">Torso Section | Right Leg</option>
        <option value="11000" name="BP_TORSOSECTION_RIGHTLEG2">Torso Section | Right Leg 2</option>
        <option value="12000" name="BP_TORSOSECTION_RIGHTLEG3">Torso Section | Right Leg 3</option>
        <option value="13000" name="BP_TORSOSECTION_BRAIN">Torso Section | Brain</option>       
    </enum>
	
    <enum name="BSLightingShaderPropertyShaderType" storage="uint" prefix="ST"><!--Same as BSLightingShaderType--><!--versions="#SKY_AND_LATER#"-->
        Values for configuring the shader type in a BSLightingShaderProperty
        <option value="0" name="Default" />
        <option value="1" name="Environment Map">Enables EnvMap Mask(TS6), EnvMap Scale</option>
        <option value="2" name="Glow Shader">Enables Glow(TS3)</option>
        <option value="3" name="Parallax">Enables Height(TS4)</option>
        <option value="4" name="Face Tint">Enables Detail(TS4), Tint(TS7)</option>
        <option value="5" name="Skin Tint">Enables Skin Tint Color</option>
        <option value="6" name="Hair Tint">Enables Hair Tint Color</option>
        <option value="7" name="Parallax Occ">Enables Height(TS4), Max Passes, Scale. Unimplemented.</option>
        <option value="8" name="Multitexture Landscape" />
        <option value="9" name="LOD Landscape" />
        <option value="10" name="Snow" />
        <option value="11" name="MultiLayer Parallax">Enables EnvMap Mask(TS6), Layer(TS7), Parallax Layer Thickness, Parallax Refraction Scale, Parallax Inner Layer U Scale, Parallax Inner Layer V Scale, EnvMap Scale</option>
        <option value="12" name="Tree Anim" />
        <option value="13" name="LOD Objects" />
        <option value="14" name="Sparkle Snow">Enables SparkleParams</option>
        <option value="15" name="LOD Objects HD" />
        <option value="16" name="Eye Envmap">Enables EnvMap Mask(TS6), Eye EnvMap Scale</option>
        <option value="17" name="Cloud" />
        <option value="18" name="LOD Landscape Noise" />
        <option value="19" name="Multitexture Landscape LOD Blend" />
        <option value="20" name="FO4 Dismemberment" />
    </enum>

    <enum name="BSLightingShaderType155" storage="uint" prefix="ST" versions="#F76#">
        Values for configuring the shader type in a BSLightingShaderProperty
        <option value="0" name="Default" />
        <option value="2" name="Glow" />
        <option value="3" name="Face Tint" />
        <option value="4" name="Skin Tint" />
        <option value="5" name="Hair Tint" />
    </enum>
    
    <enum name="EffectShaderControlledVariable" storage="uint" prefix="ESCV"><!--versions="#SKY_AND_LATER#"-->
        An unsigned 32-bit integer, describing which float variable in BSEffectShaderProperty to animate.
        <option value="0" name="EmissiveMultiple">EmissiveMultiple.</option>
        <option value="1" name="Falloff Start Angle">Falloff Start Angle (degrees).</option>
        <option value="2" name="Falloff Stop Angle">Falloff Stop Angle (degrees).</option>
        <option value="3" name="Falloff Start Opacity">Falloff Start Opacity.</option>
        <option value="4" name="Falloff Stop Opacity">Falloff Stop Opacity.</option>
        <option value="5" name="Alpha Transparency">Alpha Transparency (Emissive alpha?).</option>
        <option value="6" name="U Offset">U Offset.</option>
        <option value="7" name="U Scale">U Scale.</option>
        <option value="8" name="V Offset">V Offset.</option>
        <option value="9" name="V Scale">V Scale.</option>
    </enum>

    <enum name="EffectShaderControlledColor" storage="uint" prefix="ECSC"><!--versions="#SKY_AND_LATER#"-->
        An unsigned 32-bit integer, describing which color in BSEffectShaderProperty to animate.
        <option value="0" name="Emissive Color">Emissive Color.</option>
    </enum>

    <enum name="LightingShaderControlledVariable" storage="uint" prefix="LSCV"><!--versions="#SKY_AND_LATER#"-->
        An unsigned 32-bit integer, describing which float variable in BSLightingShaderProperty to animate.
        <option value="0" name="Refraction Strength">The amount of distortion.</option>
        <option value="8" name="Environment Map Scale">Environment Map Scale.</option>
        <option value="9" name="Glossiness">Glossiness.</option>
        <option value="10" name="Specular Strength">Specular Strength.</option>
        <option value="11" name="Emissive Multiple">Emissive Multiple.</option>
        <option value="12" name="Alpha">Alpha.</option>
        <option value="20" name="U Offset">U Offset.</option>
        <option value="21" name="U Scale">U Scale.</option>
        <option value="22" name="V Offset">V Offset.</option>
        <option value="23" name="V Scale">V Scale.</option>
    </enum>

    <enum name="LightingShaderControlledUShort" storage="uint" prefix="LSCU"><!--versions="#SKY_AND_LATER#"-->
        An unsigned 32-bit integer, describing which integral value in BSLightingShaderProperty to animate.
        <option value="0" name="Unknown 1" />
        <option value="1" name="Unknown 2" />
    </enum>
    <enum name="LightingShaderControlledColor" storage="uint" prefix="LSCC">
        An unsigned 32-bit integer, describing which color in BSLightingShaderProperty to animate.
        <option value="0" name="Specular Color">Specular Color.</option>
        <option value="1" name="Emissive Color">Emissive Color.</option>
    </enum>

    <enum name="hkConstraintType" storage="uint">
        Bethesda Havok(hkpConstraintData::ConstraintType). Describes the type of bhkConstraint.
        <option value="0" name="BallAndSocket">A ball and socket constraint.</option>
        <option value="1" name="Hinge">A hinge constraint.</option>
        <option value="2" name="Limited Hinge">A limited hinge constraint.</option>
        <option value="6" name="Prismatic">A prismatic constraint.</option>
        <option value="7" name="Ragdoll">A ragdoll constraint.</option>
        <option value="8" name="StiffSpring">A stiff spring constraint.</option>
        <!--<option value="10" name="Generic">A generic constraint.</option>-->
        <option value="13" name="Malleable">A malleable constraint.</option>
    </enum>

    <enum name="FogFunction" storage="ushort">
        <option value="0" name="FOG_Z_LINEAR" />
        <option value="1" name="FOG_RANGE_SQ" />
        <option value="2" name="FOG_VERTEX_ALPHA" />
    </enum>

    <enum name="AnimType" storage="ushort">
        <option value="0" name="APP_TIME" />
        <option value="1" name="APP_INIT" />
    </enum>

    <enum name="DitherFlags" storage="ushort">
        Flags for NiDitherProperty
        <option value="0" name="DITHER_DISABLED" />
        <option value="1" name="DITHER_ENABLED" />
    </enum>

    <enum name="ShadeFlags" storage="ushort">
        Flags for NiShadeProperty
        <option value="0" name="SHADING_HARD" />
        <option value="1" name="SHADING_SMOOTH" />
    </enum>

    <enum name="SpecularFlags" storage="ushort">
        Flags for NiSpecularProperty
        <option value="0" name="SPECULAR_DISABLED" />
        <option value="1" name="SPECULAR_ENABLED" />
    </enum>

    <enum name="WireframeFlags" storage="ushort">
        Flags for NiWireframeProperty
        <option value="0" name="WIREFRAME_DISABLED" />
        <option value="1" name="WIREFRAME_ENABLED" />
    </enum>

    <enum name="GeomMorpherFlags" storage="ushort">
        Flags for NiGeomMorpherController
        <option value="0" name="UPDATE_NORMALS_DISABLED" />
        <option value="1" name="UPDATE_NORMALS_ENABLED" />
    </enum>
    
    
    <!-- Bitfields -->

    <bitfield name="TimeControllerFlags" storage="ushort">
        Flags for NiTimeController
        <member width="1" pos="0" mask="0x0001" name="Anim Type" type="AnimType" />
        <member width="2" pos="1" mask="0x0006" name="Cycle Type" type="CycleType" default="CYCLE_CLAMP" />
        <member width="1" pos="3" mask="0x0008" name="Active" type="bool" default="1" />
        <member width="1" pos="4" mask="0x0010" name="Play Backwards" type="bool" />
        <member width="1" pos="5" mask="0x0020" name="Manager Controlled" type="bool" />
        <member width="1" pos="6" mask="0x0040" name="Compute Scaled Time" type="bool" default="1" />
        <member width="1" pos="7" mask="0x0080" name="Forced Update" type="bool" />
    </bitfield>

    <bitfield name="AlphaFlags" storage="ushort">
        Flags for NiAlphaProperty
        <member width="1" pos="0" mask="0x0001" name="Alpha Blend" type="bool" />
        <member width="4" pos="1" mask="0x001E" name="Source Blend Mode" type="AlphaFunction" default="SRC_ALPHA" />
        <member width="4" pos="5" mask="0x01E0" name="Destination Blend Mode" type="AlphaFunction" default="INV_SRC_ALPHA" />
        <member width="1" pos="9" mask="0x0200" name="Alpha Test" type="bool" default="1" />
        <member width="3" pos="10" mask="0x1C00" name="Test Func" type="TestFunction" default="TEST_GREATER" />
        <member width="1" pos="13" mask="0x2000" name="No Sorter" type="bool" />
        <member width="1" pos="14" mask="0x4000" name="Clone Unique" type="bool">Bethesda-only. Always true for weapon blood after FO3.</member>
        <member width="1" pos="15" mask="0x8000" name="Editor Alpha Threshold" type="bool">Bethesda-only. True if the Alpha Threshold is externally controlled.</member>
    </bitfield>

    <bitfield name="FogFlags" storage="ushort">
        Flags for NiFogProperty
        <member width="1" pos="0" mask="0x0001" name="Enable" type="bool" />
        <member width="3" pos="1" mask="0x0006" name="Fog Function" type="FogFunction" />
    </bitfield>

    <bitfield name="StencilFlags" storage="ushort">
        Flags for NiStencilProperty
        <member width="1" pos="0" mask="0x0001" name="Enable" type="bool" />
        <member width="3" pos="1" mask="0x000E" name="Fail Action" type="StencilAction" default="ACTION_KEEP" />
        <member width="3" pos="4" mask="0x0070" name="ZFail Action" type="StencilAction" default="ACTION_KEEP" />
        <member width="3" pos="7" mask="0x0380" name="Pass Action" type="StencilAction" default="ACTION_INCREMENT" />
        <member width="2" pos="10" mask="0x0C00" name="Draw Mode" type="StencilDrawMode" default="DRAW_BOTH" />
        <member width="3" pos="12" mask="0xF000" name="Test Func" type="StencilTestFunc" default="TEST_GREATER" />
    </bitfield>

    <bitfield name="TexturingFlags" storage="ushort">
        Flags for NiTexturingProperty
        <member width="1" pos="0" mask="0x0001" name="Multitexture" type="bool" />
        <member width="3" pos="1" mask="0x000E" name="Apply Mode" type="ApplyMode" />
        <member width="8" pos="4" mask="0x0FF0" name="Decal Count" type="ushort" />
    </bitfield>

    <bitfield name="TexturingMapFlags" storage="ushort">
        Flags for NiTexturingProperty
        <member width="8" pos="0" mask="0x00FF" name="Texture Index" type="ushort" />
        <member width="4" pos="8" mask="0x0F00" name="Filter Mode" type="TexFilterMode" />
        <member width="4" pos="12" mask="0x3000" name="Clamp Mode" type="TexClampMode" />
    </bitfield>

    <bitfield name="VertexColorFlags" storage="ushort">
        Flags for NiVertexColorProperty
        <member width="3" pos="0" mask="0x0007" name="Color Mode" type="ushort" />
        <member width="1" pos="3" mask="0x0008" name="Lighting Mode" type="LightingMode" />
        <member width="2" pos="4" mask="0x0030" name="Source Vertex Mode" type="SourceVertexMode" />
    </bitfield>

    <bitfield name="ZBufferFlags" storage="ushort">
        Flags for NiZBufferProperty
        <member width="1" pos="0" mask="0x0001" name="ZBuffer Test" type="bool" />
        <member width="1" pos="1" mask="0x0002" name="ZBuffer Write" type="bool" />
        <member width="3" pos="2" mask="0x003C" name="Test Func" type="TestFunction" />
    </bitfield>

    <enum name="AGDConsistencyType" storage="byte">
        <option value="0" name="AGD_MUTABLE" />
        <option value="1" name="AGD_STATIC" />
        <option value="2" name="AGD_VOLATILE" />
    </enum>

    <bitfield name="NiAGDDataStreamFlags" storage="byte">
        Flags for NiAGDDataStream
        <member width="1" pos="0" mask="0x0001" name="Keep" type="bool" />
        <member width="3" pos="1" mask="0x0006" name="Consistency Type" type="AGDConsistencyType" default="AGD_MUTABLE" />
    </bitfield>

    <enum name="NiNBTMethod" storage="ushort">
        <option value="0" name="NBT_METHOD_NONE" />
        <option value="1" name="NBT_METHOD_NDL" />
        <option value="2" name="NBT_METHOD_MAX" />
        <option value="3" name="NBT_METHOD_ATI" />
    </enum>

    <bitfield name="NiGeometryDataFlags" storage="ushort">
        <member width="6" pos="0" mask="0x003F" name="Num UV Sets" type="bool" />
        <member width="6" pos="6" mask="0x0FC0" name="Havok Material" type="ushort">Unused for non-Bethesda, non-bhk NiGeometryData.</member>
        <member width="2" pos="12" mask="0xF000" name="NBT Method" type="NiNBTMethod" />
    </bitfield>

    <bitfield name="BSGeometryDataFlags" storage="ushort">
        <member width="6" pos="0" mask="0x0001" name="Has UV" type="bool" />
        <member width="6" pos="6" mask="0x0FC0" name="Havok Material" type="ushort" />
        <member width="1" pos="12" mask="0x1000" name="Has Tangents" type="bool" />
    </bitfield>

    <bitfield name="CollisionFilterFlags" storage="byte">
        <member width="5" pos="0" mask="0x001F" name="Biped Part" type="BipedPart">Used only if the Layer is 8 (or 32/33 for Skyrim and later).</member>
        <member width="1" pos="5" mask="0x0020" name="MOPP Scaled" type="bool" />
        <member width="1" pos="6" mask="0x0040" name="No Collision" type="bool" />
        <member width="1" pos="7" mask="0x0080" name="Linked Group" type="bool">If Layer is CHARCONTROLLER (CC), true means "CC Trigger Only".</member>
    </bitfield>
    
    <!--Compounds
        These are like C structures and are used as sub-parts of more complex
        classes when there are multiple pieces of data repeated in an array.-->

    <compound name="SizedString">
        A string of given length.
        <field name="Length" type="uint">The string length.</field>
        <field name="Value" type="char" arr1="Length">The string itself.</field>
    </compound>

    <compound name="SizedString16">
        A string of given length, using a ushort to store string length.
        <field name="Length" type="ushort">The string length.</field>
        <field name="Value" type="char" arr1="Length">The string itself.</field>
    </compound>

    <compound name="string">
        A string type.
        <field name="String" type="SizedString" ver2="20.0.0.5">The normal string.</field>
        <field name="Index" type="StringIndex" ver1="20.1.0.3">The string index.</field>
    </compound>

    <compound name="NiTFixedStringMapItem" generic="true">
        Currently, #T# must be a basic type due to nif.xml restrictions.
        <field name="String" type="NiFixedString" />
        <field name="Value" type="#T#" />
    </compound>

    <compound name="NiTFixedStringMap" generic="true">
        A mapping or hash table between NiFixedString keys and a generic value.
        Currently, #T# must be a basic type due to nif.xml restrictions.
        <field name="Num Strings" type="uint" />
        <field name="Strings" type="NiTFixedStringMapItem" template="#T#" arr1="Num Strings" />
    </compound>
    <compound name="ByteArray">
        An array of bytes.
        <field name="Data Size" type="uint">The number of bytes in this array</field>
        <field name="Data" type="byte" arr1="Data Size">The bytes which make up the array</field>
    </compound>

    <compound name="ByteMatrix">
        An array of bytes.
        <field name="Data Size 1" type="uint">The number of bytes in this array</field>
        <field name="Data Size 2" type="uint">The number of bytes in this array</field>
        <field name="Data" type="byte" arr1="Data Size 2" arr2="Data Size 1">The bytes which make up the array</field>
    </compound>

    <compound name="Color3">
        A color without alpha (red, green, blue).
        <field name="r" type="float">Red color component.</field>
        <field name="g" type="float">Green color component.</field>
        <field name="b" type="float">Blue color component.</field>
    </compound>

    <compound name="ByteColor3">
        A color without alpha (red, green, blue).
        <field name="r" type="byte">Red color component.</field>
        <field name="g" type="byte">Green color component.</field>
        <field name="b" type="byte">Blue color component.</field>
    </compound>

    <compound name="Color4">
        A color with alpha (red, green, blue, alpha).
        <field name="r" type="float">Red component.</field>
        <field name="g" type="float">Green component.</field>
        <field name="b" type="float">Blue component.</field>
        <field name="a" type="float">Alpha.</field>
    </compound>

    <compound name="ByteColor4">
        A color with alpha (red, green, blue, alpha).
        <field name="r" type="byte">Red color component.</field>
        <field name="g" type="byte">Green color component.</field>
        <field name="b" type="byte">Blue color component.</field>
        <field name="a" type="byte">Alpha color component.</field>
    </compound>

    <compound name="FilePath">
        A string that contains the path to a file.
        <field name="String" type="SizedString" ver2="20.0.0.5">The normal string.</field>
        <field name="Index" type="StringIndex" ver1="20.1.0.3">The string index.</field>
    </compound>

    <compound name="Footer">
        The NIF file footer.
        <field name="Num Roots" type="uint" ver1="3.3.0.13">The number of root references.</field>
        <field name="Roots" type="Ref" template="NiObject" arr1="Num Roots" ver1="3.3.0.13">List of root NIF objects. If there is a camera, for 1st person view, then this NIF object is referred to as well in this list, even if it is not a root object (usually we want the camera to be attached to the Bip Head node).</field>
    </compound>

    <compound name="LODRange">
        The distance range where a specific level of detail applies.
        <field name="Near Extent" type="float">Begining of range.</field>
        <field name="Far Extent" type="float">End of Range.</field>
        <field name="Unknown Ints" type="uint" arr1="3" ver2="3.1">Unknown (0,0,0).</field>
    </compound>

    <compound name="MatchGroup">
        Group of vertex indices of vertices that match.
        <field name="Num Vertices" type="ushort">Number of vertices in this group.</field>
        <field name="Vertex Indices" type="ushort" arr1="Num Vertices">The vertex indices.</field>
    </compound>
    
    <compound name="ByteVector3">
        A vector in 3D space (x,y,z).
        <field name="x" type="byte">First coordinate.</field>
        <field name="y" type="byte">Second coordinate.</field>
        <field name="z" type="byte">Third coordinate.</field>
    </compound>
    
    <compound name="HalfVector3">
        A vector in 3D space (x,y,z).
        <field name="x" type="hfloat">First coordinate.</field>
        <field name="y" type="hfloat">Second coordinate.</field>
        <field name="z" type="hfloat">Third coordinate.</field>
    </compound>

    <compound name="Vector3">
        A vector in 3D space (x,y,z).
        <field name="x" type="float">First coordinate.</field>
        <field name="y" type="float">Second coordinate.</field>
        <field name="z" type="float">Third coordinate.</field>
    </compound>

    <compound name="Vector4">
        A 4-dimensional vector.
        <field name="x" type="float">First coordinate.</field>
        <field name="y" type="float">Second coordinate.</field>
        <field name="z" type="float">Third coordinate.</field>
        <field name="w" type="float">Fourth coordinate.</field>
    </compound>

    <compound name="Quaternion">
        A quaternion.
        <field name="w" type="float" default="1.0">The w-coordinate.</field>
        <field name="x" type="float" default="0.0">The x-coordinate.</field>
        <field name="y" type="float" default="0.0">The y-coordinate.</field>
        <field name="z" type="float" default="0.0">The z-coordinate.</field>
    </compound>

    <compound name="hkQuaternion">
        A quaternion as it appears in the havok objects.
        <field name="x" type="float" default="0.0">The x-coordinate.</field>
        <field name="y" type="float" default="0.0">The y-coordinate.</field>
        <field name="z" type="float" default="0.0">The z-coordinate.</field>
        <field name="w" type="float" default="1.0">The w-coordinate.</field>
    </compound>

    <compound name="Matrix22">
        A 2x2 matrix of float values.  Stored in OpenGL column-major format.
        <field name="m11" type="float" default="1.0">Member 1,1 (top left)</field>
        <field name="m21" type="float" default="0.0">Member 2,1 (bottom left)</field>
        <field name="m12" type="float" default="0.0">Member 1,2 (top right)</field>
        <field name="m22" type="float" default="1.0">Member 2,2 (bottom right)</field>
    </compound>

    <compound name="Matrix33">
        A 3x3 rotation matrix; M^T M=identity, det(M)=1.    Stored in OpenGL column-major format.
        <field name="m11" type="float" default="1.0">Member 1,1 (top left)</field>
        <field name="m21" type="float" default="0.0">Member 2,1</field>
        <field name="m31" type="float" default="0.0">Member 3,1 (bottom left)</field>
        <field name="m12" type="float" default="0.0">Member 1,2</field>
        <field name="m22" type="float" default="1.0">Member 2,2</field>
        <field name="m32" type="float" default="0.0">Member 3,2</field>
        <field name="m13" type="float" default="0.0">Member 1,3 (top right)</field>
        <field name="m23" type="float" default="0.0">Member 2,3</field>
        <field name="m33" type="float" default="1.0">Member 3,3 (bottom left)</field>
    </compound>

    <compound name="Matrix34">
        A 3x4 transformation matrix.
        <field name="m11" type="float" default="1.0">The (1,1) element.</field>
        <field name="m21" type="float" default="0.0">The (2,1) element.</field>
        <field name="m31" type="float" default="0.0">The (3,1) element.</field>
        <field name="m12" type="float" default="0.0">The (1,2) element.</field>
        <field name="m22" type="float" default="1.0">The (2,2) element.</field>
        <field name="m32" type="float" default="0.0">The (3,2) element.</field>
        <field name="m13" type="float" default="0.0">The (1,3) element.</field>
        <field name="m23" type="float" default="0.0">The (2,3) element.</field>
        <field name="m33" type="float" default="1.0">The (3,3) element.</field>
        <field name="m14" type="float" default="0.0">The (1,4) element.</field>
        <field name="m24" type="float" default="0.0">The (2,4) element.</field>
        <field name="m34" type="float" default="0.0">The (3,4) element.</field>
    </compound>

    <compound name="Matrix44">
        A 4x4 transformation matrix.
        <field name="m11" type="float" default="1.0">The (1,1) element.</field>
        <field name="m21" type="float" default="0.0">The (2,1) element.</field>
        <field name="m31" type="float" default="0.0">The (3,1) element.</field>
        <field name="m41" type="float" default="0.0">The (4,1) element.</field>
        <field name="m12" type="float" default="0.0">The (1,2) element.</field>
        <field name="m22" type="float" default="1.0">The (2,2) element.</field>
        <field name="m32" type="float" default="0.0">The (3,2) element.</field>
        <field name="m42" type="float" default="0.0">The (4,2) element.</field>
        <field name="m13" type="float" default="0.0">The (1,3) element.</field>
        <field name="m23" type="float" default="0.0">The (2,3) element.</field>
        <field name="m33" type="float" default="1.0">The (3,3) element.</field>
        <field name="m43" type="float" default="0.0">The (4,3) element.</field>
        <field name="m14" type="float" default="0.0">The (1,4) element.</field>
        <field name="m24" type="float" default="0.0">The (2,4) element.</field>
        <field name="m34" type="float" default="0.0">The (3,4) element.</field>
        <field name="m44" type="float" default="1.0">The (4,4) element.</field>
    </compound>

    <compound name="hkMatrix3">
        A 3x3 Havok matrix stored in 4x3 due to memory alignment.
        <field name="m11" type="float" default="1.0"/>
        <field name="m12" type="float" />
        <field name="m13" type="float" />
        <field name="m14" type="float">Unused</field>
        <field name="m21" type="float" />
        <field name="m22" type="float" default="1.0"/>
        <field name="m23" type="float" />
        <field name="m24" type="float">Unused</field>
        <field name="m31" type="float" />
        <field name="m32" type="float" />
        <field name="m33" type="float" default="1.0"/>
        <field name="m34" type="float">Unused</field>
    </compound>

    <compound name="MipMap">
        Description of a mipmap within an NiPixelData object.
        <field name="Width" type="uint">Width of the mipmap image.</field>
        <field name="Height" type="uint">Height of the mipmap image.</field>
        <field name="Offset" type="uint">Offset into the pixel data array where this mipmap starts.</field>
    </compound>

    <compound name="NodeSet">
        A set of NiNode references.
        <field name="Num Nodes" type="uint">Number of node references that follow.</field>
        <field name="Nodes" type="Ptr" template="NiNode" arr1="Num Nodes">The list of NiNode references.</field>
    </compound>

    <compound name="ShortString" ver1="10.1.0.0">
        Another string format, for short strings.  Specific to Bethesda-specific header tags.
        <field name="Length" type="byte">The string length.</field>
        <field name="Value" type="char" arr1="Length">The string itself, null terminated (the null terminator is taken into account in the length byte).</field>
    </compound>

    <compound name="SkinInfo">
        NiBoneLODController::SkinInfo. Reference to shape and skin instance.
        <field name="Shape" type="Ptr" template="NiTriBasedGeom" />
        <field name="Skin Instance" type="Ref" template="NiSkinInstance" />
    </compound>

    <compound name="SkinInfoSet" ver1="10.0.1.0">
        A set of NiBoneLODController::SkinInfo.
        <field name="Num Skin Info" type="uint" />
        <field name="Skin Info" type="SkinInfo" arr1="Num Skin Info" />
    </compound>

    <compound name="BoneVertData">
        NiSkinData::BoneVertData. A vertex and its weight.
        <field name="Index" type="ushort">The vertex index, in the mesh.</field>
        <field name="Weight" type="float">The vertex weight - between 0.0 and 1.0</field>
    </compound>

    <compound name="AVObject">
        Used in NiDefaultAVObjectPalette.
        <field name="Name" type="SizedString">Object name.</field>
        <field name="AV Object" type="Ptr" template="NiAVObject">Object reference.</field>
    </compound>

    <compound name="ControlledBlock">
        In a .kf file, this links to a controllable object, via its name (or for version 10.2.0.0 and up, a link and offset to a NiStringPalette that contains the name), and a sequence of interpolators that apply to this controllable object, via links.
        For Controller ID, NiInterpController::GetCtlrID() virtual function returns a string formatted specifically for the derived type.
        For Interpolator ID, NiInterpController::GetInterpolatorID() virtual function returns a string formatted specifically for the derived type.
        The string formats are documented on the relevant niobject blocks.
        <field name="Target Name" type="string" ver2="10.1.0.103">Name of a controllable object in another NIF file.</field>
        <!-- NiControllerSequence::InterpArrayItem -->
        <field name="Interpolator" type="Ref" template="NiInterpolator" ver1="10.1.0.106" />
        <field name="Controller" type="Ref" template="NiTimeController" ver2="20.5.0.0" />
        <field name="Blend Interpolator" type="Ref" template="NiBlendInterpolator" ver1="10.1.0.104" ver2="10.1.0.110" />
        <field name="Blend Index" type="ushort" ver1="10.1.0.104" ver2="10.1.0.110" />
        <!-- Bethesda-only -->
        <field name="Priority" type="byte" ver1="10.1.0.106" vercond="(User Version 2 &gt; 0)">Idle animations tend to have low values for this, and high values tend to correspond with the important parts of the animations.</field>
        <!-- NiControllerSequence::IDTag, post-10.1.0.104 only -->
        <!-- Until 10.2 -->
        <field name="Node Name" type="string" ver1="10.1.0.104" ver2="10.1.0.113">The name of the animated NiAVObject.</field>
        <field name="Property Type" type="string" ver1="10.1.0.104" ver2="10.1.0.113">The RTTI type of the NiProperty the controller is attached to, if applicable.</field>
        <field name="Controller Type" type="string" ver1="10.1.0.104" ver2="10.1.0.113">The RTTI type of the NiTimeController.</field>
        <field name="Controller ID" type="string" ver1="10.1.0.104" ver2="10.1.0.113">An ID that can uniquely identify the controller among others of the same type on the same NiObjectNET.</field>
        <field name="Interpolator ID" type="string" ver1="10.1.0.104" ver2="10.1.0.113">An ID that can uniquely identify the interpolator among others of the same type on the same NiObjectNET.</field>
        <!-- From 10.2 to 20.1 -->
        <field name="String Palette" type="Ref" template="NiStringPalette" ver1="10.2.0.0" ver2="20.1.0.0">Refers to the NiStringPalette which contains the name of the controlled NIF object.</field>
        <field name="Node Name Offset" type="StringOffset" ver1="10.2.0.0" ver2="20.1.0.0">Offset in NiStringPalette to the name of the animated NiAVObject.</field>
        <field name="Property Type Offset" type="StringOffset" ver1="10.2.0.0" ver2="20.1.0.0">Offset in NiStringPalette to the RTTI type of the NiProperty the controller is attached to, if applicable.</field>
        <field name="Controller Type Offset" type="StringOffset" ver1="10.2.0.0" ver2="20.1.0.0">Offset in NiStringPalette to the RTTI type of the NiTimeController.</field>
        <field name="Controller ID Offset" type="StringOffset" ver1="10.2.0.0" ver2="20.1.0.0">Offset in NiStringPalette to an ID that can uniquely identify the controller among others of the same type on the same NiObjectNET.</field>
        <field name="Interpolator ID Offset" type="StringOffset" ver1="10.2.0.0" ver2="20.1.0.0">Offset in NiStringPalette to an ID that can uniquely identify the interpolator among others of the same type on the same NiObjectNET.</field>
        <!-- After 20.1 -->
        <field name="Node Name" type="string" ver1="20.1.0.1">The name of the animated NiAVObject.</field>
        <field name="Property Type" type="string" ver1="20.1.0.1">The RTTI type of the NiProperty the controller is attached to, if applicable.</field>
        <field name="Controller Type" type="string" ver1="20.1.0.1">The RTTI type of the NiTimeController.</field>
        <field name="Controller ID" type="string" ver1="20.1.0.1">An ID that can uniquely identify the controller among others of the same type on the same NiObjectNET.</field>
        <field name="Interpolator ID" type="string" ver1="20.1.0.1">An ID that can uniquely identify the interpolator among others of the same type on the same NiObjectNET.</field>
    </compound>

    <compound name="ExportInfo"><!--Same as BSStreamHeader-->
    	Information about how the file was exported
        <field name="Author" type="ShortString" />
        <field name="Process Script" type="ShortString" />
        <field name="Export Script" type="ShortString" />
    </compound>

    <!-- Don't use vercond in Header, it breaks niflib -->
    <compound name="Header">
        The NIF file header.
        <field name="Header String" type="HeaderString">'NetImmerse File Format x.x.x.x' (versions &lt;= 10.0.1.2) or 'Gamebryo File Format x.x.x.x' (versions &gt;= 10.1.0.0), with x.x.x.x the version written out. Ends with a newline character (0x0A).</field>
        <field name="Copyright" type="LineString" arr1="3" ver2="3.1.0.0" />
        <field name="Version" type="FileVersion" default="0x04000002" ver1="3.1.0.1">The NIF version, in hexadecimal notation: 0x04000002, 0x0401000C, 0x04020002, 0x04020100, 0x04020200, 0x0A000100, 0x0A010000, 0x0A020000, 0x14000004, ...</field>
        <field name="Endian Type" type="EndianType" default="ENDIAN_LITTLE" ver1="20.0.0.3">Determines the endianness of the data in the file.</field>
        <field name="User Version" type="ulittle32" ver1="10.0.1.8">An extra version number, for companies that decide to modify the file format.</field>
        <field name="Num Blocks" type="ulittle32" ver1="3.1.0.1">Number of file objects.</field>
        <!-- BSStreamHeader -->
        <field name="User Version 2" type="ulittle32" default="0" cond="((Version == 20.2.0.7) || (Version == 20.0.0.5) || ((Version &gt;= 10.0.1.2) &amp;&amp; (Version &lt;= 20.0.0.4) &amp;&amp; (User Version &lt;= 11))) &amp;&amp; (User Version &gt;= 3)" />
        <field name="Export Info" type="ExportInfo" cond="((Version == 20.2.0.7) || (Version == 20.0.0.5) || ((Version &gt;= 10.0.1.2) &amp;&amp; (Version &lt;= 20.0.0.4) &amp;&amp; (User Version &lt;= 11))) &amp;&amp; (User Version &gt;= 3)" />
        <field name="Max Filepath" type="ShortString" cond="(User Version 2 == 130)" />
        <!-- / BSStreamHeader -->
        <field name="Metadata" type="ByteArray" ver1="30.0.0.0" />
        <field name="Num Block Types" type="ushort" ver1="5.0.0.1">Number of object types in this NIF file.</field>
        <field name="Block Types" type="SizedString" arr1="Num Block Types" ver1="5.0.0.1">List of all object types used in this NIF file.</field>
        <field name="Block Type Index" type="BlockTypeIndex" arr1="Num Blocks" ver1="5.0.0.1">Maps file objects on their corresponding type: first file object is of type object_types[object_type_index[0]], the second of object_types[object_type_index[1]], etc.</field>
        <field name="Block Size" type="uint" arr1="Num Blocks" ver1="20.2.0.5">Array of block sizes?</field>
        <field name="Num Strings" type="uint" ver1="20.1.0.1">Number of strings.</field>
        <field name="Max String Length" type="uint" ver1="20.1.0.1">Maximum string length.</field>
        <field name="Strings" type="SizedString" arr1="Num Strings" ver1="20.1.0.1">Strings.</field>
        <field name="Num Groups" type="uint" default="0" ver1="5.0.0.6" />
        <field name="Groups" type="uint" arr1="Num Groups" ver1="5.0.0.6" />
    </compound>

    <compound name="StringPalette">
        A list of \\0 terminated strings.
        <field name="Palette" type="SizedString">A bunch of 0x00 seperated strings.</field>
        <field name="Length" type="uint">Length of the palette string is repeated here.</field>
    </compound>

    <compound name="TBC">
        Tension, bias, continuity.
        <field name="t" type="float">Tension.</field>
        <field name="b" type="float">Bias.</field>
        <field name="c" type="float">Continuity.</field>
    </compound>

    <compound name="Key" istemplate="1">
        A generic key with support for interpolation. Type 1 is normal linear interpolation, type 2 has forward and backward tangents, and type 3 has tension, bias and continuity arguments. Note that color4 and byte always seem to be of type 1.
        <field name="Time" type="float">Time of the key.</field>
        <field name="Value" type="TEMPLATE">The key value.</field>
        <field name="Forward" type="TEMPLATE" cond="ARG == 2">Key forward tangent.</field>
        <field name="Backward" type="TEMPLATE" cond="ARG == 2">The key backward tangent.</field>
        <field name="TBC" type="TBC" cond="ARG == 3">The TBC of the key.</field>
    </compound>

    <compound name="KeyGroup" istemplate="1">
        Array of vector keys (anything that can be interpolated, except rotations).
        <field name="Num Keys" type="uint">Number of keys in the array.</field>
        <field name="Interpolation" type="KeyType" cond="Num Keys != 0">The key type.</field>
        <field name="Keys" type="Key" arg="Interpolation" template="TEMPLATE" arr1="Num Keys">The keys.</field>
    </compound>

    <compound name="QuatKey" istemplate="1"><!-- TEMPLATE should always be Quaternion -->
        A special version of the key type used for quaternions.  Never has tangents.
        <field name="Time" type="float" ver2="10.1.0.0">Time the key applies.</field>
        <field name="Time" type="float" cond="ARG != 4" ver1="10.1.0.106">Time the key applies.</field>
        <field name="Value" type="TEMPLATE" cond="ARG != 4">Value of the key.</field>
        <field name="TBC" type="TBC" cond="ARG == 3">The TBC of the key.</field>
    </compound>

    <compound name="TexCoord">
        Texture coordinates (u,v). As in OpenGL; image origin is in the lower left corner.
        <field name="u" type="float">First coordinate.</field>
        <field name="v" type="float">Second coordinate.</field>
    </compound>
    
    <compound name="HalfTexCoord">
        Texture coordinates (u,v).
        <field name="u" type="hfloat">First coordinate.</field>
        <field name="v" type="hfloat">Second coordinate.</field>
    </compound>
    
    <enum name="TransformMethod" storage="uint" prefix="TM">
        Describes the order of scaling and rotation matrices. Translate, Scale, Rotation, Center are from TexDesc.
        Back = inverse of Center. FromMaya = inverse of the V axis with a positive translation along V of 1 unit.
        <option value="0" name="Maya Deprecated">Center * Rotation * Back * Translate * Scale</option>
        <option value="1" name="Max">Center * Scale * Rotation * Translate * Back</option>
        <option value="2" name="Maya">Center * Rotation * Back * FromMaya * Translate * Scale</option>
    </enum>

    <compound name="TexDesc">
        NiTexturingProperty::Map. Texture description.
        <field name="Image" type="Ref" template="NiImage" ver2="3.1">Link to the texture image.</field>
        <field name="Source" type="Ref" template="NiSourceTexture" ver1="3.3.0.13">NiSourceTexture object index.</field>
        <field name="Clamp Mode" type="TexClampMode" default="WRAP_S_WRAP_T" ver2="20.0.0.5">0=clamp S clamp T, 1=clamp S wrap T, 2=wrap S clamp T, 3=wrap S wrap T</field>
        <field name="Filter Mode" type="TexFilterMode" default="FILTER_TRILERP" ver2="20.0.0.5">0=nearest, 1=bilinear, 2=trilinear, 3=..., 4=..., 5=...</field>
        <field name="Flags" type="Flags" ver1="20.1.0.3">Texture mode flags; clamp and filter mode stored in upper byte with 0xYZ00 = clamp mode Y, filter mode Z.</field>
        <field name="Max Anisotropy" type="ushort" ver1="20.5.0.4" />
        <field name="UV Set" type="uint" default="0" ver2="20.0.0.5">The texture coordinate set in NiGeometryData that this texture slot will use.</field>
        <field name="PS2 L" type="short" default="0" ver2="10.4.0.1">L can range from 0 to 3 and are used to specify how fast a texture gets blurry.</field>
        <field name="PS2 K" type="short" default="-75" ver2="10.4.0.1">K is used as an offset into the mipmap levels and can range from -2047 to 2047. Positive values push the mipmap towards being blurry and negative values make the mipmap sharper.</field>
        <field name="Unknown1" type="ushort" ver2="4.1.0.12">Unknown, 0 or 0x0101?</field>
        <!-- NiTextureTransform -->
        <field name="Has Texture Transform" type="bool" default="false" ver1="10.1.0.0">Whether or not the texture coordinates are transformed.</field>
        <field name="Translation" type="TexCoord" cond="Has Texture Transform" ver1="10.1.0.0">The UV translation.</field>
        <field name="Scale" type="TexCoord" cond="Has Texture Transform" ver1="10.1.0.0" default="1.0, 1.0">The UV scale.</field>
        <field name="Rotation" type="float" default="0.0" cond="Has Texture Transform" ver1="10.1.0.0">The W axis rotation in texture space.</field>
        <field name="Transform Method" type="TransformMethod" default="0" cond="Has Texture Transform" ver1="10.1.0.0">Depending on the source, scaling can occur before or after rotation.</field>
        <field name="Center" type="TexCoord" cond="Has Texture Transform" ver1="10.1.0.0">The origin around which the texture rotates.</field>
    </compound>

    <compound name="ShaderTexDesc">
        NiTexturingProperty::ShaderMap. Shader texture description.
        <field name="Has Map" type="bool" />
        <field name="Map" type="TexDesc" cond="Has Map" />
        <field name="Map ID" type="uint" cond="Has Map">Unique identifier for the Gamebryo shader system.</field>
    </compound>

    <compound name="Triangle">
        List of three vertex indices.
        <field name="v1" type="ushort">First vertex index.</field>
        <field name="v2" type="ushort">Second vertex index.</field>
        <field name="v3" type="ushort">Third vertex index.</field>
    </compound>
	
	<bitflags name="VertexFlags" storage="ushort" prefix="VF">
		<!-- First 4 bits are unused -->
		<option value="4" name="Vertex" />          <!-- & 16 -->
		<option value="5" name="UVs" />             <!-- & 32 -->
		<option value="6" name="UVs_2" />           <!-- & 64 -->
		<option value="7" name="Normals" />         <!-- & 128 -->
		<option value="8" name="Tangents" />        <!-- & 256 -->
		<option value="9" name="Vertex_Colors" />   <!-- & 512 -->
		<option value="10" name="Skinned" />        <!-- & 1024 -->
		<option value="11" name="Land_Data" />      <!-- & 2048 -->
		<option value="12" name="Eye_Data" />       <!-- & 4096 -->
		<option value="13" name="Instance" />       <!-- & 8192 -->
		<option value="14" name="Full_Precision" /> <!-- & 16384 -->
		<!-- Last bit unused -->
	</bitflags>

    <bitfield name="BSVertexDesc" storage="uint64">
        <member width="4" pos="0" mask="0xF" name="Vertex Data Size" type="uint" />
        <member width="4" pos="4" mask="0xF0" name="Dynamic Vertex Size" type="uint" />
        <member width="4" pos="8" mask="0xF00" name="UV1 Offset" type="uint" />
        <member width="4" pos="12" mask="0xF000" name="UV2 Offset" type="uint" />
        <member width="4" pos="16" mask="0xF0000" name="Normal Offset" type="uint" />
        <member width="4" pos="20" mask="0xF00000" name="Tangent Offset" type="uint" />
        <member width="4" pos="24" mask="0xF000000" name="Color Offset" type="uint" />
        <member width="4" pos="28" mask="0xF0000000" name="Skinning Data Offset" type="uint" />
        <member width="4" pos="32" mask="0xF00000000" name="Landscape Data Offset" type="uint" />
        <member width="4" pos="36" mask="0xF000000000" name="Eye Data Offset" type="uint" />
        <member width="4" pos="40" mask="0xF0000000000" name="Unused 01" type="uint" />
        <member width="12" pos="44" mask="0xFFF00000000000" name="Vertex Attributes" type="VertexAttribute" />
    </bitfield>

	<compound name="BSVertexData">
		<field name="Vertex" type="HalfVector3" cond="((ARG &amp; 16) != 0) &amp;&amp; ((ARG &amp; 16384) == 0)" />
		<field name="Bitangent X" type="hfloat" cond="((ARG &amp; 16) != 0) &amp;&amp; ((ARG &amp; 256) != 0) &amp;&amp; ((ARG &amp; 16384) == 0)" />
		<field name="Unknown Short" type="ushort" cond="((ARG &amp; 16) != 0) &amp;&amp; ((ARG &amp; 256) == 0) &amp;&amp; ((ARG &amp; 16384) == 0)" />
		
		<field name="Vertex" type="Vector3" cond="((ARG &amp; 16) != 0) &amp;&amp; ((ARG &amp; 16384) != 0)" />
		<field name="Bitangent X" type="float" cond="((ARG &amp; 16) != 0) &amp;&amp; ((ARG &amp; 256) != 0) &amp;&amp; ((ARG &amp; 16384) != 0)" />
		<field name="Unknown Int" type="uint" cond="((ARG &amp; 16) != 0) &amp;&amp; ((ARG &amp; 256) == 0) &amp;&amp; ((ARG &amp; 16384) != 0)" />
		
		<field name="UV" type="HalfTexCoord" cond="((ARG &amp; 32) != 0)" />
		<field name="Normal" type="ByteVector3" cond="(ARG &amp; 128) != 0" />
		<field name="Bitangent Y" type="byte" cond="(ARG &amp; 128) != 0" />
		<field name="Tangent" type="ByteVector3" cond="((ARG &amp; 128) != 0) &amp;&amp; ((ARG &amp; 256) != 0)" />
		<field name="Bitangent Z" type="byte" cond="((ARG &amp; 128) != 0) &amp;&amp; ((ARG &amp; 256) != 0)" />
		<field name="Vertex Colors" type="ByteColor4" cond="(ARG &amp; 512) != 0" />
		<field name="Bone Weights" type="hfloat" arr1="4" cond="(ARG &amp; 1024) != 0" />
		<field name="Bone Indices" type="byte" arr1="4" cond="(ARG &amp; 1024) != 0" />
		<field name="Eye Data" type="float" cond="(ARG &amp; 4096) != 0" />
	</compound>

	<compound name="BSVertexDataSSE">
		<field name="Vertex" type="Vector3" cond="((ARG &amp; 16) != 0)" />
		<field name="Bitangent X" type="float" cond="((ARG &amp; 16) != 0) &amp;&amp; ((ARG &amp; 256) != 0)" />
		<field name="Unknown Int" type="int" cond="((ARG &amp; 16) != 0) &amp;&amp; (ARG &amp; 256) == 0" />
		<field name="UV" type="HalfTexCoord" cond="((ARG &amp; 32) != 0)" />
		<field name="Normal" type="ByteVector3" cond="(ARG &amp; 128) != 0" />
		<field name="Bitangent Y" type="byte" cond="(ARG &amp; 128) != 0" />
		<field name="Tangent" type="ByteVector3" cond="((ARG &amp; 128) != 0) &amp;&amp; ((ARG &amp; 256) != 0)" />
		<field name="Bitangent Z" type="byte" cond="((ARG &amp; 128) != 0) &amp;&amp; ((ARG &amp; 256) != 0)" />
		<field name="Vertex Colors" type="ByteColor4" cond="(ARG &amp; 512) != 0" />
		<field name="Bone Weights" type="hfloat" arr1="4" cond="(ARG &amp; 1024) != 0" />
		<field name="Bone Indices" type="byte" arr1="4" cond="(ARG &amp; 1024) != 0" />
		<field name="Eye Data" type="float" cond="(ARG &amp; 4096) != 0" />
	</compound>

    <compound name="SkinPartition" ver1="4.2.1.0">
        Skinning data for a submesh, optimized for hardware skinning. Part of NiSkinPartition.
        <field name="Num Vertices" type="ushort">Number of vertices in this submesh.</field>
        <field name="Num Triangles" type="ushort" calculated="1">Number of triangles in this submesh.</field>
        <field name="Num Bones" type="ushort">Number of bones influencing this submesh.</field>
        <field name="Num Strips" type="ushort">Number of strips in this submesh (zero if not stripped).</field>
        <field name="Num Weights Per Vertex" type="ushort">Number of weight coefficients per vertex. The Gamebryo engine seems to work well only if this number is equal to 4, even if there are less than 4 influences per vertex.</field>
        <field name="Bones" type="ushort" arr1="Num Bones">List of bones.</field>
        <field name="Has Vertex Map" type="bool" ver1="10.1.0.0">Do we have a vertex map?</field>
        <field name="Vertex Map" type="ushort" arr1="Num Vertices" ver2="10.0.1.2">Maps the weight/influence lists in this submesh to the vertices in the shape being skinned.</field>
        <field name="Vertex Map" type="ushort" arr1="Num Vertices" cond="Has Vertex Map" ver1="10.1.0.0">Maps the weight/influence lists in this submesh to the vertices in the shape being skinned.</field>
        <field name="Has Vertex Weights" type="bool" ver1="10.1.0.0">Do we have vertex weights?</field>
        <field name="Vertex Weights" type="float" arr1="Num Vertices" arr2="Num Weights Per Vertex" ver2="10.0.1.2">The vertex weights.</field>
        <field name="Vertex Weights" type="float" arr1="Num Vertices" arr2="Num Weights Per Vertex" cond="Has Vertex Weights" ver1="10.1.0.0">The vertex weights.</field>
        <field name="Strip Lengths" type="ushort" arr1="Num Strips">The strip lengths.</field>
        <field name="Has Faces" type="bool" ver1="10.1.0.0">Do we have triangle or strip data?</field>
        <field name="Strips" type="ushort" arr1="Num Strips" arr2="Strip Lengths" cond="Num Strips != 0" ver2="10.0.1.2">The strips.</field>
        <field name="Strips" type="ushort" arr1="Num Strips" arr2="Strip Lengths" cond="(Has Faces) &amp;&amp; (Num Strips != 0)" ver1="10.1.0.0">The strips.</field>
        <field name="Triangles" type="Triangle" arr1="Num Triangles" cond="Num Strips == 0" ver2="10.0.1.2">The triangles.</field>
        <field name="Triangles" type="Triangle" arr1="Num Triangles" cond="(Has Faces) &amp;&amp; (Num Strips == 0)" ver1="10.1.0.0">The triangles.</field>
        <field name="Has Bone Indices" type="bool">Do we have bone indices?</field>
        <field name="Bone Indices" type="byte" arr1="Num Vertices" arr2="Num Weights Per Vertex" cond="Has Bone Indices">Bone indices, they index into 'Bones'.</field>
		<field name="Unknown Short" type="ushort" vercond="User Version 2 &gt; 34">Unknown</field>
		<field name="Vertex Desc" type="BSVertexDesc" ver="20.2.0.7" userver2="100" />
		<field name="Triangles Copy" type="Triangle" arr1="Num Triangles" ver="20.2.0.7" userver2="100" />
        <!-- related to the file posted in tracker item #3117836:
            http://sourceforge.net/tracker/?func=detail&aid=3117836&group_id=149157&atid=776343 -->
        <!--<field name="Unknown 83 C3" type="ushort" ver1="10.2.0.0" ver2="10.2.0.0" vercond="User Version == 1" ></field>
        <field name="Unknown 00 00 1" type="ushort" ver1="10.2.0.0" ver2="10.2.0.0" vercond="User Version == 1"></field>
        <field name="Num Vertices 2" type="ushort" ver1="10.2.0.0" ver2="10.2.0.0" vercond="User Version == 1"></field>
        <field name="Unknown 00 00 2" type="ushort" ver1="10.2.0.0" ver2="10.2.0.0" vercond="User Version == 1"></field>
        <field name="Unknown 00 00 3" type="ushort" ver1="10.2.0.0" ver2="10.2.0.0" vercond="User Version == 1"></field>
        <field name="Unknown 00 00 4" type="ushort" ver1="10.2.0.0" ver2="10.2.0.0" vercond="User Version == 1"></field>
        <field name="Unknown Arr 1" type="SkinPartitionUnknownItem1" arr1="Num Vertices 2" ver1="10.2.0.0" ver2="10.2.0.0" vercond="User Version == 1"></field>-->
    </compound>

    <!-- related to the file posted in tracker item #3117836:
        http://sourceforge.net/tracker/?func=detail&aid=3117836&group_id=149157&atid=776343 -->
    <!--<compound name="SkinPartitionUnknownItem1">
        <field name="Unknown Flags" type="uint"></field>
        <field name="f1" type="float"></field>
        <field name="f2" type="float"></field>
        <field name="f3" type="float"></field>
        <field name="f4" type="float"></field>
        <field name="f5" type="float"></field>
    </compound>-->

    <compound name="NiPlane">
        A plane.
        <field name="Normal" type="Vector3">The plane normal.</field>
        <field name="Constant" type="float">The plane constant.</field>
    </compound>

    <compound name="NiBound">
        A sphere.
        <field name="Center" type="Vector3">The sphere's center.</field>
        <field name="Radius" type="float">The sphere's radius.</field>
    </compound>

    <compound name="NiQuatTransform">
        <field name="Translation" type="Vector3" />
        <field name="Rotation" type="Quaternion" />
        <field name="Scale" type="float" default="1.0" />
        <field name="TRS Valid" type="bool" arr1="3" ver2="10.1.0.109">Whether each transform component is valid.</field>
    </compound>

    <compound name="NiTransform">
        <field name="Rotation" type="Matrix33">The rotation part of the transformation matrix.</field>
        <field name="Translation" type="Vector3">The translation vector.</field>
        <field name="Scale" type="float" default="1.0">Scaling part (only uniform scaling is supported).</field>
    </compound>

	<bitflags name="FurnitureEntryPoints" storage="ushort">
		Bethesda Animation. Furniture entry points. It specifies the direction(s) from where the actor is able to enter (and leave) the position.
		<option value="0" name="Front">front entry point</option>
		<option value="1" name="Behind">behind entry point</option>
		<option value="2" name="Right">right entry point</option>
		<option value="3" name="Left">left entry point</option>
		<option value="4" name="Up">up entry point - unknown function. Used on some beds in Skyrim, probably for blocking of sleeping position.</option>
	</bitflags>

	<enum name="AnimationType" storage="ushort">
		Bethesda Animation. Animation type used on this position. This specifies the function of this position.
		<option value="1" name="Sit">Actor use sit animation.</option>
		<option value="2" name="Sleep">Actor use sleep animation.</option>
		<option value="4" name="Lean">Used for lean animations?</option>
	</enum>

    <compound name="FurniturePosition">
        Bethesda Animation. Describes a furniture position?
        <field name="Offset" type="Vector3">Offset of furniture marker.</field>
        <field name="Orientation" type="ushort" vercond="User Version 2 &lt;= 34">Furniture marker orientation.</field>
        <field name="Position Ref 1" type="byte" vercond="User Version 2 &lt;= 34">Refers to a furnituremarkerxx.nif file. Always seems to be the same as Position Ref 2.</field>
        <field name="Position Ref 2" type="byte" vercond="User Version 2 &lt;= 34">Refers to a furnituremarkerxx.nif file. Always seems to be the same as Position Ref 1.</field>
        <field name="Heading" type="float" vercond="User Version 2 &gt; 34">Similar to Orientation, in float form.</field>
        <field name="Animation Type" type="AnimationType" vercond="User Version 2 &gt; 34">Unknown</field>
        <field name="Entry Properties" type="FurnitureEntryPoints" vercond="User Version 2 &gt; 34">Unknown/unused in nif?</field>
    </compound>

    <compound name="TriangleData">
        Bethesda Havok. A triangle with extra data used for physics.
        <field name="Triangle" type="Triangle">The triangle.</field>
        <field name="Welding Info" type="ushort">Additional havok information on how triangles are welded.</field>
        <field name="Normal" type="Vector3" ver2="20.0.0.5">This is the triangle's normal.</field>
    </compound>

    <compound name="Morph">
        Geometry morphing data component.
        <field name="Frame Name" type="string" ver1="10.1.0.106">Name of the frame.</field>
        <field name="Num Keys" type="uint" ver2="10.1.0.0">The number of morph keys that follow.</field>
        <field name="Interpolation" type="KeyType" ver2="10.1.0.0">Unlike most objects, the presense of this value is not conditional on there being keys.</field>
        <field name="Keys" type="Key" arg="Interpolation" template="float" arr1="Num Keys" ver2="10.1.0.0">The morph key frames.</field>
        <field name="Unknown Int" type="uint" ver1="10.1.0.106" ver2="10.2.0.0">Unknown.</field>
        <field name="Unknown Int" type="uint" ver1="20.0.0.4" ver2="20.0.0.5" userver="0">Unknown.</field>
        <field name="Vectors" type="Vector3" arr1="ARG">Morph vectors.</field>
    </compound>

    <compound name="Particle"><!--Same as NiParticleInfo-->
        particle array entry
        <field name="Velocity" type="Vector3">Particle velocity</field>
        <field name="Rotation Axis" type="Vector3">Unknown</field>
        <field name="Lifetime" type="float">The particle age.</field>
        <field name="Lifespan" type="float">Maximum age of the particle.</field>
        <field name="Timestamp" type="float">Timestamp of the last update.</field>
        <field name="Spawn Generation" type="ushort" default="0" />
        <field name="Vertex ID" type="ushort">Particle/vertex index matches array index</field>
    </compound>

    <compound name="BoneData">
        NiSkinData::BoneData. Skinning data component.
        <field name="Skin Transform" type="NiTransform">Offset of the skin from this bone in bind position.</field>
        <field name="Bounding Sphere Offset" type="Vector3">Translation offset of a bounding sphere holding all vertices. (Note that its a Sphere Containing Axis Aligned Box not a minimum volume Sphere)</field>
        <field name="Bounding Sphere Radius" type="float">Radius for bounding sphere holding all vertices.</field>
        <field name="Unknown 13 Shorts" type="short" arr1="13" ver1="20.3.0.9" ver2="20.3.0.9" userver="131072">Unknown, always 0?</field>
        <field name="Num Vertices" type="ushort">Number of weighted vertices.</field>
        <field name="Vertex Weights" type="BoneVertData" arr1="Num Vertices" ver2="4.2.1.0">The vertex weights.</field>
        <field name="Vertex Weights" type="BoneVertData" arr1="Num Vertices" ver1="4.2.2.0" cond="ARG != 0">The vertex weights.</field>
    </compound>

    <compound name="HavokFilter">
        Bethesda Havok. Collision filter info representing Layer, Flags, Part Number, and Group all combined into one uint.
        <field name="Layer" suffix="OB" type="OblivionLayer" default="OL_STATIC" ver1="20.0.0.4" ver2="20.0.0.5">The layer the collision belongs to.</field>
        <field name="Layer" suffix="FO" type="Fallout3Layer" default="FOL_STATIC" vercond="(Version == 20.2.0.7) &amp;&amp; (User Version 2 &lt;= 34)">The layer the collision belongs to.</field>
        <field name="Layer" suffix="SK" type="SkyrimLayer" default="SKYL_STATIC" vercond="(Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 34)">The layer the collision belongs to.</field>

        <field name="Flags and Part Number" type="byte" default="0">FLAGS are stored in highest 3 bits:
        	Bit 7: sets the LINK property and controls whether this body is physically linked to others.
        	Bit 6: turns collision off (not used for Layer BIPED).
        	Bit 5: sets the SCALED property.

        	PART NUMBER is stored in bits 0-4. Used only when Layer is set to BIPED.

        	Part Numbers for Oblivion, Fallout 3, Skyrim:
        	0 - OTHER
        	1 - HEAD
        	2 - BODY
        	3 - SPINE1
        	4 - SPINE2
        	5 - LUPPERARM
        	6 - LFOREARM
        	7 - LHAND
        	8 - LTHIGH
        	9 - LCALF
        	10 - LFOOT
        	11 - RUPPERARM
        	12 - RFOREARM
        	13 - RHAND
        	14 - RTHIGH
        	15 - RCALF
        	16 - RFOOT
        	17 - TAIL
        	18 - SHIELD
        	19 - QUIVER
        	20 - WEAPON
        	21 - PONYTAIL
        	22 - WING
        	23 - PACK
        	24 - CHAIN
        	25 - ADDONHEAD
        	26 - ADDONCHEST
        	27 - ADDONARM
        	28 - ADDONLEG
        	29-31 - NULL
        </field>
        <field name="Group" type="ushort" />
    </compound>

    <compound name="HavokMaterial">
        Bethesda Havok. Material wrapper for varying material enums by game.
        <field name="Material" suffix="OB" type="OblivionHavokMaterial" ver1="20.0.0.4" ver2="20.0.0.5">The material of the shape.</field>
        <field name="Material" suffix="FO" type="Fallout3HavokMaterial" vercond="(Version == 20.2.0.7) &amp;&amp; (User Version 2 &lt;= 34)">The material of the shape.</field>
        <field name="Material" suffix="SK" type="SkyrimHavokMaterial" vercond="(Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 34)">The material of the shape.</field>
    </compound>

    <compound name="OblivionSubShape"><!--Same as hkSubPartData-->
        Bethesda Havok. Havok Information for packed TriStrip shapes.
        <field name="Havok Filter" type="HavokFilter" />
        <field name="Num Vertices" type="uint">The number of vertices that form this sub shape.</field>
        <field name="Material" type="HavokMaterial">The material of the subshape.</field>
    </compound>

    <compound name="hkAabb" versions="#BETHESDA#">
        Havok AABB using min/max coordinates instead of center/half extents.
        <field name="Min" type="Vector4">Coordinates of the corner with the lowest numerical values.</field>
        <field name="Max" type="Vector4">Coordinates of the corner with the highest numerical values.</field>
    </compound>

    <enum name="ConstraintPriority" storage="uint" versions="#BETHESDA#">
        hkpConstraintInstance::ConstraintPriority. Priority used for the constraint.
        Values 2, 4, and 5 are unused or internal use only.
        <option value="0" name="PRIORITY_INVALID" />
        <option value="1" name="PRIORITY_PSI">Constraint is only solved at regular physics time steps.</option>
        <option value="3" name="PRIORITY_TOI">Constraint is also solved at time of impact events.</option>
    </enum>

    <compound name="bhkConstraintCInfo" size="16" versions="#BETHESDA#">
        Bethesda extension of hkpConstraintInstance.
        <field name="Num Entities" type="uint" default="2">Always 2 (Hardcoded). Number of bodies affected by this constraint.</field>
        <field name="Entity A" type="Ptr" template="bhkEntity">The entity affected by this constraint.</field>
        <field name="Entity B" type="Ptr" template="bhkEntity">The entity affected by this constraint.</field>
        <field name="Priority" type="ConstraintPriority" default="PRIORITY_PSI">Either PSI or TOI priority. TOI is higher priority.</field>
    </compound>

    <compound name="bhkConstraintChainCInfo" versions="#BETHESDA#">
        Bethesda extension of hkpConstraintChainInstance.
        <field name="Num Chained Entities" type="uint" />
        <field name="Chained Entities" type="Ptr" template="bhkRigidBody" arr1="Num Chained Entities" />
        <field name="Constraint Info" type="bhkConstraintCInfo" />
    </compound>

    <compound name="bhkPositionConstraintMotor">
        Bethesda extension of hkpPositionConstraintMotor.
        A motor which tries to reach a desired position/angle given a max force and recovery speed.
        This motor is a good choice for driving a ragdoll to a given pose.
        <field name="Min Force" type="float" default="-1000000.0">Minimum motor force</field>
        <field name="Max Force" type="float" default="1000000.0">Maximum motor force</field>
        <field name="Tau" type="float" default="0.8">Relative stiffness</field>
        <field name="Damping" type="float" default="1.0">Motor damping value</field>
        <field name="Proportional Recovery Velocity" type="float" default="2.0">A factor of the current error to calculate the recovery velocity</field>
        <field name="Constant Recovery Velocity" type="float" default="1.0">A constant velocity which is used to recover from errors</field>
        <field name="Motor Enabled" type="bool" default="0">Is Motor enabled</field>
    </compound>

    <compound name="bhkVelocityConstraintMotor">
        Bethesda extension of hkpVelocityConstraintMotor. Tries to reach and keep a desired target velocity.
        <field name="Min Force" type="float" default="-1000000.0">Minimum motor force</field>
        <field name="Max Force" type="float" default="1000000.0">Maximum motor force</field>
        <field name="Tau" type="float" default="0.0">Relative stiffness</field>
        <field name="Target Velocity" type="float" default="0.0" />
        <field name="Use Velocity Target" type="bool" default="0" />
        <field name="Motor Enabled" type="bool" default="0">Is Motor enabled</field>
    </compound>

    <compound name="bhkSpringDamperConstraintMotor">
        Bethesda extension of hkpSpringDamperConstraintMotor.
        Tries to reach a given target position using an angular spring which has a spring constant.
        <field name="Min Force" type="float" default="-1000000.0">Minimum motor force</field>
        <field name="Max Force" type="float" default="1000000.0">Maximum motor force</field>
        <field name="Spring Constant" type="float" default="0.0">The spring constant in N/m</field>
        <field name="Spring Damping" type="float" default="0.0">The spring damping in Nsec/m</field>
        <field name="Motor Enabled" type="bool" default="0">Is Motor enabled</field>
    </compound>
    
    <enum name="MotorType" storage="byte">
        <option value="0" name="MOTOR_NONE" />
        <option value="1" name="MOTOR_POSITION" />
        <option value="2" name="MOTOR_VELOCITY" />
        <option value="3" name="MOTOR_SPRING" />
    </enum>

    <compound name="MotorDescriptor">
        <field name="Type" type="MotorType" default="MOTOR_NONE" />
        <field name="Position Motor" type="bhkPositionConstraintMotor" cond="Type == 1" />
        <field name="Velocity Motor" type="bhkVelocityConstraintMotor" cond="Type == 2" />
        <field name="Spring Damper Motor" type="bhkSpringDamperConstraintMotor" cond="Type == 3" />
    </compound>

    <compound name="RagdollDescriptor">
        This constraint defines a cone in which an object can rotate. The shape of the cone can be controlled in two (orthogonal) directions.
        <!-- Oblivion and Fallout 3, Havok 550 -->
        <field name="Pivot A" type="Vector4" vercond="User Version 2 &lt;= 16">The point where the constraint is attached to its parent rigidbody.</field>
        <field name="Plane A" type="Vector4" vercond="User Version 2 &lt;= 16">Defines the orthogonal plane in which the body can move, the orthogonal directions in which the shape can be controlled (the direction orthogonal on this one and Twist A).</field>
        <field name="Twist A" type="Vector4" vercond="User Version 2 &lt;= 16">Central directed axis of the cone in which the object can rotate. Orthogonal on Plane A.</field>
        <field name="Pivot B" type="Vector4" vercond="User Version 2 &lt;= 16">The point where the constraint is attached to the other rigidbody.</field>
        <field name="Plane B" type="Vector4" vercond="User Version 2 &lt;= 16">Defines the orthogonal plane in which the shape can be controlled (the direction orthogonal on this one and Twist B).</field>
        <field name="Twist B" type="Vector4" vercond="User Version 2 &lt;= 16">Central directed axis of the cone in which the object can rotate. Orthogonal on Plane B.</field>

        <!-- Fallout 3 and later, Havok 660 and 2010 -->
        <field name="Twist A" type="Vector4" vercond="User Version 2 &gt; 16">Central directed axis of the cone in which the object can rotate. Orthogonal on Plane A.</field>
        <field name="Plane A" type="Vector4" vercond="User Version 2 &gt; 16">Defines the orthogonal plane in which the body can move, the orthogonal directions in which the shape can be controlled (the direction orthogonal on this one and Twist A).</field>
        <field name="Motor A" type="Vector4" vercond="User Version 2 &gt; 16">Defines the orthogonal directions in which the shape can be controlled (namely in this direction, and in the direction orthogonal on this one and Twist A).</field>
        <field name="Pivot A" type="Vector4" vercond="User Version 2 &gt; 16">Point around which the object will rotate. Defines the orthogonal directions in which the shape can be controlled (namely in this direction, and in the direction orthogonal on this one and Twist A).</field>
        <field name="Twist B" type="Vector4" vercond="User Version 2 &gt; 16">Central directed axis of the cone in which the object can rotate. Orthogonal on Plane B.</field>
        <field name="Plane B" type="Vector4" vercond="User Version 2 &gt; 16">Defines the orthogonal plane in which the body can move, the orthogonal directions in which the shape can be controlled (the direction orthogonal on this one and Twist A).</field>
        <field name="Motor B" type="Vector4" vercond="User Version 2 &gt; 16">Defines the orthogonal directions in which the shape can be controlled (namely in this direction, and in the direction orthogonal on this one and Twist A).</field>
        <field name="Pivot B" type="Vector4" vercond="User Version 2 &gt; 16">Defines the orthogonal directions in which the shape can be controlled (namely in this direction, and in the direction orthogonal on this one and Twist A).</field>

        <field name="Cone Max Angle" type="float">Maximum angle the object can rotate around the vector orthogonal on Plane A and Twist A relative to the Twist A vector. Note that Cone Min Angle is not stored, but is simply minus this angle.</field>
        <field name="Plane Min Angle" type="float">Minimum angle the object can rotate around Plane A, relative to Twist A.</field>
        <field name="Plane Max Angle" type="float">Maximum angle the object can rotate around Plane A, relative to Twist A.</field>
        <field name="Twist Min Angle" type="float">Minimum angle the object can rotate around Twist A, relative to Plane A.</field>
        <field name="Twist Max Angle" type="float">Maximum angle the object can rotate around Twist A, relative to Plane A.</field>
        <field name="Max Friction" type="float">Maximum friction, typically 0 or 10. In Fallout 3, typically 100.</field>

        <field name="Motor" type="MotorDescriptor" ver1="20.2.0.7" vercond="User Version 2 &gt; 16" />
    </compound>

    <compound name="LimitedHingeDescriptor">
    	This constraint allows rotation about a specified axis, limited by specified boundaries.
    
        <!-- Oblivion and Fallout 3, Havok 550 -->
        <field name="Pivot A" type="Vector4" vercond="User Version 2 &lt;= 16">Pivot point around which the object will rotate.</field>
        <field name="Axle A" type="Vector4" vercond="User Version 2 &lt;= 16">Axis of rotation.</field>
        <field name="Perp2 Axle In A1" type="Vector4" vercond="User Version 2 &lt;= 16">Vector in the rotation plane which defines the zero angle.</field>
        <field name="Perp2 Axle In A2" type="Vector4" vercond="User Version 2 &lt;= 16">Vector in the rotation plane, orthogonal on the previous one, which defines the positive direction of rotation. This is always the vector product of Axle A and Perp2 Axle In A1.</field>
        <field name="Pivot B" type="Vector4" vercond="User Version 2 &lt;= 16">Pivot A in second entity coordinate system.</field>
        <field name="Axle B" type="Vector4" vercond="User Version 2 &lt;= 16">Axle A in second entity coordinate system.</field>
        <field name="Perp2 Axle In B2" type="Vector4" vercond="User Version 2 &lt;= 16">Perp2 Axle In A2 in second entity coordinate system.</field>

        <!-- Fallout 3 and later, Havok 660 and 2010 -->
        <field name="Axle A" type="Vector4" vercond="User Version 2 &gt; 16">Axis of rotation.</field>
        <field name="Perp2 Axle In A1" type="Vector4" vercond="User Version 2 &gt; 16">Vector in the rotation plane which defines the zero angle.</field>
        <field name="Perp2 Axle In A2" type="Vector4" vercond="User Version 2 &gt; 16">Vector in the rotation plane, orthogonal on the previous one, which defines the positive direction of rotation. This is always the vector product of Axle A and Perp2 Axle In A1.</field>
        <field name="Pivot A" type="Vector4" vercond="User Version 2 &gt; 16">Pivot point around which the object will rotate.</field>
        <field name="Axle B" type="Vector4" vercond="User Version 2 &gt; 16">Axle A in second entity coordinate system.</field>
        <field name="Perp2 Axle In B1" type="Vector4" vercond="User Version 2 &gt; 16">Perp2 Axle In A1 in second entity coordinate system.</field>
        <field name="Perp2 Axle In B2" type="Vector4" vercond="User Version 2 &gt; 16">Perp2 Axle In A2 in second entity coordinate system.</field>
        <field name="Pivot B" type="Vector4" vercond="User Version 2 &gt; 16">Pivot A in second entity coordinate system.</field>

        <field name="Min Angle" type="float">Minimum rotation angle.</field>
        <field name="Max Angle" type="float">Maximum rotation angle.</field>
        <field name="Max Friction" type="float">Maximum friction, typically either 0 or 10. In Fallout 3, typically 100.</field>

        <field name="Motor" type="MotorDescriptor" ver1="20.2.0.7" vercond="User Version 2 &gt; 16" />
    </compound>

    <compound name="HingeDescriptor">
    	This constraint allows rotation about a specified axis. 
    	
        <!-- Oblivion -->
        <field name="Pivot A" type="Vector4" ver2="20.0.0.5">Pivot point around which the object will rotate.</field>
        <field name="Perp2 Axle In A1" type="Vector4" ver2="20.0.0.5">Vector in the rotation plane which defines the zero angle.</field>
        <field name="Perp2 Axle In A2" type="Vector4" ver2="20.0.0.5">Vector in the rotation plane, orthogonal on the previous one, which defines the positive direction of rotation.</field>
        <field name="Pivot B" type="Vector4" ver2="20.0.0.5">Pivot A in second entity coordinate system.</field>
        <field name="Axle B" type="Vector4" ver2="20.0.0.5">Axle A (vector orthogonal on Perp2 Axles) in second entity coordinate system.</field>

        <!-- Fallout 3 -->
        <field name="Axle A" type="Vector4" ver1="20.2.0.7">Axis of rotation.</field>
        <field name="Perp2 Axle In A1" type="Vector4" ver1="20.2.0.7">Vector in the rotation plane which defines the zero angle.</field>
        <field name="Perp2 Axle In A2" type="Vector4" ver1="20.2.0.7">Vector in the rotation plane, orthogonal on the previous one, which defines the positive direction of rotation. This is always the vector product of Axle A and Perp2 Axle In A1.</field>
        <field name="Pivot A" type="Vector4" ver1="20.2.0.7">Pivot point around which the object will rotate.</field>
        <field name="Axle B" type="Vector4" ver1="20.2.0.7">Axle A in second entity coordinate system.</field>
        <field name="Perp2 Axle In B1" type="Vector4" ver1="20.2.0.7">Perp2 Axle In A1 in second entity coordinate system.</field>
        <field name="Perp2 Axle In B2" type="Vector4" ver1="20.2.0.7">Perp2 Axle In A2 in second entity coordinate system.</field>
        <field name="Pivot B" type="Vector4" ver1="20.2.0.7">Pivot A in second entity coordinate system.</field>

        <!-- no friction -->
    </compound>

    <compound name="BallAndSocketDescriptor">
        <field name="Pivot A" type="Vector4">Pivot point in the local space of entity A.</field>
        <field name="Pivot B" type="Vector4">Pivot point in the local space of entity B.</field>
    </compound>

    <compound name="PrismaticDescriptor">
        <!-- In reality Havok loads these as Transform A and Transform B using hkTransform -->
        <!-- Oblivion (Order is a guess) -->
        <field name="Pivot A" type="Vector4" ver2="20.0.0.5">Pivot.</field>
        <field name="Rotation A" type="Vector4" ver2="20.0.0.5">Rotation axis.</field>
        <field name="Plane A" type="Vector4" ver2="20.0.0.5">Plane normal. Describes the plane the object is able to move on.</field>
        <field name="Sliding A" type="Vector4" ver2="20.0.0.5">Describes the axis the object is able to travel along. Unit vector.</field>
        <field name="Pivot B" type="Vector4" ver2="20.0.0.5">Pivot in B coordinates.</field>
        <field name="Rotation B" type="Vector4" ver2="20.0.0.5">Rotation axis.</field>
        <field name="Plane B" type="Vector4" ver2="20.0.0.5">Plane normal. Describes the plane the object is able to move on in B coordinates.</field>
        <field name="Sliding B" type="Vector4" ver2="20.0.0.5">Describes the axis the object is able to travel along in B coordinates. Unit vector.</field>
        
        <!-- Fallout 3 -->
        <field name="Sliding A" type="Vector4" ver1="20.2.0.7">Describes the axis the object is able to travel along. Unit vector.</field>
        <field name="Rotation A" type="Vector4" ver1="20.2.0.7">Rotation axis.</field>
        <field name="Plane A" type="Vector4" ver1="20.2.0.7">Plane normal. Describes the plane the object is able to move on.</field>
        <field name="Pivot A" type="Vector4" ver1="20.2.0.7">Pivot.</field>
        <field name="Sliding B" type="Vector4" ver1="20.2.0.7">Describes the axis the object is able to travel along in B coordinates. Unit vector.</field>
        <field name="Rotation B" type="Vector4" ver1="20.2.0.7">Rotation axis.</field>
        <field name="Plane B" type="Vector4" ver1="20.2.0.7">Plane normal. Describes the plane the object is able to move on in B coordinates.</field>
        <field name="Pivot B" type="Vector4" ver1="20.2.0.7">Pivot in B coordinates.</field>

        <field name="Min Distance" type="float">Describe the min distance the object is able to travel.</field>
        <field name="Max Distance" type="float">Describe the max distance the object is able to travel.</field>
        <field name="Friction" type="float" >Friction.</field>

        <field name="Motor" type="MotorDescriptor" ver1="20.2.0.7" vercond="User Version 2 &gt; 16" />
    </compound>

    <compound name="StiffSpringDescriptor">
        bhkStiffSpringConstraint serialization data. Holds two bodies at a specified distance from one another.
        <field name="Pivot A" type="Vector4" />
        <field name="Pivot B" type="Vector4" />
        <field name="Length" type="float" />
    </compound>

    <compound name="OldSkinData">
        Used to store skin weights in NiTriShapeSkinController.
        <field name="Vertex Weight" type="float">The amount that this bone affects the vertex.</field>
        <field name="Vertex Index" type="ushort">The index of the vertex that this weight applies to.</field>
        <field name="Unknown Vector" type="Vector3">Unknown.  Perhaps some sort of offset?</field>
    </compound>

    <enum name="ImageType" storage="uint">
        Determines how the raw image data is stored in NiRawImageData.
        <option value="1" name="RGB">Colors store red, blue, and green components.</option>
        <option value="2" name="RGBA">Colors store red, blue, green, and alpha components.</option>
    </enum>

    <compound name="BoxBV">
        Box Bounding Volume
        <field name="Center" type="Vector3" />
        <field name="Axis" type="Vector3" arr1="3" />
        <field name="Extent" type="Vector3" />
    </compound>

    <compound name="CapsuleBV">
        Capsule Bounding Volume
        <field name="Center" type="Vector3" />
        <field name="Origin" type="Vector3" />
        <field name="Extent" type="float" />
        <field name="Radius" type="float" />
    </compound>

    <compound name="HalfSpaceBV">
        <field name="Plane" type="NiPlane" />
        <field name="Center" type="Vector3" />
    </compound>

    <compound name="BoundingVolume">
        <field name="Collision Type" type="BoundVolumeType">Type of collision data.</field>
        <field name="Sphere" type="NiBound" cond="Collision Type == 0" />
        <field name="Box" type="BoxBV" cond="Collision Type == 1" />
        <field name="Capsule" type="CapsuleBV" cond="Collision Type == 2" />
        <field name="Union" type="UnionBV" cond="Collision Type == 4" />
        <field name="Half Space" type="HalfSpaceBV" cond="Collision Type == 5" />
    </compound>

    <compound name="UnionBV">
        <field name="Num BV" type="uint" />
        <field name="Bounding Volumes" type="BoundingVolume" arr1="Num BV" />
    </compound>

    <compound name="MorphWeight">
        <field name="Interpolator" type="Ref" template="NiInterpolator" />
        <field name="Weight" type="float" />
    </compound>

    <compound name="BoneTransform">
        Transformation data for the bone at this index in bhkPoseArray.
        <field name="Translation" type="Vector3" />
        <field name="Rotation" type="hkQuaternion" />
        <field name="Scale" type="Vector3" />
    </compound>

    <compound name="BonePose">
        A list of transforms for each bone in bhkPoseArray.
        <field name="Num Transforms" type="uint" />
        <field name="Transforms" type="BoneTransform" arr1="Num Transforms" />
    </compound>

    <compound name="DecalVectorArray">
        Array of Vectors for Decal placement in BSDecalPlacementVectorExtraData.
        <field name="Num Vectors" type="short" />
        <field name="Points" type="Vector3" arr1="Num Vectors">Vector XYZ coords</field>
        <field name="Normals" type="Vector3" arr1="Num Vectors">Vector Normals</field>
    </compound>

    <bitflags name="BSPartFlag" storage="ushort">
        Editor flags for the Body Partitions. 
        <option value="0" name="PF_EDITOR_VISIBLE">Visible in Editor</option>
        <option value="8" name="PF_START_NET_BONESET">Start a new shared boneset.  It is expected this BoneSet and the following sets in the Skin Partition will have the same bones.</option>
    </bitflags>

    <compound name="BodyPartList">
        Body part list for DismemberSkinInstance
        <field name="Part Flag" type="BSPartFlag" default="257">Flags related to the Body Partition</field>
        <field name="Body Part" type="BSDismemberBodyPartType">Body Part Index</field>
    </compound>
    
    <compound name="BoneLOD">
        Stores Bone Level of Detail info in a BSBoneLODExtraData
        <field name="Distance" type="uint" />
        <field name="Bone Name" type="string" />
    </compound>

    <compound name="bhkCMSDMaterial"><!--Same as bhkMeshMaterial?-->
        Per-chunk material, used in bhkCompressedMeshShapeData
        <field name="Material" type="SkyrimHavokMaterial" />
        <field name="Filter" type="HavokFilter" />
    </compound>

    <compound name="bhkCMSDBigTris">
        Triangle indices used in pair with "Big Verts" in a bhkCompressedMeshShapeData.
        <field name="Triangle 1" type="ushort" />
        <field name="Triangle 2" type="ushort" />
        <field name="Triangle 3" type="ushort" />
        <field name="Material" type="uint">Always 0?</field>
        <field name="Welding Info" type="ushort" />
    </compound>
    
    <compound name="bhkCMSDTransform">
        A set of transformation data: translation and rotation
        <field name="Translation" type="Vector4">A vector that moves the chunk by the specified amount. W is not used.</field>
        <field name="Rotation" type="hkQuaternion">Rotation. Reference point for rotation is bhkRigidBody translation.</field>
    </compound>
    
    <compound name="bhkCMSDChunk">
        Defines subshape chunks in bhkCompressedMeshShapeData
        <field name="Translation" type="Vector4" />
        <field name="Material Index" type="uint">Index of material in bhkCompressedMeshShapeData::Chunk Materials</field>
        <field name="Reference" type="ushort">Always 65535?</field>
        <field name="Transform Index" type="ushort">Index of transformation in bhkCompressedMeshShapeData::Chunk Transforms</field>
        <field name="Num Vertices" type="uint" />
        <field name="Vertices" type="ushort" arr1="Num Vertices" />
        <field name="Num Indices" type="uint" />
        <field name="Indices" type="ushort" arr1="Num Indices" />
        <field name="Num Strips" type="uint" />
        <field name="Strips" type="ushort" arr1="Num Strips" />
        <field name="Num Welding Info" type="uint" />
        <field name="Welding Info" type="ushort" arr1="Num Welding Info" />
    </compound>

    <compound name="MalleableDescriptor">
        <field name="Type" type="hkConstraintType">Type of constraint.</field>
        <field name="Num Entities" type="uint" default="2">Always 2 (Hardcoded). Number of bodies affected by this constraint.</field>
        <field name="Entity A" type="Ptr" template="bhkEntity">Usually NONE. The entity affected by this constraint.</field>
        <field name="Entity B" type="Ptr" template="bhkEntity">Usually NONE. The entity affected by this constraint.</field>
        <field name="Priority" type="uint" default="1">Usually 1. Higher values indicate higher priority of this constraint?</field>
        <field name="Ball and Socket" type="BallAndSocketDescriptor" cond="Type == 0" />
        <field name="Hinge" type="HingeDescriptor" cond="Type == 1" />
        <field name="Limited Hinge" type="LimitedHingeDescriptor" cond="Type == 2" />
        <field name="Prismatic" type="PrismaticDescriptor" cond="Type == 6" />
        <field name="Ragdoll" type="RagdollDescriptor" cond="Type == 7" />
        <field name="Stiff Spring" type="StiffSpringDescriptor" cond="Type == 8" />
        <field name="Tau" type="float" ver2="20.0.0.5" /><!-- not in Fallout 3 or Skyrim -->
        <field name="Damping" type="float" ver2="20.0.0.5" /><!-- In TES CS described as Damping -->
        <field name="Strength" type="float" ver1="20.2.0.7" /><!-- In GECK and Creation Kit described as Strength -->
    </compound>

    <compound name="ConstraintData">
        <field name="Type" type="hkConstraintType">Type of constraint.</field>
        <field name="Num Entities 2" type="uint" default="2">Always 2 (Hardcoded). Number of bodies affected by this constraint.</field>
        <field name="Entity A" type="Ptr" template="bhkEntity">Usually NONE. The entity affected by this constraint.</field>
        <field name="Entity B" type="Ptr" template="bhkEntity">Usually NONE. The entity affected by this constraint.</field>
        <field name="Priority" type="uint" default="1">Usually 1. Higher values indicate higher priority of this constraint?</field>
        <field name="Ball and Socket" type="BallAndSocketDescriptor" cond="Type == 0" />
        <field name="Hinge" type="HingeDescriptor" cond="Type == 1" />
        <field name="Limited Hinge" type="LimitedHingeDescriptor" cond="Type == 2" />
        <field name="Prismatic" type="PrismaticDescriptor" cond="Type == 6" />
        <field name="Ragdoll" type="RagdollDescriptor" cond="Type == 7" />
        <field name="Stiff Spring" type="StiffSpringDescriptor" cond="Type == 8" />
        <field name="Malleable" type="MalleableDescriptor" cond="Type == 13" />
    </compound>

    <!-- NIF Objects
         These are the main units of data that NIF files are arranged in.
         They are like C classes and can contain many pieces of data.
         The only differences between these and compounds is that these
         are treated as object types by the NIF format and can inherit
         from other classes.-->

    <niobject name="NiObject" abstract="1">
        Abstract object type.
    </niobject>

    <niobject name="Ni3dsAlphaAnimator" abstract="0" inherit="NiObject">
        Unknown.
        <field name="Unknown 1" type="byte" arr1="40">Unknown.</field>
        <field name="Parent" type="Ref" template="NiObject">The parent?</field>
        <field name="Num 1" type="uint">Unknown.</field>
        <field name="Num 2" type="uint">Unknown.</field>
        <field name="Unknown 2" type="uint" arr1="Num 1" arr2="Num 2" arr3="2">Unknown.</field>
    </niobject>

    <niobject name="Ni3dsAnimationNode" abstract="0" inherit="NiObject">
        Unknown. Only found in 2.3 nifs.
        <field name="Name" type="string">Name of this object.</field>
        <field name="Has Data" type="bool">Unknown.</field>
        <field name="Unknown Floats 1" type="float" arr1="21" cond="Has Data">Unknown. Matrix?</field>
        <field name="Unknown Short" type="ushort" cond="Has Data">Unknown.</field>
        <field name="Child" type="Ref" template="NiObject" cond="Has Data">Child?</field>
        <field name="Unknown Floats 2" type="float" arr1="12" cond="Has Data">Unknown.</field>
        <field name="Count" type="uint" cond="Has Data">A count.</field>
        <field name="Unknown Array" type="byte" arr1="Count" arr2="5" cond="Has Data">Unknown.</field>
    </niobject>

    <niobject name="Ni3dsColorAnimator" abstract="0" inherit="NiObject">
        Unknown!
        <field name="Unknown 1" type="byte" arr1="184">Unknown.</field>
    </niobject>

    <niobject name="Ni3dsMorphShape" abstract="0" inherit="NiObject">
        Unknown!
        <field name="Unknown 1" type="byte" arr1="14">Unknown.</field>
    </niobject>

    <niobject name="Ni3dsParticleSystem" abstract="0" inherit="NiObject">
        Unknown!
        <field name="Unknown 1" type="byte" arr1="14">Unknown.</field>
    </niobject>

    <niobject name="Ni3dsPathController" abstract="0" inherit="NiObject">
        Unknown!
        <field name="Unknown 1" type="byte" arr1="20">Unknown.</field>
    </niobject>


    <niobject name="NiParticleModifier" abstract="1" inherit="NiObject">
        LEGACY (pre-10.1). Abstract base class for particle system modifiers.
        <field name="Next Modifier" type="Ref" template="NiParticleModifier">Next particle modifier.</field>
        <field name="Controller" type="Ptr" template="NiParticleSystemController" ver1="4.0.0.2">Points to the particle system controller parent.</field>
    </niobject>

    <niobject name="NiPSysCollider" abstract="1" inherit="NiObject">
        Particle system collider.
        <field name="Bounce" type="float" default="1.0">Amount of bounce for the collider.</field>
        <field name="Spawn on Collide" type="bool">Spawn particles on impact?</field>
        <field name="Die on Collide" type="bool">Kill particles on impact?</field>
        <field name="Spawn Modifier" type="Ref" template="NiPSysSpawnModifier">Spawner to use for the collider.</field>
        <field name="Parent" type="Ptr" template="NiPSysColliderManager">Link to parent.</field>
        <field name="Next Collider" type="Ref" template="NiPSysCollider">The next collider.</field>
        <field name="Collider Object" type="Ptr" template="NiAVObject">The object whose position and orientation are the basis of the collider.</field>
    </niobject>

    <enum name="BroadPhaseType" storage="byte">
        <option value="0" name="BROAD_PHASE_INVALID" />
        <option value="1" name="BROAD_PHASE_ENTITY" />
        <option value="2" name="BROAD_PHASE_PHANTOM" />
        <option value="3" name="BROAD_PHASE_BORDER" />
    </enum>

    <compound name="hkWorldObjCinfoProperty">
        <field name="Data" type="uint" default="0" />
        <field name="Size" type="uint" default="0" />
        <field name="Capacity and Flags" type="uint" default="0x80000000" />
    </compound>

    <niobject name="bhkRefObject" abstract="1" inherit="NiObject">
        The base type of most Bethesda-specific Havok-related NIF objects.
    </niobject>

    <niobject name="bhkSerializable" abstract="1" inherit="bhkRefObject">
        Havok objects that can be saved and loaded from disk?
    </niobject>

    <niobject name="bhkWorldObject" abstract="1" inherit="bhkSerializable">
        Havok objects that have a position in the world?
        <field name="Shape" type="Ref" template="bhkShape"> Link to the body for this collision object.</field>
        <field name="Havok Filter" type="HavokFilter" />
        <field name="Unused" type="byte" arr1="4">Garbage data from memory.</field>
        <field name="Broad Phase Type" type="BroadPhaseType" default="1" />
        <field name="Unused Bytes" type="byte" arr1="3" />
        <field name="Cinfo Property" type="hkWorldObjCinfoProperty" />
    </niobject>

    <niobject name="bhkPhantom" abstract="1" inherit="bhkWorldObject">
        Havok object that do not react with other objects when they collide (causing deflection, etc.) but still trigger collision notifications to the game.  Possible uses are traps, portals, AI fields, etc.
    </niobject>

    <niobject name="bhkAabbPhantom" inherit="bhkPhantom" module="BSHavok" versions="#BETHESDA#">
        Bethesda extension of hkpAabbPhantom. A non-physical object made up of only an AABB.
            - Very fast as they use only broadphase collision detection.
            - Used for triggers/regions where a shape is not necessary.
        <field name="Unused 01" type="byte" arr1="8" binary="true" />
        <field name="AABB" type="hkAabb" />
    </niobject>

    <niobject name="bhkShapePhantom" abstract="1" inherit="bhkPhantom">
        A Havok phantom that uses a Havok shape object for its collision volume instead of just a bounding box.
    </niobject>

    <niobject name="bhkSimpleShapePhantom" abstract="0" inherit="bhkShapePhantom">
        Unknown shape.
        <field name="Unused 2" type="byte" arr1="8">Garbage data from memory.</field>
        <field name="Transform" type="Matrix44" />
    </niobject>

    <niobject name="bhkEntity" abstract="1" inherit="bhkWorldObject">
        A havok node, describes physical properties.
    </niobject>

    <niobject name="bhkRigidBody" abstract="0" inherit="bhkEntity">
        This is the default body type for all "normal" usable and static world objects. The "T" suffix
        marks this body as active for translation and rotation, a normal bhkRigidBody ignores those
        properties. Because the properties are equal, a bhkRigidBody may be renamed into a bhkRigidBodyT and vice-versa.
        <field name="Collision Response" type="hkResponseType" default="RESPONSE_SIMPLE_CONTACT">How the body reacts to collisions. See hkResponseType for hkpWorld default implementations.</field>
        <field name="Unused Byte 1" type="byte">Skipped over when writing Collision Response and Callback Delay.</field>
        <field name="Process Contact Callback Delay" type="ushort" default="0xffff">Lowers the frequency for processContactCallbacks. A value of 5 means that a callback is raised every 5th frame. The default is once every 65535 frames.</field>
        <field name="Unknown Int 1" type="uint">Unknown.</field>
        <field name="Havok Filter Copy" type="HavokFilter">Copy of Havok Filter</field>
        <field name="Unused 2" type="byte" arr1="4">Garbage data from memory. Matches previous Unused value.</field>
        <field name="Unknown Int 2" type="uint" vercond="User Version 2 &gt; 34" />
        <field name="Collision Response 2" type="hkResponseType" default="RESPONSE_SIMPLE_CONTACT" />
        <field name="Unused Byte 2" type="byte">Skipped over when writing Collision Response and Callback Delay.</field>
        <field name="Process Contact Callback Delay 2" type="ushort" default="0xffff" />
        <field name="Unknown Int 2" type="uint" vercond="User Version 2 &lt;= 34" />
        <field name="Translation" type="Vector4"> A vector that moves the body by the specified amount. Only enabled in bhkRigidBodyT objects.</field>
        <field name="Rotation" type="hkQuaternion">The rotation Yaw/Pitch/Roll to apply to the body. Only enabled in bhkRigidBodyT objects.</field>
        <field name="Linear Velocity" type="Vector4">Linear velocity.</field>
        <field name="Angular Velocity" type="Vector4">Angular velocity.</field>
        <field name="Inertia Tensor" type="hkMatrix3">Defines how the mass is distributed among the body, i.e. how difficult it is to rotate around any given axis.</field>
        <field name="Center" type="Vector4">The body's center of mass.</field>
        <field name="Mass" type="float" default="1.0">The body's mass in kg. A mass of zero represents an immovable object.</field>
        <field name="Linear Damping" type="float" default="0.1">Reduces the movement of the body over time. A value of 0.1 will remove 10% of the linear velocity every second.</field>
        <field name="Angular Damping" type="float" default="0.05">Reduces the movement of the body over time. A value of 0.05 will remove 5% of the angular velocity every second.</field>
        <field name="Time Factor" type="float" default="1.0" vercond="(User Version 2 &gt; 34)" />
        <field name="Gravity Factor" type="float" default="1.0" vercond="(User Version 2 &gt; 34)" />
        <field name="Friction" type="float" default="0.5">How smooth its surfaces is and how easily it will slide along other bodies.</field>
        <field name="Rolling Friction Multiplier" type="float" vercond="(User Version 2 &gt; 34)" />
        <field name="Restitution" type="float" default="0.4">
            How "bouncy" the body is, i.e. how much energy it has after colliding. Less than 1.0 loses energy, greater than 1.0 gains energy.
            If the restitution is not 0.0 the object will need extra CPU for all new collisions.
        </field>
        <field name="Max Linear Velocity" type="float" default="104.4">Maximal linear velocity.</field>
        <field name="Max Angular Velocity" type="float" default="31.57">Maximal angular velocity.</field>
        <field name="Penetration Depth" type="float" default="0.15">
            The maximum allowed penetration for this object.
            This is a hint to the engine to see how much CPU the engine should invest to keep this object from penetrating.
            A good choice is 5% - 20% of the smallest diameter of the object.
        </field>
        <field name="Motion System" type="hkMotionType" default="MO_SYS_DYNAMIC">Motion system? Overrides Quality when on Keyframed?</field>
        <field name="Deactivator Type" type="hkDeactivatorType" default="DEACTIVATOR_NEVER" vercond="(User Version 2 &lt;= 34)">The initial deactivator type of the body.</field>
        <field name="Enable Deactivation" type="bool" default="1" vercond="(User Version 2 &gt; 34)" />
        <field name="Solver Deactivation" type="hkSolverDeactivation" default="SOLVER_DEACTIVATION_OFF">How aggressively the engine will try to zero the velocity for slow objects. This does not save CPU.</field>
        <field name="Quality Type" type="hkQualityType" default="MO_QUAL_FIXED">The type of interaction with other objects.</field>
        <field name="Unknown Bytes 1" type="byte" arr1="12">Unknown.</field>
        <field name="Unknown Bytes 2" type="byte" arr1="4" vercond="(User Version 2 &gt; 34)">Unknown. Skyrim only.</field>
        <field name="Num Constraints" type="uint" />
        <field name="Constraints" type="Ref" template="bhkSerializable" arr1="Num Constraints" />
        <field name="Body Flags" type="uint" vercond="(User Version 2 &lt; 76)">1 = respond to wind</field>
        <field name="Body Flags" type="ushort" vercond="(User Version 2 &gt;= 76)">1 = respond to wind</field>
    </niobject>

    <niobject name="bhkRigidBodyT" abstract="0" inherit="bhkRigidBody">
        The "T" suffix marks this body as active for translation and rotation.
    </niobject>

    <niobject name="bhkConstraint" abstract="1" inherit="bhkSerializable">
        Describes a physical constraint.
        <field name="Num Entities" type="uint">Number of bodies affected by this constraint.</field>
        <field name="Entities" type="Ptr" template="bhkEntity" arr1="Num Entities">The entities affected by this constraint.</field>
        <field name="Priority" type="uint" default="1">Usually 1. Higher values indicate higher priority of this constraint?</field>
    </niobject>

    <niobject name="bhkLimitedHingeConstraint" abstract="0" inherit="bhkConstraint">
        Hinge constraint.
        <field name="Limited Hinge" type="LimitedHingeDescriptor">Describes a limited hinge constraint</field>
    </niobject>

    <niobject name="bhkMalleableConstraint" abstract="0" inherit="bhkConstraint">
        A malleable constraint.
        <field name="Malleable" type="MalleableDescriptor">Constraint within constraint.</field>
    </niobject>

    <niobject name="bhkStiffSpringConstraint" abstract="0" inherit="bhkConstraint">
        A spring constraint.
        <field name="Stiff Spring" type="StiffSpringDescriptor">Stiff Spring constraint.</field>
    </niobject>

    <niobject name="bhkRagdollConstraint" abstract="0" inherit="bhkConstraint">
        Ragdoll constraint.
        <field name="Ragdoll" type="RagdollDescriptor">Ragdoll constraint.</field>
    </niobject>

    <niobject name="bhkPrismaticConstraint" abstract="0" inherit="bhkConstraint">
        A prismatic constraint.
        <field name="Prismatic" type="PrismaticDescriptor">Describes a prismatic constraint</field>
    </niobject>

    <niobject name="bhkHingeConstraint" abstract="0" inherit="bhkConstraint">
        A hinge constraint.
        <field name="Hinge" type="HingeDescriptor">Hinge constraing.</field>
    </niobject>

    <niobject name="bhkBallAndSocketConstraint" abstract="0" inherit="bhkConstraint">
        A Ball and Socket Constraint.
        <field name="Ball and Socket" type="BallAndSocketDescriptor">Describes a ball and socket constraint</field>
    </niobject>

    <compound name="ConstraintInfo">
        Two Vector4 for pivot in A and B.
        <field name="Pivot In A" type="Vector4" />
        <field name="Pivot In B" type="Vector4" />
    </compound>

    <niobject name="bhkBallSocketConstraintChain" abstract="0" inherit="bhkSerializable">
        A Ball and Socket Constraint chain.
        <field name="Num Pivots" type="uint">Number of pivot points. Divide by 2 to get the number of constraints.</field>
        <field name="Pivots" type="ConstraintInfo" arr1="Num Pivots / 2">Two pivot points A and B for each constraint.</field>
        <field name="Tau" type="float" default="1.0">High values are harder and more reactive, lower values are smoother.</field>
        <field name="Damping" type="float" default="0.6">Defines damping strength for the current velocity.</field>
        <field name="Constraint Force Mixing" type="float" default="1.1920929e-08">Restitution (amount of elasticity) of constraints. Added to the diagonal of the constraint matrix. A value of 0.0 can result in a division by zero with some chain configurations.</field>
        <field name="Max Error Distance" type="float" default="0.1">Maximum distance error in constraints allowed before stabilization algorithm kicks in. A smaller distance causes more resistance.</field>
        <field name="Num Entities A" type="uint">Number of links in the chain</field>
        <field name="Entities A" type="Ptr" template="bhkRigidBody" arr1="Num Entities A" />
        <field name="Num Entities" type="uint" default="2">Hardcoded to 2. Don't change.</field>
        <field name="Entity A" type="Ptr" template="bhkRigidBody" />
        <field name="Entity B" type="Ptr" template="bhkRigidBody" />
        <field name="Priority" type="uint" />
    </niobject>

    <niobject name="bhkShape" abstract="1" inherit="bhkSerializable">
        A Havok Shape?
    </niobject>

    <niobject name="bhkTransformShape" abstract="0" inherit="bhkShape">
        Transforms a shape.
        <field name="Shape" type="Ref" template="bhkShape">The shape that this object transforms.</field>
        <field name="Material" type="HavokMaterial">The material of the shape.</field>
        <field name="Radius" type="float" />
        <field name="Unused" type="byte" arr1="8">Garbage data from memory.</field>
        <field name="Transform" type="Matrix44">A transform matrix.</field>
    </niobject>

    <niobject name="bhkSphereRepShape" abstract="1" inherit="bhkShape">
        A havok shape, perhaps with a bounding sphere for quick rejection in addition to more detailed shape data?
        <field name="Material" type="HavokMaterial">The material of the shape.</field>
        <field name="Radius" type="float">The radius of the sphere that encloses the shape.</field>
    </niobject>

    <niobject name="bhkConvexShape" abstract="1" inherit="bhkSphereRepShape">
        A havok shape.
    </niobject>

    <niobject name="bhkSphereShape" abstract="0" inherit="bhkConvexShape">
        A sphere.
    </niobject>

    <niobject name="bhkCapsuleShape" abstract="0" inherit="bhkConvexShape">
        A capsule.
        <field name="Unused" type="byte" arr1="8">Not used. The following wants to be aligned at 16 bytes.</field>
        <field name="First Point" type="Vector3">First point on the capsule's axis.</field>
        <field name="Radius 1" type="float">Matches first capsule radius.</field>
        <field name="Second Point" type="Vector3">Second point on the capsule's axis.</field>
        <field name="Radius 2" type="float">Matches second capsule radius.</field>
    </niobject>

    <niobject name="bhkBoxShape" abstract="0" inherit="bhkConvexShape">
        A box.
        <field name="Unused" type="byte" arr1="8">Not used. The following wants to be aligned at 16 bytes.</field>
        <field name="Dimensions" type="Vector3">A cube stored in Half Extents. A unit cube (1.0, 1.0, 1.0) would be stored as 0.5, 0.5, 0.5.</field>
        <field name="Unused Float" type="float">Unused as Havok stores the Half Extents as hkVector4 with the W component unused.</field>
    </niobject>

    <niobject name="bhkConvexVerticesShape" abstract="0" inherit="bhkConvexShape">
        A convex shape built from vertices. Note that if the shape is used in
        a non-static object (such as clutter), then they will simply fall
        through ground when they are under a bhkListShape.
        <field name="Vertices Property" type="hkWorldObjCinfoProperty" />
        <field name="Normals Property" type="hkWorldObjCinfoProperty" />
        <field name="Num Vertices" type="uint">Number of vertices.</field>
        <field name="Vertices" type="Vector4" arr1="Num Vertices">Vertices. Fourth component is 0. Lexicographically sorted.</field>
        <field name="Num Normals" type="uint">The number of half spaces.</field>
        <field name="Normals" type="Vector4" arr1="Num Normals">Half spaces as determined by the set of vertices above. First three components define the normal pointing to the exterior, fourth component is the signed distance of the separating plane to the origin: it is minus the dot product of v and n, where v is any vertex on the separating plane, and n is the normal. Lexicographically sorted.</field>
    </niobject>

    <!--Should inherit from bhkConvexShape according to hierarchy, but seems to be exactly the same as bhkTransformShape.-->
    <niobject name="bhkConvexTransformShape" abstract="0" inherit="bhkTransformShape">
        A convex transformed shape?
    </niobject>

    <niobject name="bhkMultiSphereShape" abstract="0" inherit="bhkSphereRepShape">
        Unknown.
        <field name="Unknown Float 1" type="float">Unknown.</field>
        <field name="Unknown Float 2" type="float">Unknown.</field>
        <field name="Num Spheres" type="uint">The number of spheres in this multi sphere shape.</field>
        <field name="Spheres" type="NiBound" arr1="Num Spheres">This array holds the spheres which make up the multi sphere shape.</field>
    </niobject>

    <niobject name="bhkBvTreeShape" abstract="1" inherit="bhkShape">
        A tree-like Havok data structure stored in an assembly-like binary code?
    </niobject>

    <niobject name="bhkMoppBvTreeShape" abstract="0" inherit="bhkBvTreeShape">
        Memory optimized partial polytope bounding volume tree shape (not an entity).
        <field name="Shape" type="Ref" template="bhkShape">The shape.</field>
        <field name="Unused" type="uint" arr1="3">Garbage data from memory. Referred to as User Data, Shape Collection, and Code.</field>
        <field name="Shape Scale" type="float" default="1.0">Scale.</field>
        <field name="MOPP Data Size" type="uint" calculated="1">Number of bytes for MOPP data.</field>
        <field name="Origin" type="Vector3">Origin of the object in mopp coordinates. This is the minimum of all vertices in the packed shape along each axis, minus 0.1.</field>
        <field name="Scale" type="float">The scaling factor to quantize the MOPP: the quantization factor is equal to 256*256 divided by this number. In Oblivion files, scale is taken equal to 256*256*254 / (size + 0.2) where size is the largest dimension of the bounding box of the packed shape.</field>
        <field name="Old MOPP Data" ver2="10.0.1.0" type="byte" binary="1" arr1="MOPP Data Size - 1">The tree of bounding volume data (old style, contains more than just the mopp script).</field>
        <field name="Build Type" type="MoppDataBuildType" vercond="User Version 2 &gt; 34">Tells if MOPP Data was organized into smaller chunks (PS3) or not (PC)</field>
        <field name="MOPP Data" ver1="10.0.1.2" type="byte" binary="1" arr1="MOPP Data Size">The tree of bounding volume data.</field>
    </niobject>


    <niobject name="bhkShapeCollection" abstract="1" inherit="bhkShape">
        Havok collision object that uses multiple shapes?
    </niobject>

    <niobject name="bhkListShape" abstract="0" inherit="bhkShapeCollection">
        A list of shapes.

        Do not put a bhkPackedNiTriStripsShape in the Sub Shapes. Use a
        separate collision nodes without a list shape for those.

        Also, shapes collected in a bhkListShape may not have the correct
        walking noise, so only use it for non-walkable objects.
        <field name="Num Sub Shapes" type="uint">The number of sub shapes referenced.</field>
        <field name="Sub Shapes" type="Ref" template="bhkShape" arr1="Num Sub Shapes">List of shapes.</field>
        <field name="Material" type="HavokMaterial">The material of the shape.</field>
        <field name="Child Shape Property" type="hkWorldObjCinfoProperty" />
        <field name="Child Filter Property" type="hkWorldObjCinfoProperty" />
        <field name="Num Unknown Ints" type="uint">Count.</field>
        <field name="Unknown Ints" type="uint" arr1="Num Unknown Ints">Unknown.</field>
    </niobject>

    <!--
    bhkMeshShape appears in some old Oblivion nifs, for instance
    meshes/architecture/basementsections/ungrdltraphingedoor.nif 
    but only in some distributions of Oblivion

    XXX not completely decoded, also the 4 dummy separator bytes seem
    to be missing from nifs that have this block
    -->
    <niobject name="bhkMeshShape" abstract="0" inherit="bhkShape"> 	 
      <field name="Unknown 1" type="float" arr1="9" />
      <field name="Num Unknown Floats" type="int" /> 	 
      <field name="Unknown Floats" type="float" arr1="Num Unknown Floats" arr2="3" /> 	 
      <field name="Unknown 2" type="int" arr1="3" />
      <field name="Num Strips Data" type="uint" ver2="10.0.1.0">The number of strips data objects referenced.</field> 	 
      <field name="Strips Data" type="Ref" template="NiTriStripsData" arr1="Num Strips Data" ver2="10.0.1.0">Refers to a bunch of NiTriStripsData objects that make up this shape.</field> 	 
    </niobject>

    <niobject name="bhkPackedNiTriStripsShape" abstract="0" inherit="bhkShapeCollection">
        A shape constructed from strips data.
        <field name="Num Sub Shapes" type="ushort" ver2="20.0.0.5" />
        <field name="Sub Shapes" type="OblivionSubShape" arr1="Num Sub Shapes" ver2="20.0.0.5" />
        <field name="User Data" type="uint" default="0" />
        <field name="Unused 1" type="uint">Looks like a memory pointer and may be garbage.</field>
        <field name="Radius" type="float" default="0.1" />
        <field name="Unused 2" type="uint">Looks like a memory pointer and may be garbage.</field>
        <field name="Scale" type="Vector4" default="1.0, 1.0, 1.0, 0.0" />
        <field name="Radius Copy" type="float" default="0.1">Same as radius</field>
        <field name="Scale Copy" type="Vector4" default="1.0, 1.0, 1.0, 0.0">Same as scale.</field>
        <field name="Data" type="Ref" template="hkPackedNiTriStripsData" />
    </niobject>

    <niobject name="bhkNiTriStripsShape" abstract="0" inherit="bhkShapeCollection">
        A shape constructed from a bunch of strips.
        <field name="Material" type="HavokMaterial">The material of the shape.</field>
        <field name="Radius" type="float" default="0.1" />
        <field name="Unused" type="uint" arr1="5">Garbage data from memory though the last 3 are referred to as maxSize, size, and eSize.</field>
        <field name="Grow By" type="uint" default="1" />
        <field name="Scale" type="Vector4" default="1.0, 1.0, 1.0, 0.0">Scale. Usually (1.0, 1.0, 1.0, 0.0).</field>
        <field name="Num Strips Data" type="uint">The number of strips data objects referenced.</field>
        <field name="Strips Data" type="Ref" template="NiTriStripsData" arr1="Num Strips Data">Refers to a bunch of NiTriStripsData objects that make up this shape.</field>
        <field name="Num Data Layers" type="uint">Number of Havok Layers, equal to Number of strips data objects.</field>
        <field name="Data Layers" type="HavokFilter" arr1="Num Data Layers">Havok Layers for each strip data.</field>
    </niobject>

    <niobject name="NiExtraData" abstract="0" inherit="NiObject">
        A generic extra data object.
        <field name="Name" type="string" ver1="10.0.1.0" cond="!BSExtraData">Name of this object.</field>
        <field name="Next Extra Data" type="Ref" template="NiExtraData" ver2="4.2.2.0">Block number of the next extra data object.</field>
    </niobject>

    <niobject name="NiInterpolator" abstract="1" inherit="NiObject">
        Abstract base class for all interpolators of bool, float, NiQuaternion, NiPoint3, NiColorA, and NiQuatTransform data.
    </niobject>

    <niobject name="NiKeyBasedInterpolator" abstract="1" inherit="NiInterpolator">
        Abstract base class for interpolators that use NiAnimationKeys (Key, KeyGrp) for interpolation.
    </niobject>

    <niobject name="NiFloatInterpolator" abstract="0" inherit="NiKeyBasedInterpolator">
        Uses NiFloatKeys to animate a float value over time.
        <field name="Value" type="float" default="-3.402823466e+38">Pose value if lacking NiFloatData.</field>
        <field name="Data" type="Ref" template="NiFloatData" />
    </niobject>

    <niobject name="NiTransformInterpolator" abstract="0" inherit="NiKeyBasedInterpolator">
        An interpolator for transform keyframes.
        <field name="Transform" type="NiQuatTransform" />
        <field name="Data" type="Ref" template="NiTransformData" />
    </niobject>

    <niobject name="NiPoint3Interpolator" abstract="0" inherit="NiKeyBasedInterpolator">
        Uses NiPosKeys to animate an NiPoint3 value over time.
        <field name="Value" type="Vector3" default="-3.402823466e+38, -3.402823466e+38, -3.402823466e+38">Pose value if lacking NiPosData.</field>
        <field name="Data" type="Ref" template="NiPosData" />
    </niobject>

    <bitflags name="PathFlags" storage="ushort" prefix="NIPI">
        <option value="0" name="CVDataNeedsUpdate" />
        <option value="1" name="CurveTypeOpen" />
        <option value="2" name="AllowFlip" />
        <option value="3" name="Bank" />
        <option value="4" name="ConstantVelocity" />
        <option value="5" name="Follow" />
        <option value="6" name="Flip" />
    </bitflags>

    <niobject name="NiPathInterpolator" abstract="0" inherit="NiKeyBasedInterpolator">
        Used to make an object follow a predefined spline path.
        <field name="Flags" type="PathFlags" default="3" />
        <field name="Bank Dir" type="int" default="1">-1 = Negative, 1 = Positive</field>
        <field name="Max Bank Angle" type="float">Max angle in radians.</field>
        <field name="Smoothing" type="float" />
        <field name="Follow Axis" type="short">0, 1, or 2 representing X, Y, or Z.</field>
        <field name="Path Data" type="Ref" template="NiPosData" />
        <field name="Percent Data" type="Ref" template="NiFloatData" />
    </niobject>

    <niobject name="NiBoolInterpolator" abstract="0" inherit="NiKeyBasedInterpolator">
        Uses NiBoolKeys to animate a bool value over time.
        <field name="Value" type="bool" default="2">Pose value if lacking NiBoolData.</field>
        <field name="Data" type="Ref" template="NiBoolData" />
    </niobject>

    <niobject name="NiBoolTimelineInterpolator" abstract="0" inherit="NiBoolInterpolator">
        Uses NiBoolKeys to animate a bool value over time.
        Unlike NiBoolInterpolator, it ensures that keys have not been missed between two updates.
    </niobject>

    <enum name="InterpBlendFlags" storage="byte">
        <option value="1" name="MANAGER_CONTROLLED">MANAGER_CONTROLLED</option>
    </enum>

    <compound name="InterpBlendItem">
        Interpolator item for array in NiBlendInterpolator.
        <field name="Interpolator" type="Ref" template="NiInterpolator">Reference to an interpolator.</field>
        <field name="Weight" type="float" />
        <field name="Normalized Weight" type="float" />
        <field name="Priority" type="byte" />
        <field name="Ease Spinner" type="float" />
    </compound>

    <niobject name="NiBlendInterpolator" abstract="1" inherit="NiInterpolator">
        Abstract base class for all NiInterpolators that blend the results of sub-interpolators together to compute a final weighted value.
        <field name="Flags" type="InterpBlendFlags" />
        <field name="Array Size" type="byte" />
        <field name="Weight Threshold" type="float" />
        <field name="Interp Count" type="byte" cond="(Flags &amp; 1) == 0" />
        <field name="Single Index" type="byte" default="255" cond="(Flags &amp; 1) == 0" />
        <field name="High Priority" type="char" default="-128" cond="(Flags &amp; 1) == 0" />
        <field name="Next High Priority" type="char" default="-128" cond="(Flags &amp; 1) == 0" />
        <field name="Single Time" type="float" default="-3.402823466e+38" cond="(Flags &amp; 1) == 0" />
        <field name="High Weights Sum" type="float" default="-3.402823466e+38" cond="(Flags &amp; 1) == 0" />
        <field name="Next High Weights Sum" type="float" default="-3.402823466e+38" cond="(Flags &amp; 1) == 0" />
        <field name="High Ease Spinner" type="float" default="-3.402823466e+38" cond="(Flags &amp; 1) == 0" />
        <field name="Interp Array Items" type="InterpBlendItem" arr1="Array Size" cond="(Flags &amp; 1) == 0" />
    </niobject>

    <niobject name="NiBSplineInterpolator" abstract="1" inherit="NiInterpolator">
        Abstract base class for interpolators storing data via a B-spline.
        <field name="Start Time" type="float" default="3.402823466e+38">Animation start time.</field>
        <field name="Stop Time" type="float" default="-3.402823466e+38">Animation stop time.</field>
        <field name="Spline Data" type="Ref" template="NiBSplineData" />
        <field name="Basis Data" type="Ref" template="NiBSplineBasisData" />
    </niobject>

    <niobject name="NiObjectNET" abstract="1" inherit="NiObject">
        Abstract base class for NiObjects that support names, extra data, and time controllers.
        <field name="Skyrim Shader Type" type="BSLightingShaderPropertyShaderType" vercond="User Version 2 &gt;= 83" cond="BSLightingShaderProperty">Configures the main shader path</field>
        <field name="Name" type="string">Name of this controllable object, used to refer to the object in .kf files.</field>
        <field name="Has Old Extra Data" type="bool" ver2="2.3">Extra data for pre-3.0 versions.</field>
        <field name="Old Extra Prop Name" cond="Has Old Extra Data" ver2="2.3" type="string">(=NiStringExtraData)</field>
        <field name="Old Extra Internal Id" cond="Has Old Extra Data" ver2="2.3" type="uint">ref</field>
        <field name="Old Extra String" cond="Has Old Extra Data" ver2="2.3" type="string">Extra string data.</field>
        <field name="Unknown Byte" type="byte" ver2="2.3">Always 0.</field>
        <field name="Extra Data" type="Ref" template="NiExtraData" ver1="3.0" ver2="4.2.2.0">Extra data object index. (The first in a chain)</field>
        <field name="Num Extra Data List" type="uint" ver1="10.0.1.0">The number of Extra Data objects referenced through the list.</field>
        <field name="Extra Data List" type="Ref" template="NiExtraData" arr1="Num Extra Data List" ver1="10.0.1.0">List of extra data indices.</field>
        <field name="Controller" type="Ref" template="NiTimeController" ver1="3.0">Controller object index. (The first in a chain)</field>
    </niobject>

    <niobject name="NiCollisionObject" abstract="0" inherit="NiObject">
        This is the most common collision object found in NIF files. It acts as a real object that
        is visible and possibly (if the body allows for it) interactive. The node itself
        is simple, it only has three properties.
        For this type of collision object, bhkRigidBody or bhkRigidBodyT is generally used.
        <field name="Target" type="Ptr" template="NiAVObject">Index of the AV object referring to this collision object.</field>
    </niobject>

    <niobject name="NiCollisionData" abstract="0" inherit="NiCollisionObject">
        Collision box.
        <field name="Propagation Mode" type="PropagationMode" />
        <field name="Collision Mode" type="CollisionMode" ver1="10.1.0.0" />
        <field name="Use ABV" type="byte">Use Alternate Bounding Volume.</field>
        <field name="Bounding Volume" type="BoundingVolume" cond="Use ABV == 1" />
    </niobject>

    <bitflags name="bhkCOFlags" storage="ushort" prefix="BHKCO">
        bhkNiCollisionObject flags. The flags 0x2, 0x100, and 0x200 are not seen in any NIF nor get/set by the engine.
        <option value="0" name="ACTIVE" />
        <!--<option value="1" name="UNK1" />-->
        <option value="2" name="NOTIFY" />
        <option value="3" name="SET_LOCAL" />
        <option value="4" name="DBG_DISPLAY" />
        <option value="5" name="USE_VEL" />
        <option value="6" name="RESET" />
        <option value="7" name="SYNC_ON_UPDATE" />
        <!--<option value="8" name="UNK2" />-->
        <!--<option value="9" name="UNK3" />-->
        <option value="10" name="ANIM_TARGETED" />
        <option value="11" name="DISMEMBERED_LIMB" />
    </bitflags>

    <niobject name="bhkNiCollisionObject" abstract="1" inherit="NiCollisionObject">
        Havok related collision object?
        <field name="Flags" type="bhkCOFlags" default="1">
            Set to 1 for most objects, and to 41 for animated objects (ANIM_STATIC). Bits: 0=Active 2=Notify 3=Set Local 6=Reset.
        </field>
        <field name="Body" type="Ref" template="bhkWorldObject" />
    </niobject>

    <niobject name="bhkCollisionObject" abstract="0" inherit="bhkNiCollisionObject">
        Havok related collision object?
    </niobject>

    <niobject name="bhkBlendCollisionObject" abstract="0" inherit="bhkCollisionObject">
        Unknown.
        <field name="Heir Gain" type="float" />
        <field name="Vel Gain" type="float" />
    </niobject>

    <niobject name="bhkPCollisionObject" abstract="0" inherit="bhkNiCollisionObject">
        Unknown.
    </niobject>

    <niobject name="bhkSPCollisionObject" abstract="0" inherit="bhkPCollisionObject">
        Unknown.
    </niobject>

    <niobject name="NiAVObject" abstract="1" inherit="NiObjectNET">
        Abstract audio-visual base class from which all of Gamebryo's scene graph objects inherit.
        <field name="Flags" type="uint" default="14" vercond="(User Version 2 &gt; 26)">Basic flags for AV objects. For Bethesda streams above 26 only.</field>
        <field name="Flags" type="Flags" ver1="3.0" vercond="(User Version 2 &lt;= 26)">Basic flags for AV objects; commonly 0x000C or 0x000A.</field>
        <field name="Translation" type="Vector3">The translation vector.</field>
        <field name="Rotation" type="Matrix33">The rotation part of the transformation matrix.</field>
        <field name="Scale" type="float" default="1.0">Scaling part (only uniform scaling is supported).</field>
        <field name="Velocity" type="Vector3" ver2="4.2.2.0">Unknown function. Always seems to be (0, 0, 0)</field>
        <field name="Num Properties" type="uint" vercond="(User Version 2 &lt;= 34)" />
        <field name="Properties" type="Ref" template="NiProperty" arr1="Num Properties" vercond="(User Version 2 &lt;= 34)">All rendering properties attached to this object.</field>
        <field name="Unknown 1" type="uint" arr1="4" ver2="2.3">Always 2,0,2,0.</field>
        <field name="Unknown 2" type="byte" ver2="2.3">0 or 1.</field>
        <field name="Has Bounding Volume" type="bool" ver1="3.0" ver2="4.2.2.0" />
        <field name="Bounding Volume" type="BoundingVolume" cond="Has Bounding Volume" ver1="3.0" ver2="4.2.2.0" />
        <field name="Collision Object" type="Ref" template="NiCollisionObject" ver1="10.0.1.0" />
    </niobject>

    <niobject name="NiDynamicEffect" abstract="1" inherit="NiAVObject">
        Abstract base class for dynamic effects such as NiLights or projected texture effects.
        <field name="Switch State" type="bool" default="1" ver1="10.1.0.106" vercond="User Version 2 &lt; 130">If true, then the dynamic effect is applied to affected nodes during rendering.</field>
        <field name="Num Affected Nodes" type="uint" ver2="4.0.0.2" />
        <field name="Affected Nodes" type="Ptr" template="NiNode" arr1="Num Affected Nodes" ver2="3.3.0.13">If a node appears in this list, then its entire subtree will be affected by the effect.</field>
        <field name="Affected Node Pointers" type="uint" arr1="Num Affected Nodes" ver1="4.0.0.0" ver2="4.0.0.2">As of 4.0 the pointer hash is no longer stored alongside each NiObject on disk, yet this node list still refers to the pointer hashes. Cannot leave the type as Ptr because the link will be invalid.</field>
        <field name="Num Affected Nodes" type="uint" ver1="10.1.0.0" vercond="User Version 2 &lt; 130" />
        <field name="Affected Nodes" type="Ptr" template="NiNode" arr1="Num Affected Nodes" ver1="10.1.0.0" vercond="User Version 2 &lt; 130">If a node appears in this list, then its entire subtree will be affected by the effect.</field>
    </niobject>

    <niobject name="NiLight" abstract="1" inherit="NiDynamicEffect">
        Abstract base class that represents light sources in a scene graph.
        For Bethesda Stream 130 (FO4), NiLight now directly inherits from NiAVObject.
        <field name="Dimmer" type="float" default="1.0">Scales the overall brightness of all light components.</field>
        <field name="Ambient Color" type="Color3" default="0.0, 0.0, 0.0" />
        <field name="Diffuse Color" type="Color3" default="0.0, 0.0, 0.0" />
        <field name="Specular Color" type="Color3" default="0.0, 0.0, 0.0" />
    </niobject>

    <niobject name="NiProperty" abstract="1" inherit="NiObjectNET">
        Abstract base class representing all rendering properties. Subclasses are attached to NiAVObjects to control their rendering.
    </niobject>

    <niobject name="NiTransparentProperty" abstract="0" inherit="NiProperty">
        Unknown
        <field name="Unknown" type="byte" arr1="6">Unknown.</field>
    </niobject>

    <niobject name="NiPSysModifier" abstract="1" inherit="NiObject">
        Abstract base class for all particle system modifiers.
        <field name="Name" type="string">Used to locate the modifier.</field>
        <field name="Order" type="uint">Modifier ID in the particle modifier chain (always a multiple of 1000)?</field>
        <field name="Target" type="Ptr" template="NiParticleSystem">NiParticleSystem parent of this modifier.</field>
        <field name="Active" type="bool" default="1">Whether or not the modifier is active.</field>
    </niobject>

    <niobject name="NiPSysEmitter" abstract="1" inherit="NiPSysModifier">
        Abstract base class for all particle system emitters.
        <field name="Speed" type="float">Speed / Inertia of particle movement.</field>
        <field name="Speed Variation" type="float">Adds an amount of randomness to Speed.</field>
        <field name="Declination" type="float">Declination / First axis.</field>
        <field name="Declination Variation" type="float">Declination randomness / First axis.</field>
        <field name="Planar Angle" type="float">Planar Angle / Second axis.</field>
        <field name="Planar Angle Variation" type="float">Planar Angle randomness / Second axis .</field>
        <field name="Initial Color" type="Color4">Defines color of a birthed particle.</field>
        <field name="Initial Radius" type="float" default="1.0">Size of a birthed particle.</field>
        <field name="Radius Variation" type="float" ver1="10.4.0.1">Particle Radius randomness.</field>
        <field name="Life Span" type="float">Duration until a particle dies.</field>
        <field name="Life Span Variation" type="float">Adds randomness to Life Span.</field>
    </niobject>

    <niobject name="NiPSysVolumeEmitter" abstract="1" inherit="NiPSysEmitter">
        Abstract base class for particle emitters that emit particles from a volume.
        <field name="Emitter Object" type="Ptr" template="NiNode" ver1="10.1.0.0">Node parent of this modifier?</field>
    </niobject>

    <niobject name="NiTimeController" abstract="1" inherit="NiObject">
        Abstract base class that provides the base timing and update functionality for all the Gamebryo animation controllers.
        <field name="Next Controller" type="Ref" template="NiTimeController">Index of the next controller.</field>
        <field name="Flags" type="Flags">
            Controller flags.
            Bit 0 : Anim type, 0=APP_TIME 1=APP_INIT
            Bit 1-2 : Cycle type, 00=Loop 01=Reverse 10=Clamp
            Bit 3 : Active
            Bit 4 : Play backwards
            Bit 5 : Is manager controlled
            Bit 6 : Always seems to be set in Skyrim and Fallout NIFs, unknown function
        </field>
        <field name="Frequency" type="float" default="1.0">Frequency (is usually 1.0).</field>
        <field name="Phase" type="float">Phase (usually 0.0).</field>
        <field name="Start Time" type="float" default="3.402823466e+38">Controller start time.</field>
        <field name="Stop Time" type="float" default="-3.402823466e+38">Controller stop time.</field>
        <field name="Target" type="Ptr" template="NiObjectNET" ver1="3.3.0.13">Controller target (object index of the first controllable ancestor of this object).</field>
        <field name="Unknown Integer" type="uint" ver2="3.1">Unknown integer.</field>
    </niobject>


    <niobject name="NiInterpController" abstract="1" inherit="NiTimeController">
        Abstract base class for all NiTimeController objects using NiInterpolator objects to animate their target objects.
    </niobject>

    <niobject name="NiMultiTargetTransformController" abstract="0" inherit="NiInterpController">
        DEPRECATED (20.6)
        <field name="Num Extra Targets" type="ushort">The number of target pointers that follow.</field>
        <field name="Extra Targets" type="Ptr" template="NiAVObject" arr1="Num Extra Targets">NiNode Targets to be controlled.</field>
    </niobject>

    <niobject name="NiGeomMorpherController" abstract="0" inherit="NiInterpController">
        DEPRECATED (20.5), replaced by NiMorphMeshModifier.
        Time controller for geometry morphing.
        <field name="Extra Flags" type="Flags" ver1="10.0.1.2">1 = UPDATE NORMALS</field>
        <field name="Unknown 2" type="byte" ver1="10.1.0.106" ver2="10.1.0.106">Unknown.</field>
        <field name="Data" type="Ref" template="NiMorphData">Geometry morphing data index.</field>
        <field name="Always Update" type="byte" ver1="4.0.0.1" />
        <field name="Num Interpolators" type="uint" ver1="10.1.0.106" />
        <field name="Interpolators" type="Ref" template="NiInterpolator" arr1="Num Interpolators" ver1="10.1.0.106" ver2="20.0.0.5" />
        <field name="Interpolator Weights" type="MorphWeight" arr1="Num Interpolators" ver1="20.1.0.3" />
        <field name="Num Unknown Ints" type="uint" ver1="20.0.0.4" ver2="20.0.0.5" vercond="(User Version 2 &gt; 0)" />
        <field name="Unknown Ints" type="uint" arr1="Num Unknown Ints" ver1="20.0.0.4" ver2="20.0.0.5" vercond="(User Version 2 &gt; 0)">Unknown.</field>
    </niobject>

    <niobject name="NiMorphController" abstract="0" inherit="NiInterpController">
        Unknown! Used by Daoc->'healing.nif'.
    </niobject>

    <niobject name="NiMorpherController" abstract="0" inherit="NiInterpController">
        Unknown! Used by Daoc.
        <field name="Data" type="Ref" template="NiMorphData">This controller's data.</field>
    </niobject>

    <niobject name="NiSingleInterpController" abstract="1" inherit="NiInterpController">
        Uses a single NiInterpolator to animate its target value.
        <field name="Interpolator" type="Ref" template="NiInterpolator" ver1="10.2.0.0" />
    </niobject>

    <niobject name="NiKeyframeController" abstract="0" inherit="NiSingleInterpController">
        DEPRECATED (10.2), RENAMED (10.2) to NiTransformController
        A time controller object for animation key frames.
        <field name="Data" type="Ref" template="NiKeyframeData" ver2="10.1.0.103" />
    </niobject>

    <niobject name="NiTransformController" abstract="0" inherit="NiKeyframeController">
        NiTransformController replaces NiKeyframeController.
    </niobject>

    <niobject name="NiPSysModifierCtlr" abstract="1" inherit="NiSingleInterpController">
        A particle system modifier controller.
        NiInterpController::GetCtlrID() string format:
            '%s'
        Where %s = Value of "Modifier Name"
        <field name="Modifier Name" type="string">Used to find the modifier pointer.</field>
    </niobject>

    <niobject name="NiPSysEmitterCtlr" abstract="0" inherit="NiPSysModifierCtlr">
        Particle system emitter controller.
        NiInterpController::GetInterpolatorID() string format:
            ['BirthRate', 'EmitterActive'] (for "Interpolator" and "Visibility Interpolator" respectively)
        <field name="Visibility Interpolator" type="Ref" template="NiInterpolator" ver1="10.2.0.0" />
        <field name="Data" type="Ref" template="NiPSysEmitterCtlrData" ver2="10.1.0.103" />
    </niobject>

    <niobject name="NiPSysModifierBoolCtlr" abstract="1" inherit="NiPSysModifierCtlr">
        A particle system modifier controller that animates a boolean value for particles.
    </niobject>

    <niobject name="NiPSysModifierActiveCtlr" abstract="0" inherit="NiPSysModifierBoolCtlr">
        A particle system modifier controller that animates active/inactive state for particles.
        <field name="Data" type="Ref" template="NiVisData" ver2="10.1.0.103" />
    </niobject>

    <niobject name="NiPSysModifierFloatCtlr" abstract="1" inherit="NiPSysModifierCtlr">
        A particle system modifier controller that animates a floating point value for particles.
        <field name="Data" type="Ref" template="NiFloatData" ver2="10.1.0.103" />
    </niobject>

    <niobject name="NiPSysEmitterDeclinationCtlr" abstract="0" inherit="NiPSysModifierFloatCtlr">
        Animates the declination value on an NiPSysEmitter object.
    </niobject>

    <niobject name="NiPSysEmitterDeclinationVarCtlr" abstract="0" inherit="NiPSysModifierFloatCtlr">
        Animates the declination variation value on an NiPSysEmitter object.
    </niobject>

    <niobject name="NiPSysEmitterInitialRadiusCtlr" abstract="0" inherit="NiPSysModifierFloatCtlr">
        Animates the size value on an NiPSysEmitter object.
    </niobject>

    <niobject name="NiPSysEmitterLifeSpanCtlr" abstract="0" inherit="NiPSysModifierFloatCtlr">
        Animates the lifespan value on an NiPSysEmitter object.
    </niobject>

    <niobject name="NiPSysEmitterSpeedCtlr" abstract="0" inherit="NiPSysModifierFloatCtlr">
        Animates the speed value on an NiPSysEmitter object.
    </niobject>

    <niobject name="NiPSysGravityStrengthCtlr" abstract="0" inherit="NiPSysModifierFloatCtlr">
        Animates the strength value of an NiPSysGravityModifier.
    </niobject>


    <niobject name="NiFloatInterpController" abstract="1" inherit="NiSingleInterpController">
        Abstract base class for all NiInterpControllers that use an NiInterpolator to animate their target float value.
    </niobject>

    <niobject name="NiFlipController" abstract="0" inherit="NiFloatInterpController">
        Changes the image a Map (TexDesc) will use. Uses a float interpolator to animate the texture index.
        Often used for performing flipbook animation.
        <field name="Texture Slot" type="TexType">Target texture slot (0=base, 4=glow).</field>
        <field name="Start Time" type="float" ver1="3.3.0.13" ver2="10.1.0.103" />
        <field name="Delta" type="float" ver2="10.1.0.103">
            Time between two flips.
            delta = (start_time - stop_time) / sources.num_indices
        </field>
        <field name="Num Sources" type="uint" />
        <field name="Sources" type="Ref" template="NiSourceTexture" arr1="Num Sources" ver1="4.0.0.0">The texture sources.</field>
        <field name="Images" type="Ref" template="NiImage" arr1="Num Sources" ver2="3.1">The image sources</field>
    </niobject>

    <niobject name="NiAlphaController" abstract="0" inherit="NiFloatInterpController">
        Animates the alpha value of a property using an interpolator.
        <field name="Data" type="Ref" template="NiFloatData" ver2="10.1.0.103" />
    </niobject>

    <niobject name="NiTextureTransformController" abstract="0" inherit="NiFloatInterpController">
        Used to animate a single member of an NiTextureTransform.
        NiInterpController::GetCtlrID() string formats:
            ['%1-%2-TT_TRANSLATE_U', '%1-%2-TT_TRANSLATE_V', '%1-%2-TT_ROTATE', '%1-%2-TT_SCALE_U', '%1-%2-TT_SCALE_V']
        (Depending on "Operation" enumeration, %1 = Value of "Shader Map", %2 = Value of "Texture Slot")
        <field name="Shader Map" type="bool">Is the target map a shader map?</field>
        <field name="Texture Slot" type="TexType">The target texture slot.</field>
        <field name="Operation" type="TransformMember">Controls which aspect of the texture transform to modify.</field>
        <field name="Data" type="Ref" template="NiFloatData" ver2="10.1.0.103" />
    </niobject>

    <niobject name="NiLightDimmerController" abstract="0" inherit="NiFloatInterpController">
        Unknown controller.
    </niobject>

    <niobject name="NiBoolInterpController" abstract="1" inherit="NiSingleInterpController">
        Abstract base class for all NiInterpControllers that use a NiInterpolator to animate their target boolean value.
    </niobject>

    <niobject name="NiVisController" abstract="0" inherit="NiBoolInterpController">
        Animates the visibility of an NiAVObject.
        <field name="Data" type="Ref" template="NiVisData" ver2="10.1.0.103" />
    </niobject>

    <niobject name="NiPoint3InterpController" abstract="1" inherit="NiSingleInterpController">
        Abstract base class for all NiInterpControllers that use an NiInterpolator to animate their target NiPoint3 value.
    </niobject>

    <niobject name="NiMaterialColorController" abstract="0" inherit="NiPoint3InterpController">
        Time controller for material color. Flags are used for color selection in versions below 10.1.0.0.
        Bits 4-5: Target Color (00 = Ambient, 01 = Diffuse, 10 = Specular, 11 = Emissive)
        NiInterpController::GetCtlrID() string formats:
            ['AMB', 'DIFF', 'SPEC', 'SELF_ILLUM'] (Depending on "Target Color")
        <field name="Target Color" type="MaterialColor" ver1="10.1.0.0">Selects which color to control.</field>
        <field name="Data" type="Ref" template="NiPosData" ver2="10.1.0.103" />
    </niobject>

    <niobject name="NiLightColorController" abstract="0" inherit="NiPoint3InterpController">
        Animates the ambient, diffuse and specular colors of an NiLight.
        NiInterpController::GetCtlrID() string formats:
            ['Diffuse', 'Ambient'] (Depending on "Target Color")
        <field name="Target Color" type="LightColor" ver1="10.1.0.0" />
        <field name="Data" type="Ref" template="NiPosData" ver2="10.1.0.103" />
    </niobject>


    <niobject name="NiExtraDataController" abstract="1" inherit="NiSingleInterpController">
        Abstract base class for all extra data controllers.
        NiInterpController::GetCtlrID() string format:
            '%s'
        Where %s = Value of "Extra Data Name"
        <field name="Extra Data Name" type="string" ver1="10.2.0.0" />
    </niobject>

    <niobject name="NiFloatExtraDataController" abstract="0" inherit="NiExtraDataController">
        Animates an NiFloatExtraData object attached to an NiAVObject.
        NiInterpController::GetCtlrID() string format is same as parent.
        <field name="Num Extra Bytes" type="byte" ver2="10.1.0.0">Number of extra bytes.</field>
        <field name="Unknown Bytes" type="byte" arr1="7" ver2="10.1.0.0">Unknown.</field>
        <field name="Unknown Extra Bytes" type="byte" arr1="Num Extra Bytes" ver2="10.1.0.0">Unknown.</field>
        <field name="Data" type="Ref" template="NiFloatData" ver2="10.1.0.103" />
    </niobject>

    <niobject name="NiFloatsExtraDataController" abstract="0" inherit="NiExtraDataController">
        Animates an NiFloatsExtraData object attached to an NiAVObject.
        NiInterpController::GetCtlrID() string format:
            '%s[%d]'
        Where %s = Value of "Extra Data Name", %d = Value of "Floats Extra Data Index"
        <field name="Floats Extra Data Index" type="int" />
        <field name="Data" type="Ref" template="NiFloatData" ver2="10.1.0.103" />
    </niobject>

    <niobject name="NiFloatsExtraDataPoint3Controller" abstract="0" inherit="NiExtraDataController">
        Animates an NiFloatsExtraData object attached to an NiAVObject.
        NiInterpController::GetCtlrID() string format:
            '%s[%d]'
        Where %s = Value of "Extra Data Name", %d = Value of "Floats Extra Data Index"
        <field name="Floats Extra Data Index" type="int" />
    </niobject>

    <niobject name="NiBoneLODController" abstract="0" inherit="NiTimeController">
        DEPRECATED (20.5), Replaced by NiSkinningLODController.
        Level of detail controller for bones.  Priority is arranged from low to high.
        <field name="LOD" type="uint">Unknown.</field>
        <field name="Num LODs" type="uint">Number of LODs.</field>
        <field name="Num Node Groups" type="uint">Number of node arrays.</field>
        <field name="Node Groups" type="NodeSet" arr1="Num LODs">A list of node sets (each set a sequence of bones).</field>
        <field name="Num Shape Groups" type="uint" ver1="4.2.2.0" userver="0">Number of shape groups.</field>
        <field name="Num Shape Groups" type="uint" ver1="10.2.0.0" ver2="10.2.0.0" userver="1">Number of shape groups.</field>
        <field name="Shape Groups 1" type="SkinInfoSet" arr1="Num Shape Groups"  ver1="4.2.2.0" userver="0">List of shape groups.</field>
        <field name="Shape Groups 1" type="SkinInfoSet" arr1="Num Shape Groups"  ver1="10.2.0.0" ver2="10.2.0.0" userver="1">List of shape groups.</field>
        <field name="Num Shape Groups 2" type="uint"  ver1="4.2.2.0" userver="0">The size of the second list of shape groups.</field>
        <field name="Num Shape Groups 2" type="uint"  ver1="10.2.0.0" ver2="10.2.0.0" userver="1">The size of the second list of shape groups.</field>
        <field name="Shape Groups 2" type="Ref" template="NiTriBasedGeom" arr1="Num Shape Groups 2"  ver1="4.2.2.0" userver="0">Group of NiTriShape indices.</field>
        <field name="Shape Groups 2" type="Ref" template="NiTriBasedGeom" arr1="Num Shape Groups 2"  ver1="10.2.0.0" ver2="10.2.0.0" userver="1">Group of NiTriShape indices.</field>
        <field name="Unknown Int 2" type="int" ver1="20.3.0.9" ver2="20.3.0.9" userver="131072">Unknown.</field>
        <field name="Unknown Int 3" type="int" ver1="20.3.0.9" ver2="20.3.0.9" userver="131072">Unknown.</field>
    </niobject>

    <niobject name="NiBSBoneLODController" abstract="0" inherit="NiBoneLODController">
        A simple LOD controller for bones.
    </niobject>
    
    <compound name="MaterialData">
        <field name="Has Shader" type="bool" ver1="10.0.1.0" ver2="20.1.0.3">Shader.</field>
        <field name="Shader Name" type="string" cond="Has Shader" ver1="10.0.1.0" ver2="20.1.0.3">The shader name.</field>
        <field name="Shader Extra Data" type="int" cond="Has Shader" ver1="10.0.1.0" ver2="20.1.0.3">Extra data associated with the shader. A value of -1 means the shader is the default implementation.</field>
        <field name="Num Materials" type="uint" ver1="20.2.0.5" />
        <field name="Material Name" type="string" arr1="Num Materials" ver1="20.2.0.5">The name of the material.</field>
        <field name="Material Extra Data" type="int" arr1="Num Materials" ver1="20.2.0.5">Extra data associated with the material. A value of -1 means the material is the default implementation.</field>
        <field name="Active Material" type="int" default="-1" ver1="20.2.0.5">The index of the currently active material.</field>
        <!-- Custom Versions -->
        <field name="Unknown Byte" type="byte" default="255" ver1="10.2.0.0" ver2="10.2.0.0" userver="1">Cyanide extension (only in version 10.2.0.0?).</field>
        <field name="Unknown Integer 2" type="int" ver1="10.4.0.1" ver2="10.4.0.1">Unknown.</field>
        <!-- / Custom -->
        <field name="Material Needs Update" type="bool" ver1="20.2.0.7">Whether the materials for this object always needs to be updated before rendering with them.</field>
    </compound>

    <niobject name="NiGeometry" abstract="1" inherit="NiAVObject">
        Describes a visible scene element with vertices like a mesh, a particle system, lines, etc.
        <!-- Bethesda 20.2.0.7 NIFs: NiGeometry was changed to BSGeometry. 
             Most new blocks (e.g. BSTriShape) do not refer to NiGeometry except NiParticleSystem was changed to use BSGeometry.
             This causes massive inheritance problems so the rows below are doubled up to exclude NiParticleSystem for Bethesda Stream 100+.
        -->
        <!-- BSGeometry: Used by Bethesda Stream 100+ NiParticleSystem -->
        <field name="Bound" type="NiBound" vercond="(User Version 2 &gt;= 100)" cond="NiParticleSystem" />
        <field name="Skin" type="Ref" template="NiObject" vercond="(User Version 2 &gt;= 100)" cond="NiParticleSystem" />
        <!-- NiGeometry: Each row is doubled in order to exclude NiParticleSystem for Bethesda Stream 100+ -->
        <field name="Data" type="Ref" template="NiGeometryData" vercond="(User Version 2 &lt; 100)">Data index (NiTriShapeData/NiTriStripData).</field>
        <field name="Data" type="Ref" template="NiGeometryData" vercond="(User Version 2 &gt;= 100)" cond="!NiParticleSystem">Data index (NiTriShapeData/NiTriStripData).</field>
        <field name="Skin Instance" type="Ref" template="NiSkinInstance" ver1="3.3.0.13" vercond="(User Version 2 &lt; 100)" />
        <field name="Skin Instance" type="Ref" template="NiSkinInstance" vercond="(User Version 2 &gt;= 100)" cond="!NiParticleSystem" />
        <field name="Material Data" type="MaterialData" ver1="10.0.1.0" vercond="(User Version 2 &lt; 100)" />
        <field name="Material Data" type="MaterialData" ver1="10.0.1.0" vercond="(User Version 2 &gt;= 100)" cond="!NiParticleSystem" />
        <!-- Bethesda -->
        <field name="Shader Property" type="Ref" template="BSShaderProperty" ver1="20.2.0.7" userver="12" />
        <field name="Alpha Property" type="Ref" template="NiAlphaProperty" ver1="20.2.0.7" userver="12" />
    </niobject>

    <niobject name="NiTriBasedGeom" abstract="1" inherit="NiGeometry">
        Describes a mesh, built from triangles.
    </niobject>

    <bitflags name="VectorFlags" storage="ushort" prefix="VF">
        <option value="0" name="UV_1" />
        <option value="1" name="UV_2" />
        <option value="2" name="UV_4" />
        <option value="3" name="UV_8" />
        <option value="4" name="UV_16" />
        <option value="5" name="UV_32" />
        <option value="6" name="Unk64" />
        <option value="7" name="Unk128" />
        <option value="8" name="Unk256" />
        <option value="9" name="Unk512" />
        <option value="10" name="Unk1024" />
        <option value="11" name="Unk2048" />
        <option value="12" name="Has_Tangents" />
        <option value="13" name="Unk8192" />
        <option value="14" name="Unk16384" />
        <option value="15" name="Unk32768" />
    </bitflags>
    
    <bitflags name="BSVectorFlags" storage="ushort" prefix="BSVF">
        <option value="0" name="Has_UV" />
        <option value="1" name="Unk2" />
        <option value="2" name="Unk4" />
        <option value="3" name="Unk8" />
        <option value="4" name="Unk16" />
        <option value="5" name="Unk32" />
        <option value="6" name="Unk64" />
        <option value="7" name="Unk128" />
        <option value="8" name="Unk256" />
        <option value="9" name="Unk512" />
        <option value="10" name="Unk1024" />
        <option value="11" name="Unk2048" />
        <option value="12" name="Has_Tangents" />
        <option value="13" name="Unk8192" />
        <option value="14" name="Unk16384" />
        <option value="15" name="Unk32768" />
    </bitflags>

    <niobject name="NiGeometryData" abstract="1" inherit="NiObject">
        Mesh data: vertices, vertex normals, etc.
        <!-- Bethesda 20.2.0.7 NIFs: NiParticlesData no longer inherits from NiGeometryData and inherits NiObject directly. 
           "Num Vertices" is renamed to "BS Max Vertices" for Bethesda 20.2 because Vertices, Normals, Tangents, Colors, and UV arrays
           do not have length for NiPSysData regardless of "Num" or booleans.
        -->
        <field name="Group ID" type="int" ver1="10.1.0.114">Always zero.</field>
        <field name="Num Vertices" type="ushort" cond="!NiPSysData">Number of vertices.</field>
        <field name="Num Vertices" type="ushort" cond="NiPSysData" vercond="(User Version 2 &lt; 34)">Number of vertices.</field>
        <field name="BS Max Vertices" type="ushort" cond="NiPSysData" vercond="(User Version 2 &gt;= 34)">Bethesda uses this for max number of particles in NiPSysData.</field>
        <field name="Keep Flags" type="byte" ver1="10.1.0.0">Used with NiCollision objects when OBB or TRI is set.</field>
        <field name="Compress Flags" type="byte" ver1="10.1.0.0">Unknown.</field>
        <field name="Has Vertices" type="bool" default="1">Is the vertex array present? (Always non-zero.)</field>
        <field name="Vertices" type="Vector3" arr1="Num Vertices" cond="Has Vertices">The mesh vertices.</field>
        <field name="Vector Flags" type="VectorFlags" ver1="10.0.1.0" vercond="!((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))" />
        <field name="BS Vector Flags" type="BSVectorFlags" vercond="((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))" />
        <field name="Material CRC" type="uint" ver1="20.2.0.7" ver2="20.2.0.7" userver="12" />
        <field name="Has Normals" type="bool">Do we have lighting normals? These are essential for proper lighting: if not present, the model will only be influenced by ambient light.</field>
        <field name="Normals" type="Vector3" arr1="Num Vertices" cond="Has Normals">The lighting normals.</field>
        <field name="Tangents" type="Vector3" arr1="Num Vertices" cond="(Has Normals) &amp;&amp; ((Vector Flags | BS Vector Flags) &amp; 4096)" ver1="10.1.0.0">Tangent vectors.</field>
        <field name="Bitangents" type="Vector3" arr1="Num Vertices" cond="(Has Normals) &amp;&amp; ((Vector Flags | BS Vector Flags) &amp; 4096)" ver1="10.1.0.0">Bitangent vectors.</field>
        <!-- TODO: NiBound -->
        <field name="Center" type="Vector3">Center of the bounding box (smallest box that contains all vertices) of the mesh.</field>
        <field name="Radius" type="float">Radius of the mesh: maximal Euclidean distance between the center and all vertices.</field>
        <field name="Unknown 13 shorts" type="short" arr1="13" ver1="20.3.0.9" ver2="20.3.0.9" userver="131072">Unknown, always 0?</field>
        <!-- / NiBound -->
        <field name="Has Vertex Colors" type="bool">
            Do we have vertex colors? These are usually used to fine-tune the lighting of the model.

            Note: how vertex colors influence the model can be controlled by having a NiVertexColorProperty object as a property child of the root node. If this property object is not present, the vertex colors fine-tune lighting.

            Note 2: set to either 0 or 0xFFFFFFFF for NifTexture compatibility.
        </field>
        <field name="Vertex Colors" type="Color4" arr1="Num Vertices" cond="Has Vertex Colors">The vertex colors.</field>
        <field name="Num UV Sets" type="ushort" ver2="4.2.2.0">The lower 6 (or less?) bits of this field represent the number of UV texture sets. The other bits are probably flag bits. For versions 10.1.0.0 and up, if bit 12 is set then extra vectors are present after the normals.</field>
        <field name="Has UV" type="bool" ver2="4.0.0.2">
            Do we have UV coordinates?

            Note: for compatibility with NifTexture, set this value to either 0x00000000 or 0xFFFFFFFF.
        </field>
        <field name="UV Sets" type="TexCoord" arr1="((Num UV Sets &amp; 63) | (Vector Flags &amp; 63) | (BS Vector Flags &amp; 1))" arr2="Num Vertices">The UV texture coordinates. They follow the OpenGL standard: some programs may require you to flip the second coordinate.</field>
        <field name="Consistency Flags" type="ConsistencyType" ver1="10.0.1.0" default="CT_MUTABLE">Consistency Flags</field>
        <field name="Additional Data" type="Ref" template="AbstractAdditionalGeometryData" ver1="20.0.0.4">Unknown.</field>
    </niobject>

    <niobject name="AbstractAdditionalGeometryData" abstract="1" inherit="NiObject">
    </niobject>

    <niobject name="NiTriBasedGeomData" abstract="1" inherit="NiGeometryData">
        Describes a mesh, built from triangles.
        <field name="Num Triangles" type="ushort">Number of triangles.</field>
    </niobject>

    <niobject name="bhkBlendController" abstract="0" inherit="NiTimeController">
        Unknown. Is apparently only used in skeleton.nif files.
        <field name="Keys" type="uint">Seems to be always zero.</field>
    </niobject>

    <niobject name="BSBound" abstract="0" inherit="NiExtraData">
        Bethesda-specific collision bounding box for skeletons.
        <field name="Center" type="Vector3">Center of the bounding box.</field>
        <field name="Dimensions" type="Vector3">Dimensions of the bounding box from center.</field>
    </niobject>

    <niobject name="BSFurnitureMarker" abstract="0" inherit="NiExtraData">
        Unknown. Marks furniture sitting positions?
        <field name="Num Positions" type="uint">Number of positions.</field>
        <field name="Positions" type="FurniturePosition" arr1="Num Positions">Unknown. Probably has something to do with the furniture positions?</field>
    </niobject>

    <niobject name="BSParentVelocityModifier" abstract="0" inherit="NiPSysModifier">
        Particle modifier that adds a blend of object space translation and rotation to particles born in world space.
        <field name="Damping" type="float">Amount of blending?</field>
    </niobject>

    <niobject name="BSPSysArrayEmitter" abstract="0" inherit="NiPSysVolumeEmitter">
        Particle emitter that uses a node, its children and subchildren to emit from.  Emission will be evenly spread along points from nodes leading to their direct parents/children only.
    </niobject>

    <niobject name="BSWindModifier" abstract="0" inherit="NiPSysModifier">
        Particle Modifier that uses the wind value from the gamedata to alter the path of particles.
        <field name="Strength" type="float">The amount of force wind will have on particles.</field>
    </niobject>

    <niobject name="hkPackedNiTriStripsData" abstract="0" inherit="bhkShapeCollection">
        NiTriStripsData for havok data?
        <field name="Num Triangles" type="uint" />
        <field name="Triangles" type="TriangleData" arr1="Num Triangles" />
        <field name="Num Vertices" type="uint" />
        <field name="Unknown Byte 1" type="byte" ver1="20.2.0.7">Unknown.</field>
        <field name="Vertices" type="Vector3" arr1="Num Vertices" />
        <field name="Num Sub Shapes" type="ushort" ver1="20.2.0.7">Number of subparts.</field>
        <field name="Sub Shapes" type="OblivionSubShape" arr1="Num Sub Shapes" ver1="20.2.0.7">The subparts.</field>
    </niobject>

    <niobject name="NiAlphaProperty" abstract="0" inherit="NiProperty">
        Transparency. Flags 0x00ED.
        <field name="Flags" type="Flags" default="4844"><!--type="AlphaFlags"-->
            Bit 0 : alpha blending enable
            Bits 1-4 : source blend mode
            Bits 5-8 : destination blend mode
            Bit 9 : alpha test enable
            Bit 10-12 : alpha test mode
            Bit 13 : no sorter flag ( disables triangle sorting )

            blend modes (glBlendFunc):
            0000 GL_ONE
            0001 GL_ZERO
            0010 GL_SRC_COLOR
            0011 GL_ONE_MINUS_SRC_COLOR
            0100 GL_DST_COLOR
            0101 GL_ONE_MINUS_DST_COLOR
            0110 GL_SRC_ALPHA
            0111 GL_ONE_MINUS_SRC_ALPHA
            1000 GL_DST_ALPHA
            1001 GL_ONE_MINUS_DST_ALPHA
            1010 GL_SRC_ALPHA_SATURATE

            test modes (glAlphaFunc):
            000 GL_ALWAYS
            001 GL_LESS
            010 GL_EQUAL
            011 GL_LEQUAL
            100 GL_GREATER
            101 GL_NOTEQUAL
            110 GL_GEQUAL
            111 GL_NEVER
        </field>
        <field name="Threshold" type="byte" default="128">Threshold for alpha testing (see: glAlphaFunc)</field>
        <field name="Unknown Short 1" type="ushort" ver2="2.3">Unknown</field>
        <field name="Unknown Int 2" type="uint" ver2="2.3">Unknown</field>
    </niobject>

    <niobject name="NiAmbientLight" abstract="0" inherit="NiLight">
        Ambient light source.
    </niobject>

    <niobject name="NiParticlesData" abstract="0" inherit="NiGeometryData">
        Generic rotating particles data object.
        <!-- Bethesda 20.2.0.7 NIFs: NiParticlesData no longer inherits from NiGeometryData and inherits NiObject directly. 
            `!((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))` means "Not Bethesda 20.2"
        -->
        <field name="Num Particles" type="ushort" ver2="4.0.0.2">The maximum number of particles (matches the number of vertices).</field>
        <field name="Particle Radius" type="float" ver2="10.0.1.0">The particles' size.</field>
        <field name="Has Radii" type="bool" ver1="10.1.0.0">Is the particle size array present?</field>
        <field name="Radii" type="float" arr1="Num Vertices" cond="Has Radii" ver1="10.1.0.0" vercond="!((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))">The individual particle sizes.</field>
        <field name="Num Active" type="ushort">The number of active particles at the time the system was saved. This is also the number of valid entries in the following arrays.</field>
        <field name="Has Sizes" type="bool">Is the particle size array present?</field>
        <field name="Sizes" type="float" arr1="Num Vertices" cond="Has Sizes" vercond="!((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))">The individual particle sizes.</field>
        <field name="Has Rotations" type="bool" ver1="10.0.1.0">Is the particle rotation array present?</field>
        <field name="Rotations" type="Quaternion" arr1="Num Vertices" cond="Has Rotations" ver1="10.0.1.0" vercond="!((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))">The individual particle rotations.</field>
        <field name="Has Rotation Angles" type="bool" ver1="20.0.0.4">Are the angles of rotation present?</field>
        <field name="Rotation Angles" type="float" arr1="Num Vertices" cond="Has Rotation Angles" vercond="!((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))">Angles of rotation</field>
        <field name="Has Rotation Axes" type="bool" ver1="20.0.0.4">Are axes of rotation present?</field>
        <field name="Rotation Axes" type="Vector3" arr1="Num Vertices" cond="Has Rotation Axes" ver1="20.0.0.4" vercond="!((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))">Axes of rotation.</field>
        <!-- Bethesda -->
        <field name="Has Texture Indices" type="bool" vercond="((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))" />
        <field name="Num Subtexture Offsets" type="uint" vercond="(User Version 2 &gt; 34)">How many quads to use in BSPSysSubTexModifier for texture atlasing</field>
        <field name="Num Subtexture Offsets" type="byte" vercond="(Version == 20.2.0.7) &amp;&amp; (User Version 2 &lt;= 34) &amp;&amp; (User Version 2 &gt; 0)">2,4,8,16,32,64 are potential values. If "Has" was no then this should be 256, which represents a 16x16 framed image, which is invalid</field>
        <field name="Subtexture Offsets" type="Vector4" arr1="Num Subtexture Offsets" vercond="((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))">Defines UV offsets</field>
        <field name="Aspect Ratio" type="float" vercond="(User Version 2 &gt; 34)">Sets aspect ratio for Subtexture Offset UV quads</field>
        <field name="Aspect Flags" type="ushort" vercond="(User Version 2 &gt; 34)" />
        <field name="Speed to Aspect Aspect 2" type="float" vercond="(User Version 2 &gt; 34)" />
        <field name="Speed to Aspect Speed 1" type="float" vercond="(User Version 2 &gt; 34)" />
        <field name="Speed to Aspect Speed 2" type="float" vercond="(User Version 2 &gt; 34)" />
    </niobject>

    <niobject name="NiRotatingParticlesData" abstract="0" inherit="NiParticlesData">
        Rotating particles data object.
        <field name="Has Rotations 2" type="bool" ver2="4.2.2.0">Is the particle rotation array present?</field>
        <field name="Rotations 2" type="Quaternion" arr1="Num Vertices" cond="Has Rotations 2" ver2="4.2.2.0">The individual particle rotations.</field>
    </niobject>

    <niobject name="NiAutoNormalParticlesData" abstract="0" inherit="NiParticlesData">
        Particle system data object (with automatic normals?).
    </niobject>

    <compound name="ParticleDesc">
        Particle Description.
        <field name="Translation" type="Vector3">Unknown.</field>
        <field name="Unknown Floats 1" type="float" arr1="3" ver2="10.4.0.1">Unknown.</field>
        <field name="Unknown Float 1" type="float" default="0.9">Unknown.</field>
        <field name="Unknown Float 2" type="float" default="0.9">Unknown.</field>
        <field name="Unknown Float 3" type="float" default="3.0">Unknown.</field>
        <field name="Unknown Int 1" type="int">Unknown.</field>
    </compound>

    <niobject name="NiPSysData" abstract="0" inherit="NiParticlesData">
        Particle system data.
        <!-- `!((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))` means "Not Bethesda 20.2" -->
        <field name="Particle Descriptions" type="ParticleDesc" arr1="Num Vertices" vercond="!((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))" />
        <field name="Has Rotation Speeds" type="bool" ver1="20.0.0.2" />
        <field name="Rotation Speeds" type="float" arr1="Num Vertices" cond="Has Rotation Speeds" ver1="20.0.0.2" vercond="!((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))" />
        <field name="Num Added Particles" type="ushort" vercond="!((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))" />
        <field name="Added Particles Base" type="ushort" vercond="!((Version == 20.2.0.7) &amp;&amp; (User Version 2 &gt; 0))" />
    </niobject>
    
    <niobject name="NiMeshPSysData" abstract="0" inherit="NiPSysData">
        Particle meshes data.
        <field name="Default Pool Size" type="uint" ver1="10.2.0.0" />
        <field name="Fill Pools On Load" type="bool" ver1="10.2.0.0" />
        <field name="Num Generations" type="uint" ver1="10.2.0.0" />
        <field name="Generations" type="uint" ver1="10.2.0.0" arr1="Num Generations" />
        <field name="Particle Meshes" type="Ref" template="NiNode" />
    </niobject>

    <niobject name="NiBinaryExtraData" abstract="0" inherit="NiExtraData">
        Binary extra data object. Used to store tangents and bitangents in Oblivion.
        <field name="Binary Data" type="ByteArray">The binary data.</field>
    </niobject>

    <niobject name="NiBinaryVoxelExtraData" abstract="0" inherit="NiExtraData">
        Voxel extra data object.
        <field name="Unknown Int" type="uint" default="0">Unknown.  0?</field>
        <field name="Data" type="Ref" template="NiBinaryVoxelData">Link to binary voxel data.</field>
    </niobject>

    <niobject name="NiBinaryVoxelData" abstract="0" inherit="NiObject">
        Voxel data object.
        <field name="Unknown Short 1" type="ushort">Unknown.</field>
        <field name="Unknown Short 2" type="ushort">Unknown.</field>
        <field name="Unknown Short 3" type="ushort">Unknown. Is this^3 the Unknown Bytes 1 size?</field>
        <field name="Unknown 7 Floats" type="float" arr1="7">Unknown.</field>
        <field name="Unknown Bytes 1" type="byte" arr1="7" arr2="12">Unknown. Always a multiple of 7.</field>
        <field name="Num Unknown Vectors" type="uint">Unknown.</field>
        <field name="Unknown Vectors" type="Vector4" arr1="Num Unknown Vectors">Vectors on the unit sphere.</field>
        <field name="Num Unknown Bytes 2" type="uint">Unknown.</field>
        <field name="Unknown Bytes 2" type="byte" arr1="Num Unknown Bytes 2">Unknown.</field>
        <field name="Unknown 5 Ints" type="uint" arr1="5">Unknown.</field>
    </niobject>

    <niobject name="NiBlendBoolInterpolator" abstract="0" inherit="NiBlendInterpolator">
        Blends bool values together.
        <field name="Value" type="byte" default="2">The pose value. Invalid if using data.</field>
    </niobject>

    <niobject name="NiBlendFloatInterpolator" abstract="0" inherit="NiBlendInterpolator">
        Blends float values together.
        <field name="Value" type="float" default="-3.402823466e+38">The pose value. Invalid if using data.</field>
    </niobject>

    <niobject name="NiBlendPoint3Interpolator" abstract="0" inherit="NiBlendInterpolator">
        Blends NiPoint3 values together.
        <field name="Value" type="Vector3" default="-3.402823466e+38, -3.402823466e+38, -3.402823466e+38">The pose value. Invalid if using data.</field>
    </niobject>

    <niobject name="NiBlendTransformInterpolator" abstract="0" inherit="NiBlendInterpolator">
        Blends NiQuatTransform values together.
    </niobject>

    <niobject name="NiBoolData" abstract="0" inherit="NiObject">
        Wrapper for boolean animation keys.
        <field name="Data" type="KeyGroup" template="byte">The boolean keys.</field>
    </niobject>

    <niobject name="NiBooleanExtraData" abstract="0" inherit="NiExtraData">
        Boolean extra data.
        <field name="Boolean Data" type="byte">The boolean extra data value.</field>
    </niobject>

    <niobject name="NiBSplineBasisData" abstract="0" inherit="NiObject">
        Contains an NiBSplineBasis for use in interpolation of open, uniform B-Splines.
        <field name="Num Control Points" type="uint">The number of control points of the B-spline (number of frames of animation plus degree of B-spline minus one).</field>
    </niobject>

    <niobject name="NiBSplineFloatInterpolator" abstract="1" inherit="NiBSplineInterpolator">
        Uses B-Splines to animate a float value over time.
        <field name="Value" type="float" default="-3.402823466e+38">Base value when curve not defined.</field>
        <field name="Handle" type="uint" default="0xFFFF">Handle into the data. (USHRT_MAX for invalid handle.)</field>
    </niobject>

    <niobject name="NiBSplineCompFloatInterpolator" abstract="0" inherit="NiBSplineFloatInterpolator">
        NiBSplineFloatInterpolator plus the information required for using compact control points.
        <field name="Float Offset" type="float" default="3.402823466e+38" />
        <field name="Float Half Range" type="float" default="3.402823466e+38" />
    </niobject>

    <niobject name="NiBSplinePoint3Interpolator" abstract="1" inherit="NiBSplineInterpolator">
        Uses B-Splines to animate an NiPoint3 value over time.
        <field name="Value" type="Vector3" default="-3.402823466e+38, -3.402823466e+38, -3.402823466e+38">Base value when curve not defined.</field>
        <field name="Handle" type="uint" default="0xFFFF">Handle into the data. (USHRT_MAX for invalid handle.)</field>
    </niobject>

    <niobject name="NiBSplineCompPoint3Interpolator" abstract="0" inherit="NiBSplinePoint3Interpolator">
        NiBSplinePoint3Interpolator plus the information required for using compact control points.
        <field name="Position Offset" type="float" default="3.402823466e+38" />
        <field name="Position Half Range" type="float" default="3.402823466e+38" />
    </niobject>

    <niobject name="NiBSplineTransformInterpolator" abstract="0" inherit="NiBSplineInterpolator">
        Supports the animation of position, rotation, and scale using an NiQuatTransform.
        The NiQuatTransform can be an unchanging pose or interpolated from B-Spline control point channels.
        <field name="Transform" type="NiQuatTransform" />
        <field name="Translation Handle" type="uint" default="0xFFFF">Handle into the translation data. (USHRT_MAX for invalid handle.)</field>
        <field name="Rotation Handle" type="uint" default="0xFFFF">Handle into the rotation data. (USHRT_MAX for invalid handle.)</field>
        <field name="Scale Handle" type="uint" default="0xFFFF">Handle into the scale data. (USHRT_MAX for invalid handle.)</field>
    </niobject>

    <niobject name="NiBSplineCompTransformInterpolator" abstract="0" inherit="NiBSplineTransformInterpolator">
        NiBSplineTransformInterpolator plus the information required for using compact control points.
        <field name="Translation Offset" type="float" default="3.402823466e+38" />
        <field name="Translation Half Range" type="float" default="3.402823466e+38" />
        <field name="Rotation Offset" type="float" default="3.402823466e+38" />
        <field name="Rotation Half Range" type="float" default="3.402823466e+38" />
        <field name="Scale Offset" type="float" default="3.402823466e+38" />
        <field name="Scale Half Range" type="float" default="3.402823466e+38" />
    </niobject>
	
	<niobject name="BSRotAccumTransfInterpolator" inherit="NiTransformInterpolator">
	</niobject>

    <niobject name="NiBSplineData" abstract="0" inherit="NiObject">
        Contains one or more sets of control points for use in interpolation of open, uniform B-Splines, stored as either float or compact.
        <field name="Num Float Control Points" type="uint" />
        <field name="Float Control Points" type="float" arr1="Num Float Control Points">Float values representing the control data.</field>
        <field name="Num Compact Control Points" type="uint" />
        <field name="Compact Control Points" type="short" arr1="Num Compact Control Points">Signed shorts representing the data from 0 to 1 (scaled by SHRT_MAX).</field>
    </niobject>

    <niobject name="NiCamera" abstract="0" inherit="NiAVObject">
        Camera object.
        <field name="Camera Flags" type="ushort" ver1="10.1.0.0">Obsolete flags.</field>
        <field name="Frustum Left" type="float">Frustrum left.</field>
        <field name="Frustum Right" type="float">Frustrum right.</field>
        <field name="Frustum Top" type="float">Frustrum top.</field>
        <field name="Frustum Bottom" type="float">Frustrum bottom.</field>
        <field name="Frustum Near" type="float">Frustrum near.</field>
        <field name="Frustum Far" type="float">Frustrum far.</field>
        <field name="Use Orthographic Projection" type="bool" ver1="10.1.0.0">Determines whether perspective is used.  Orthographic means no perspective.</field>
        <field name="Viewport Left" type="float">Viewport left.</field>
        <field name="Viewport Right" type="float">Viewport right.</field>
        <field name="Viewport Top" type="float">Viewport top.</field>
        <field name="Viewport Bottom" type="float">Viewport bottom.</field>
        <field name="LOD Adjust" type="float">Level of detail adjust.</field>
        <field name="Scene" type="Ref" template="NiAVObject" />
        <field name="Num Screen Polygons" type="uint" default="0">Deprecated. Array is always zero length on disk write.</field>
        <field name="Num Screen Textures" type="uint" default="0" ver1="4.2.1.0">Deprecated. Array is always zero length on disk write.</field>
        <field name="Unknown Int 3" type="uint" ver2="3.1">Unknown.</field>
    </niobject>

    <niobject name="NiColorData" abstract="0" inherit="NiObject">
        Wrapper for color animation keys.
        <field name="Data" type="KeyGroup" template="Color4">The color keys.</field>
    </niobject>

    <niobject name="NiColorExtraData" abstract="0" inherit="NiExtraData">
        Extra data in the form of NiColorA (red, green, blue, alpha).
        <field name="Data" type="Color4">RGBA Color?</field>
    </niobject>

    <niobject name="NiControllerManager" abstract="0" inherit="NiTimeController">
        Controls animation sequences on a specific branch of the scene graph.
        <field name="Cumulative" type="bool">Whether transformation accumulation is enabled. If accumulation is not enabled, the manager will treat all sequence data on the accumulation root as absolute data instead of relative delta values.</field>
        <field name="Num Controller Sequences" type="uint" />
        <field name="Controller Sequences" type="Ref" template="NiControllerSequence" arr1="Num Controller Sequences" />
        <field name="Object Palette" type="Ref" template="NiDefaultAVObjectPalette" />
    </niobject>

    <niobject name="NiSequence" abstract="0" inherit="NiObject">
        Root node in NetImmerse .kf files (until version 10.0).
        <field name="Name" type="string">The sequence name by which the animation system finds and manages this sequence.</field>
        <field name="Accum Root Name" type="string" ver2="10.1.0.103">The name of the NiAVObject serving as the accumulation root. This is where all accumulated translations, scales, and rotations are applied.</field>
        <field name="Text Keys" type="Ref" template="NiTextKeyExtraData" ver2="10.1.0.103" />
        <field name="Unknown Int 4" type="int" ver1="20.3.0.9" ver2="20.3.0.9" userver="131072">Divinity 2</field>
        <field name="Unknown Int 5" type="int" ver1="20.3.0.9" ver2="20.3.0.9" userver="131072">Divinity 2</field>
        <field name="Num Controlled Blocks" type="uint" />
        <field name="Array Grow By" type="uint" ver1="10.1.0.106" />
        <field name="Controlled Blocks" type="ControlledBlock" arr1="Num Controlled Blocks" />
    </niobject>

    <niobject name="NiControllerSequence" abstract="0" inherit="NiSequence">
        Root node in Gamebryo .kf files (version 10.0.1.0 and up).
        <field name="Weight" type="float" default="1.0" ver1="10.1.0.106">The weight of a sequence describes how it blends with other sequences at the same priority.</field>
        <field name="Text Keys" type="Ref" template="NiTextKeyExtraData" ver1="10.1.0.106" />
        <field name="Cycle Type" type="CycleType" ver1="10.1.0.106" />
        <field name="Frequency" type="float" default="1.0" ver1="10.1.0.106" />
        <field name="Phase" type="float" ver1="10.1.0.106" ver2="10.4.0.1" /> <!-- Actually ver2="10.3.0.1" but WorldShift 10.4.0.1 custom version acts like 10.3.0.1 -->
        <field name="Start Time" type="float" default="3.402823466e+38" ver1="10.1.0.106" />
        <field name="Stop Time" type="float" default="-3.402823466e+38" ver1="10.1.0.106" />
        <field name="Play Backwards" type="bool" ver1="10.1.0.106" ver2="10.1.0.106" />
        <field name="Manager" type="Ptr" template="NiControllerManager" ver1="10.1.0.106">The owner of this sequence.</field>
        <field name="Accum Root Name" type="string" ver1="10.1.0.106">The name of the NiAVObject serving as the accumulation root. This is where all accumulated translations, scales, and rotations are applied.</field>
        <field name="Accum Flags" type="AccumFlags" ver1="20.3.0.8" default="ACCUM_X_FRONT" />
        <field name="String Palette" type="Ref" template="NiStringPalette" ver1="10.1.0.113" ver2="20.1.0.0" />
        <!-- Bethesda -->
        <field name="Anim Notes" type="Ref" template="BSAnimNotes" ver1="20.2.0.7" vercond="(User Version 2 &gt;= 24) &amp;&amp; (User Version 2 &lt;= 28)" />
        <field name="Num Anim Note Arrays" type="ushort" ver1="20.2.0.7" vercond="(User Version 2 &gt; 28)" />
        <field name="Anim Note Arrays" type="Ref" template="BSAnimNotes" arr1="Num Anim Note Arrays" ver1="20.2.0.7" vercond="(User Version 2 &gt; 28)" />
    </niobject>

    <niobject name="NiAVObjectPalette" abstract="1" inherit="NiObject">
        Abstract base class for indexing NiAVObject by name.
    </niobject>

    <niobject name="NiDefaultAVObjectPalette" abstract="0" inherit="NiAVObjectPalette">
        NiAVObjectPalette implementation. Used to quickly look up objects by name.
        <field name="Scene" type="Ptr" template="NiAVObject">Scene root of the object palette.</field>
        <field name="Num Objs" type="uint">Number of objects.</field>
        <field name="Objs" type="AVObject" arr1="Num Objs">The objects.</field>
    </niobject>

    <niobject name="NiDirectionalLight" abstract="0" inherit="NiLight">
        Directional light source.
    </niobject>

    <niobject name="NiDitherProperty" abstract="0" inherit="NiProperty">
        NiDitherProperty allows the application to turn the dithering of interpolated colors and fog values on and off.
        <field name="Flags" type="Flags">1 = Enable dithering</field>
    </niobject>

    <niobject name="NiRollController" abstract="0" inherit="NiSingleInterpController">
        DEPRECATED (10.2), REMOVED (20.5). Replaced by NiTransformController and NiLookAtInterpolator.
        <field name="Data" type="Ref" template="NiFloatData">The data for the controller.</field>
    </niobject>

    <niobject name="NiFloatData" abstract="0" inherit="NiObject">
        Wrapper for 1D (one-dimensional) floating point animation keys.
        <field name="Data" type="KeyGroup" template="float">The keys.</field>
    </niobject>

    <niobject name="NiFloatExtraData" abstract="0" inherit="NiExtraData">
        Extra float data.
        <field name="Float Data" type="float">The float data.</field>
    </niobject>

    <niobject name="NiFloatsExtraData" abstract="0" inherit="NiExtraData">
        Extra float array data.
        <field name="Num Floats" type="uint">Number of floats in the next field.</field>
        <field name="Data" type="float" arr1="Num Floats">Float data.</field>
    </niobject>

    <niobject name="NiFogProperty" abstract="0" inherit="NiProperty">
        NiFogProperty allows the application to enable, disable and control the appearance of fog.
        <field name="Flags" type="Flags">
            Bit 0: Enables Fog
            Bit 1: Sets Fog Function to FOG_RANGE_SQ
            Bit 2: Sets Fog Function to FOG_VERTEX_ALPHA

            If Bit 1 and Bit 2 are not set, but fog is enabled, Fog function is FOG_Z_LINEAR.
        </field>
        <field name="Fog Depth" type="float" default="1.0">Depth of the fog in normalized units. 1.0 = begins at near plane. 0.5 = begins halfway between the near and far planes.</field>
        <field name="Fog Color" type="Color3">The color of the fog.</field>
    </niobject>

    <niobject name="NiGravity" abstract="0" inherit="NiParticleModifier">
        LEGACY (pre-10.1) particle modifier. Applies a gravitational field on the particles.
        <field name="Unknown Float 1" type="float" ver1="3.3.0.13">Unknown.</field>
        <field name="Force" type="float">The strength/force of this gravity.</field>
        <field name="Type" type="FieldType">The force field type.</field>
        <field name="Position" type="Vector3">The position of the mass point relative to the particle system.</field>
        <field name="Direction" type="Vector3">The direction of the applied acceleration.</field>
    </niobject>

    <niobject name="NiIntegerExtraData" abstract="0" inherit="NiExtraData">
        Extra integer data.
        <field name="Integer Data" type="uint">The value of the extra data.</field>
    </niobject>

    <niobject name="BSXFlags" abstract="0" inherit="NiIntegerExtraData">
        Controls animation and collision.  Integer holds flags:
        Bit 0 : enable havok, bAnimated(Skyrim)
        Bit 1 : enable collision, bHavok(Skyrim)
        Bit 2 : is skeleton nif?, bRagdoll(Skyrim)
        Bit 3 : enable animation, bComplex(Skyrim)
        Bit 4 : FlameNodes present, bAddon(Skyrim)
        Bit 5 : EditorMarkers present, bEditorMarker(Skyrim)
        Bit 6 : bDynamic(Skyrim)
        Bit 7 : bArticulated(Skyrim)
        Bit 8 : bIKTarget(Skyrim)/needsTransformUpdates
        Bit 9 : bExternalEmit(Skyrim)
        Bit 10: bMagicShaderParticles(Skyrim)
        Bit 11: bLights(Skyrim)
        Bit 12: bBreakable(Skyrim)
        Bit 13: bSearchedBreakable(Skyrim) .. Runtime only?
    </niobject>

    <niobject name="NiIntegersExtraData" abstract="0" inherit="NiExtraData">
        Extra integer array data.
        <field name="Num Integers" type="uint">Number of integers.</field>
        <field name="Data" type="uint" arr1="Num Integers">Integers.</field>
    </niobject>

    <niobject name="BSKeyframeController" abstract="0" inherit="NiKeyframeController">
        An extended keyframe controller.
        <field name="Data 2" type="Ref" template="NiKeyframeData">A link to more keyframe data.</field>
    </niobject>

    <niobject name="NiKeyframeData" abstract="0" inherit="NiObject">
        DEPRECATED (10.2), RENAMED (10.2) to NiTransformData.
        Wrapper for transformation animation keys.
        <field name="Num Rotation Keys" type="uint">The number of quaternion rotation keys. If the rotation type is XYZ (type 4) then this *must* be set to 1, and in this case the actual number of keys is stored in the XYZ Rotations field.</field>
        <field name="Rotation Type" type="KeyType" cond="Num Rotation Keys != 0">The type of interpolation to use for rotation.  Can also be 4 to indicate that separate X, Y, and Z values are used for the rotation instead of Quaternions.</field>
        <field name="Quaternion Keys" type="QuatKey" arg="Rotation Type" template="Quaternion" arr1="Num Rotation Keys" cond="Rotation Type != 4">The rotation keys if Quaternion rotation is used.</field>
        <field name="Order" type="float" cond="Rotation Type == 4" ver2="10.1.0.0" />
        <field name="XYZ Rotations" type="KeyGroup" template="float" arr1="3" cond="Rotation Type == 4">Individual arrays of keys for rotating X, Y, and Z individually.</field>
        <field name="Translations" type="KeyGroup" template="Vector3">Translation keys.</field>
        <field name="Scales" type="KeyGroup" template="float">Scale keys.</field>
    </niobject>

    <bitflags name="LookAtFlags" storage="ushort">
        <option value="0" name="LOOK_FLIP">Flip</option>
        <option value="1" name="LOOK_Y_AXIS">Y-Axis</option>
        <option value="2" name="LOOK_Z_AXIS">Z-Axis</option>
    </bitflags>

    <niobject name="NiLookAtController" abstract="0" inherit="NiTimeController">
        DEPRECATED (10.2), REMOVED (20.5)
        Replaced by NiTransformController and NiLookAtInterpolator.
        <field name="Flags" type="LookAtFlags" ver1="10.1.0.0" />
        <field name="Look At" type="Ptr" template="NiNode" />
    </niobject>

    <niobject name="NiLookAtInterpolator" abstract="0" inherit="NiInterpolator">
        NiLookAtInterpolator rotates an object so that it always faces a target object.
        <field name="Flags" type="LookAtFlags" />
        <field name="Look At" type="Ptr" template="NiNode" />
        <field name="Look At Name" type="string" />
        <field name="Transform" type="NiQuatTransform" ver2="20.4.0.12" />
        <field name="Interpolator: Translation" type="Ref" template="NiPoint3Interpolator" />
        <field name="Interpolator: Roll" type="Ref" template="NiFloatInterpolator" />
        <field name="Interpolator: Scale" type="Ref" template="NiFloatInterpolator" />
    </niobject>

    <niobject name="NiMaterialProperty" abstract="0" inherit="NiProperty">
        Describes the surface properties of an object e.g. translucency, ambient color, diffuse color, emissive color, and specular color.
        <field name="Flags" type="Flags" ver1="3.0" ver2="10.0.1.2">Property flags.</field>
        <field name="Ambient Color" type="Color3" default="1.0, 1.0, 1.0" vercond="(User Version 2 &lt; 26)">How much the material reflects ambient light.</field>
        <field name="Diffuse Color" type="Color3" default="1.0, 1.0, 1.0" vercond="(User Version 2 &lt; 26)">How much the material reflects diffuse light.</field>
        <field name="Specular Color" type="Color3" default="1.0, 1.0, 1.0">How much light the material reflects in a specular manner.</field>
        <field name="Emissive Color" type="Color3" default="0.0, 0.0, 0.0">How much light the material emits.</field>
        <field name="Glossiness" type="float" default="10.0">The material glossiness.</field>
        <field name="Alpha" type="float" default="1.0">The material transparency (1=non-transparant). Refer to a NiAlphaProperty object in this material's parent NiTriShape object, when alpha is not 1.</field>
        <field name="Emissive Mult" type="float" default="1.0" vercond="(User Version 2 &gt; 21)" />
    </niobject>

    <niobject name="NiMorphData" abstract="0" inherit="NiObject">
        DEPRECATED (20.5), replaced by NiMorphMeshModifier.
        Geometry morphing data.
        <field name="Num Morphs" type="uint">Number of morphing object.</field>
        <field name="Num Vertices" type="uint">Number of vertices.</field>
        <field name="Relative Targets" type="byte" default="1">This byte is always 1 in all official files.</field>
        <field name="Morphs" type="Morph" arg="Num Vertices" arr1="Num Morphs">The geometry morphing objects.</field>
    </niobject>

    <niobject name="NiNode" abstract="0" inherit="NiAVObject">
        Generic node object for grouping.
        <field name="Num Children" type="uint">The number of child objects.</field>
        <field name="Children" type="Ref" template="NiAVObject" arr1="Num Children">List of child node object indices.</field>
        <field name="Num Effects" type="uint" vercond="User Version 2 &lt; 130">The number of references to effect objects that follow.</field>
        <field name="Effects" type="Ref" template="NiDynamicEffect" arr1="Num Effects" vercond="User Version 2 &lt; 130">List of node effects. ADynamicEffect?</field>
    </niobject>

    <niobject name="NiBone" abstract="0" inherit="NiNode">
        A NiNode used as a skeleton bone?
    </niobject>

    <niobject name="AvoidNode" abstract="0" inherit="NiNode">
        Morrowind specific.
    </niobject>

    <niobject name="FxWidget" abstract="0" inherit="NiNode">
        Firaxis-specific UI widgets?
        <field name="Unknown 3" type="byte">Unknown.</field>
        <field name="Unknown 292 Bytes" type="byte" arr1="292">Looks like 9 links and some string data.</field>
    </niobject>

    <niobject name="FxButton" abstract="0" inherit="FxWidget">
        Unknown.
    </niobject>

    <niobject name="FxRadioButton" abstract="0" inherit="FxWidget">
        Unknown.
        <field name="Unknown Int 1" type="uint">Unknown.</field>
        <field name="Unknown Int  2" type="uint">Unknown.</field>
        <field name="Unknown Int 3" type="uint">Unknown.</field>
        <field name="Num Buttons" type="uint">Number of unknown links.</field>
        <field name="Buttons" type="Ptr" template="FxRadioButton" arr1="Num Buttons">Unknown pointers to other buttons.  Maybe other buttons in a group so they can be switch off if this one is switched on?</field>
    </niobject>

    <niobject name="NiBillboardNode" abstract="0" inherit="NiNode">
        These nodes will always be rotated to face the camera creating a billboard effect for any attached objects.

        In pre-10.1.0.0 the Flags field is used for BillboardMode.
        Bit 0: hidden
        Bits 1-2: collision mode
        Bit 3: unknown (set in most official meshes)
        Bits 5-6: billboard mode

        Collision modes:
        00 NONE
        01 USE_TRIANGLES
        10 USE_OBBS
        11 CONTINUE

        Billboard modes:
        00 ALWAYS_FACE_CAMERA
        01 ROTATE_ABOUT_UP
        10 RIGID_FACE_CAMERA
        11 ALWAYS_FACE_CENTER
        <field name="Billboard Mode" type="BillboardMode" ver1="10.1.0.0">The way the billboard will react to the camera.</field>
    </niobject>

    <niobject name="NiBSAnimationNode" abstract="0" inherit="NiNode">
        Bethesda-specific extension of Node with animation properties stored in the flags, often 42?
    </niobject>

    <niobject name="NiBSParticleNode" abstract="0" inherit="NiNode">
        Unknown.
    </niobject>
    
    <bitflags name="NiSwitchFlags" storage="ushort">
        Flags for NiSwitchNode.
        <option value="0" name="UpdateOnlyActiveChild">Update Only Active Child</option>
        <option value="1" name="UpdateControllers">Update Controllers</option>
    </bitflags>

    <niobject name="NiSwitchNode" abstract="0" inherit="NiNode">
        Represents groups of multiple scenegraph subtrees, only one of which (the "active child") is drawn at any given time.
        <field name="Switch Node Flags" type="NiSwitchFlags" ver1="10.1.0.0" />
        <field name="Index" type="uint" />
    </niobject>

    <niobject name="NiLODNode" abstract="0" inherit="NiSwitchNode">
        Level of detail selector. Links to different levels of detail of the same model, used to switch a geometry at a specified distance.
        <field name="LOD Center" type="Vector3" ver1="4.0.0.2" ver2="10.0.1.0" />
        <field name="Num LOD Levels" type="uint" ver2="10.0.1.0" />
        <field name="LOD Levels" type="LODRange" arr1="Num LOD Levels" ver2="10.0.1.0" />
        <field name="LOD Level Data" type="Ref" template="NiLODData" ver1="10.1.0.0" />
    </niobject>

    <niobject name="NiPalette" abstract="0" inherit="NiObject">
        NiPalette objects represent mappings from 8-bit indices to 24-bit RGB or 32-bit RGBA colors.
        <field name="Has Alpha" type="byte" /> <!-- Not bool as always 8-bit -->
        <field name="Num Entries" type="uint" default="256">The number of palette entries. Always 256 but can also be 16.</field>
        <field name="Palette" type="ByteColor4" arr1="16" cond="Num Entries == 16">The color palette.</field>
        <field name="Palette" type="ByteColor4" arr1="256" cond="Num Entries != 16">The color palette.</field>
    </niobject>

    <niobject name="NiParticleBomb" abstract="0" inherit="NiParticleModifier">
        LEGACY (pre-10.1) particle modifier.
        <field name="Decay" type="float" />
        <field name="Duration" type="float" />
        <field name="DeltaV" type="float" />
        <field name="Start" type="float" />
        <field name="Decay Type" type="DecayType" />
        <field name="Symmetry Type" type="SymmetryType" ver1="4.1.0.12" />
        <field name="Position" type="Vector3">The position of the mass point relative to the particle system?</field>
        <field name="Direction" type="Vector3">The direction of the applied acceleration?</field>
    </niobject>

    <niobject name="NiParticleColorModifier" abstract="0" inherit="NiParticleModifier">
        LEGACY (pre-10.1) particle modifier.
        <field name="Color Data" type="Ref" template="NiColorData" />
    </niobject>

    <niobject name="NiParticleGrowFade" abstract="0" inherit="NiParticleModifier">
        LEGACY (pre-10.1) particle modifier.
        <field name="Grow" type="float">The time from the beginning of the particle lifetime during which the particle grows.</field>
        <field name="Fade" type="float">The time from the end of the particle lifetime during which the particle fades.</field>
    </niobject>

    <niobject name="NiParticleMeshModifier" abstract="0" inherit="NiParticleModifier">
        LEGACY (pre-10.1) particle modifier.
        <field name="Num Particle Meshes" type="uint" />
        <field name="Particle Meshes" arr1="Num Particle Meshes" type="Ref" template="NiAVObject" />
    </niobject>

    <niobject name="NiParticleRotation" abstract="0" inherit="NiParticleModifier">
        LEGACY (pre-10.1) particle modifier.
        <field name="Random Initial Axis" type="byte" />
        <field name="Initial Axis" type="Vector3" />
        <field name="Rotation Speed" type="float" />
    </niobject>

    <niobject name="NiParticles" abstract="0" inherit="NiGeometry">
        Generic particle system node.
        <field name="Vertex Desc" type="BSVertexDesc" vercond="(User Version 2 &gt;= 100)" />
    </niobject>

    <niobject name="NiAutoNormalParticles" abstract="0" inherit="NiParticles">
        LEGACY (pre-10.1). NiParticles which do not house normals and generate them at runtime.
    </niobject>

    <niobject name="NiParticleMeshes" abstract="0" inherit="NiParticles">
        LEGACY (pre-10.1). Particle meshes.
    </niobject>

    <niobject name="NiParticleMeshesData" abstract="0" inherit="NiRotatingParticlesData">
        LEGACY (pre-10.1). Particle meshes data.
        <field name="Unknown Link 2" type="Ref" template="NiAVObject">Refers to the mesh that makes up a particle?</field>
    </niobject>

    <niobject name="NiParticleSystem" abstract="0" inherit="NiParticles">
        A particle system.
        <!-- Bethesda -->
        <field name="Far Begin" type="ushort" vercond="(User Version 2 &gt;= 83)" />
        <field name="Far End" type="ushort" vercond="(User Version 2 &gt;= 83)" />
        <field name="Near Begin" type="ushort" vercond="(User Version 2 &gt;= 83)" />
        <field name="Near End" type="ushort" vercond="(User Version 2 &gt;= 83)" />
        <field name="Data" type="Ref" template="NiPSysData" vercond="(User Version 2 &gt;= 100)" />
        <!-- / Bethesda -->
        <field name="World Space" type="bool" default="1" ver1="10.1.0.0">If true, Particles are birthed into world space.  If false, Particles are birthed into object space.</field>
        <field name="Num Modifiers" type="uint" ver1="10.1.0.0">The number of modifier references.</field>
        <field name="Modifiers" type="Ref" template="NiPSysModifier" arr1="Num Modifiers" ver1="10.1.0.0">The list of particle modifiers.</field>
    </niobject>

    <niobject name="NiMeshParticleSystem" abstract="0" inherit="NiParticleSystem">
        Particle system.
    </niobject>

    <niobject name="NiParticleSystemController" abstract="0" inherit="NiTimeController">
        A generic particle system time controller object.
        <field name="Old Speed" type="uint" ver2="3.1">Particle speed in old files</field>
        <field name="Speed" type="float" ver1="3.3.0.13">Particle speed</field>
        <field name="Speed Random" type="float">Particle random speed modifier</field>
        <field name="Vertical Direction" type="float">
            vertical emit direction [radians]
            0.0 : up
            1.6 : horizontal
            3.1416 : down
        </field>
        <field name="Vertical Angle" type="float">emitter's vertical opening angle [radians]</field>
        <field name="Horizontal Direction" type="float">horizontal emit direction</field>
        <field name="Horizontal Angle" type="float">emitter's horizontal opening angle</field>
        <field name="Unknown Normal?" type="Vector3">Unknown.</field>
        <field name="Unknown Color?" type="Color4">Unknown.</field>
        <field name="Size" type="float">Particle size</field>
        <field name="Emit Start Time" type="float">Particle emit start time</field>
        <field name="Emit Stop Time" type="float">Particle emit stop time</field>
        <field name="Unknown Byte" type="byte" ver1="4.0.0.2">Unknown byte, (=0)</field>
        <field name="Old Emit Rate" type="uint" ver2="3.1">Particle emission rate in old files</field>
        <field name="Emit Rate" type="float" ver1="3.3.0.13">Particle emission rate (particles per second)</field>
        <field name="Lifetime" type="float">Particle lifetime</field>
        <field name="Lifetime Random" type="float">Particle lifetime random modifier</field>
        <field name="Emit Flags" type="ushort" ver1="4.0.0.2">Bit 0: Emit Rate toggle bit (0 = auto adjust, 1 = use Emit Rate value)</field>
        <field name="Start Random" type="Vector3">Particle random start translation vector</field>
        <field name="Emitter" type="Ptr" template="NiObject">This index targets the particle emitter object (TODO: find out what type of object this refers to).</field>
        <field name="Unknown Short 2?" type="ushort" ver1="4.0.0.2">? short=0 ?</field>
        <field name="Unknown Float 13?" type="float" ver1="4.0.0.2">? float=1.0 ?</field>
        <field name="Unknown Int 1?" type="uint" ver1="4.0.0.2">? int=1 ?</field>
        <field name="Unknown Int 2?" type="uint" ver1="4.0.0.2">? int=0 ?</field>
        <field name="Unknown Short 3?" type="ushort" ver1="4.0.0.2">? short=0 ?</field>
        <!-- <field name="Particle" type="Particle" ver2="3.1">The particle (older NIF versions only have a single particle per controller?)</field> -->
        <field name="Particle Velocity" type="Vector3" ver2="3.1">Particle velocity</field>
        <field name="Particle Unknown Vector" type="Vector3" ver2="3.1">Unknown</field>
        <field name="Particle Lifetime" type="float" ver2="3.1">The particle's age.</field>
        <field name="Particle Link" type="Ref" template="NiObject" ver2="3.1" />
        <field name="Particle Timestamp" type="uint" ver2="3.1">Timestamp of the last update.</field>
        <field name="Particle Unknown Short" type="ushort" ver2="3.1">Unknown short</field>
        <field name="Particle Vertex Id" type="ushort" ver2="3.1">Particle/vertex index matches array index</field>

        <field name="Num Particles" type="ushort" ver1="4.0.0.2">Size of the following array. (Maximum number of simultaneous active particles)</field>
        <field name="Num Valid" type="ushort" ver1="4.0.0.2">Number of valid entries in the following array. (Number of active particles at the time the system was saved)</field>
        <field name="Particles" type="Particle" arr1="Num Particles" ver1="4.0.0.2">Individual particle modifiers?</field>
        <field name="Unknown Link" type="Ref" template="NiObject" ver1="4.0.0.2">unknown int (=0xffffffff)</field>
        <field name="Particle Extra" type="Ref" template="NiParticleModifier">Link to some optional particle modifiers (NiGravity, NiParticleGrowFade, NiParticleBomb, ...)</field>
        <field name="Unknown Link 2" type="Ref" template="NiObject">Unknown int (=0xffffffff)</field>
        <field name="Trailer" type="byte" ver1="4.0.0.2">Trailing null byte</field>
        <field name="Color Data" type="Ref" template="NiColorData" ver2="3.1" />
        <field name="Unknown Float 1" type="float" ver2="3.1" />
        <field name="Unknown Floats 2" arr1="Particle Unknown Short" type="float" ver2="3.1" />
    </niobject>

    <niobject name="NiBSPArrayController" abstract="0" inherit="NiParticleSystemController">
        A particle system controller, used by BS in conjunction with NiBSParticleNode.
    </niobject>

    <niobject name="NiPathController" abstract="0" inherit="NiTimeController">
        DEPRECATED (10.2), REMOVED (20.5). Replaced by NiTransformController and NiPathInterpolator.
        Time controller for a path.
        <field name="Path Flags" type="PathFlags" ver1="10.1.0.0" />
        <field name="Bank Dir" type="int" default="1">-1 = Negative, 1 = Positive</field>
        <field name="Max Bank Angle" type="float">Max angle in radians.</field>
        <field name="Smoothing" type="float" />
        <field name="Follow Axis" type="short">0, 1, or 2 representing X, Y, or Z.</field>
        <field name="Path Data" type="Ref" template="NiPosData" />
        <field name="Percent Data" type="Ref" template="NiFloatData" />
    </niobject>

    <compound name="PixelFormatComponent">
        <field name="Type" type="PixelComponent">Component Type</field>
        <field name="Convention" type="PixelRepresentation">Data Storage Convention</field>
        <field name="Bits Per Channel" type="byte">Bits per component</field>
        <field name="Is Signed" type="bool" />
    </compound>

    <!--
        NiPixelFormat is not the parent to NiPixelData/NiPersistentSrcTextureRendererData,
        but actually a member class loaded at the top of each. The two classes are not related.
        However, faking this inheritance is useful for several things.    
    -->
    <niobject name="NiPixelFormat" abstract="1" inherit="NiObject">
        <field name="Pixel Format" type="PixelFormat">The format of the pixels in this internally stored image.</field>
        <field name="Red Mask" type="uint" ver2="10.3.0.2">0x000000ff (for 24bpp and 32bpp) or 0x00000000 (for 8bpp)</field>
        <field name="Green Mask" type="uint" ver2="10.3.0.2">0x0000ff00 (for 24bpp and 32bpp) or 0x00000000 (for 8bpp)</field>
        <field name="Blue Mask" type="uint" ver2="10.3.0.2">0x00ff0000 (for 24bpp and 32bpp) or 0x00000000 (for 8bpp)</field>
        <field name="Alpha Mask" type="uint" ver2="10.3.0.2">0xff000000 (for 32bpp) or 0x00000000 (for 24bpp and 8bpp)</field>
        <field name="Bits Per Pixel" type="uint" ver2="10.3.0.2">Bits per pixel, 0 (Compressed), 8, 24 or 32.</field>
        <field name="Old Fast Compare" type="byte" arr1="8" ver2="10.3.0.2">
            [96,8,130,0,0,65,0,0] if 24 bits per pixel
            [129,8,130,32,0,65,12,0] if 32 bits per pixel
            [34,0,0,0,0,0,0,0] if 8 bits per pixel
            [X,0,0,0,0,0,0,0] if 0 (Compressed) bits per pixel where X = PixelFormat
        </field>
        <field name="Tiling" type="PixelTiling" ver1="10.1.0.0" ver2="10.3.0.2">Seems to always be zero.</field>
        <field name="Bits Per Pixel" type="byte" ver1="10.3.0.3">Bits per pixel, 0 (Compressed), 8, 24 or 32.</field>
        <field name="Renderer Hint" type="uint" ver1="10.3.0.3" />
        <field name="Extra Data" type="uint" ver1="10.3.0.3" />
        <field name="Flags" type="byte" ver1="10.3.0.3" />
        <field name="Tiling" type="PixelTiling" ver1="10.3.0.3" />
        <field name="sRGB Space" type="bool" ver1="20.3.0.4" />
        <field name="Channels" type="PixelFormatComponent" arr1="4" ver1="10.3.0.3">Channel Data</field>
    </niobject>

    <niobject name="NiPersistentSrcTextureRendererData" inherit="NiPixelFormat">
        <field name="Palette" type="Ref" template="NiPalette" />
        <field name="Num Mipmaps" type="uint" />
        <field name="Bytes Per Pixel" type="uint" />
        <field name="Mipmaps" type="MipMap" arr1="Num Mipmaps" />
        <field name="Num Pixels" type="uint" />
        <field name="Pad Num Pixels" type="uint" ver1="20.2.0.6" />
        <field name="Num Faces" type="uint" />
        <field name="Platform" type="PlatformID" ver2="30.1.0.0" />
        <field name="Renderer" type="RendererID" ver1="30.1.0.1" />
        <field name="Pixel Data" type="byte" binary="1" arr1="Num Pixels * Num Faces" />
    </niobject>

    <niobject name="NiPixelData" abstract="0" inherit="NiPixelFormat">
        A texture.
        <field name="Palette" type="Ref" template="NiPalette" />
        <field name="Num Mipmaps" type="uint" />
        <field name="Bytes Per Pixel" type="uint" />
        <field name="Mipmaps" type="MipMap" arr1="Num Mipmaps" />
        <field name="Num Pixels" type="uint" />
        <field name="Num Faces" type="uint" ver1="10.3.0.6" default="1" />
        <field name="Pixel Data" type="byte" binary="1" arr1="Num Pixels" ver2="10.3.0.5" />
        <field name="Pixel Data" type="byte" binary="1" arr1="Num Pixels * Num Faces" ver1="10.3.0.6" />
    </niobject>

    <niobject name="NiPlanarCollider" abstract="0" inherit="NiParticleModifier">
        LEGACY (pre-10.1) particle modifier.
        <field name="Unknown Short" type="ushort" ver1="10.0.1.0">Usually 0?</field>
        <field name="Unknown Float 1" type="float">Unknown.</field>
        <field name="Unknown Float 2" type="float">Unknown.</field>
        <field name="Unknown Short 2" type="ushort" ver1="4.2.2.0" ver2="4.2.2.0">Unknown.</field>
        <field name="Unknown Float 3" type="float">Unknown.</field>
        <field name="Unknown Float 4" type="float">Unknown.</field>
        <field name="Unknown Float 5" type="float">Unknown.</field>
        <field name="Unknown Float 6" type="float">Unknown.</field>
        <field name="Unknown Float 7" type="float">Unknown.</field>
        <field name="Unknown Float 8" type="float">Unknown.</field>
        <field name="Unknown Float 9" type="float">Unknown.</field>
        <field name="Unknown Float 10" type="float">Unknown.</field>
        <field name="Unknown Float 11" type="float">Unknown.</field>
        <field name="Unknown Float 12" type="float">Unknown.</field>
        <field name="Unknown Float 13" type="float">Unknown.</field>
        <field name="Unknown Float 14" type="float">Unknown.</field>
        <field name="Unknown Float 15" type="float">Unknown.</field>
        <field name="Unknown Float 16" type="float">Unknown.</field>
    </niobject>

    <niobject name="NiPointLight" abstract="0" inherit="NiLight">
        A point light.
        <field name="Constant Attenuation" type="float" />
        <field name="Linear Attenuation" type="float" default="1.0" />
        <field name="Quadratic Attenuation" type="float" />
    </niobject>

    <niobject name="NiPosData" abstract="0" inherit="NiObject">
        Wrapper for position animation keys.
        <field name="Data" type="KeyGroup" template="Vector3" />
    </niobject>

    <niobject name="NiRotData" abstract="0" inherit="NiObject">
        Wrapper for rotation animation keys.
        <field name="Num Rotation Keys" type="uint" />
        <field name="Rotation Type" type="KeyType" cond="Num Rotation Keys != 0" />
        <field name="Quaternion Keys" type="QuatKey" arg="Rotation Type" template="Quaternion" arr1="Num Rotation Keys" cond="Rotation Type != 4" />
        <field name="XYZ Rotations" type="KeyGroup" template="float" arr1="3" cond="Rotation Type == 4" />
    </niobject>

    <niobject name="NiPSysAgeDeathModifier" abstract="0" inherit="NiPSysModifier">
        Particle modifier that controls and updates the age of particles in the system.
        <field name="Spawn on Death" type="bool">Should the particles spawn on death?</field>
        <field name="Spawn Modifier" type="Ref" template="NiPSysSpawnModifier">The spawner to use on death.</field>
    </niobject>

    <niobject name="NiPSysBombModifier" abstract="0" inherit="NiPSysModifier">
        Particle modifier that applies an explosive force to particles.
        <field name="Bomb Object" type="Ptr" template="NiNode">The object whose position and orientation are the basis of the force.</field>
        <field name="Bomb Axis" type="Vector3">The local direction of the force.</field>
        <field name="Decay" type="float">How the bomb force will decrease with distance.</field>
        <field name="Delta V" type="float">The acceleration the bomb will apply to particles.</field>
        <field name="Decay Type" type="DecayType" />
        <field name="Symmetry Type" type="SymmetryType" />
    </niobject>

    <niobject name="NiPSysBoundUpdateModifier" abstract="0" inherit="NiPSysModifier">
        Particle modifier that creates and updates bound volumes.
        <field name="Update Skip" type="ushort">Optimize by only computing the bound of (1 / Update Skip) of the total particles each frame.</field>
    </niobject>

    <niobject name="NiPSysBoxEmitter" abstract="0" inherit="NiPSysVolumeEmitter">
        Particle emitter that uses points within a defined Box shape to emit from.
        <field name="Width" type="float" />
        <field name="Height" type="float" />
        <field name="Depth" type="float" />
    </niobject>

    <niobject name="NiPSysColliderManager" abstract="0" inherit="NiPSysModifier">
        Particle modifier that adds a defined shape to act as a collision object for particles to interact with.
        <field name="Collider" type="Ref" template="NiPSysCollider" />
    </niobject>

    <niobject name="NiPSysColorModifier" abstract="0" inherit="NiPSysModifier">
        Particle modifier that adds keyframe data to modify color/alpha values of particles over time.
        <field name="Data" type="Ref" template="NiColorData" />
    </niobject>

    <niobject name="NiPSysCylinderEmitter" abstract="0" inherit="NiPSysVolumeEmitter">
        Particle emitter that uses points within a defined Cylinder shape to emit from.
        <field name="Radius" type="float" />
        <field name="Height" type="float" />
    </niobject>

    <niobject name="NiPSysDragModifier" abstract="0" inherit="NiPSysModifier">
        Particle modifier that applies a linear drag force to particles.
        <field name="Drag Object" type="Ptr" template="NiAVObject">The object whose position and orientation are the basis of the force.</field>
        <field name="Drag Axis" type="Vector3" default="1.0, 0.0, 0.0">The local direction of the force.</field>
        <field name="Percentage" type="float" default="0.05">The amount of drag to apply to particles.</field>
        <field name="Range" type="float" default="3.402823466e+38">The distance up to which particles are fully affected.</field>
        <field name="Range Falloff" type="float" default="3.402823466e+38">The distance at which particles cease to be affected.</field>
    </niobject>

    <niobject name="NiPSysEmitterCtlrData" abstract="0" inherit="NiObject">
        DEPRECATED (10.2). Particle system emitter controller data.
        <field name="Birth Rate Keys" type="KeyGroup" template="float" />
        <field name="Num Active Keys" type="uint" />
        <field name="Active Keys" type="Key" arg="1" template="byte" arr1="Num Active Keys" />
    </niobject>

    <niobject name="NiPSysGravityModifier" abstract="0" inherit="NiPSysModifier">
        Particle modifier that applies a gravitational force to particles.
        <field name="Gravity Object" type="Ptr" template="NiAVObject">The object whose position and orientation are the basis of the force.</field>
        <field name="Gravity Axis" type="Vector3" default="1.0, 0.0, 0.0">The local direction of the force.</field>
        <field name="Decay" type="float">How the force diminishes by distance.</field>
        <field name="Strength" type="float" default="1.0">The acceleration of the force.</field>
        <field name="Force Type" type="ForceType">The type of gravitational force.</field>
        <field name="Turbulence" type="float">Adds a degree of randomness.</field>
        <field name="Turbulence Scale" type="float" default="1.0">Scale for turbulence.</field>
        <field name="World Aligned" type="bool" vercond="User Version 2 &gt; 16" />
    </niobject>

    <niobject name="NiPSysGrowFadeModifier" abstract="0" inherit="NiPSysModifier">
        Particle modifier that controls the time it takes to grow and shrink a particle.
        <field name="Grow Time" type="float">The time taken to grow from 0 to their specified size.</field>
        <field name="Grow Generation" type="ushort">Specifies the particle generation to which the grow effect should be applied. This is usually generation 0, so that newly created particles will grow.</field>
        <field name="Fade Time" type="float">The time taken to shrink from their specified size to 0.</field>
        <field name="Fade Generation" type="ushort">Specifies the particle generation to which the shrink effect should be applied. This is usually the highest supported generation for the particle system.</field>
        <field name="Base Scale" type="float" vercond="User Version 2 &gt;= 34">A multiplier on the base particle scale.</field>
    </niobject>

    <niobject name="NiPSysMeshEmitter" abstract="0" inherit="NiPSysEmitter">
        Particle emitter that uses points on a specified mesh to emit from.
        <field name="Num Emitter Meshes" type="uint" />
        <field name="Emitter Meshes" type="Ptr" template="NiAVObject" arr1="Num Emitter Meshes">The meshes which are emitted from.</field>
        <field name="Initial Velocity Type" type="VelocityType">The method by which the initial particle velocity will be computed.</field>
        <field name="Emission Type" type="EmitFrom">The manner in which particles are emitted from the Emitter Meshes.</field>
        <field name="Emission Axis" type="Vector3" default="1.0, 0.0, 0.0">The emission axis if VELOCITY_USE_DIRECTION.</field>
    </niobject>

    <niobject name="NiPSysMeshUpdateModifier" abstract="0" inherit="NiPSysModifier">
        Particle modifier that updates mesh particles using the age of each particle.
        <field name="Num Meshes" type="uint" />
        <field name="Meshes" type="Ref" template="NiAVObject" arr1="Num Meshes" />
    </niobject>
    
    <niobject name="BSPSysInheritVelocityModifier"  abstract="0" inherit="NiPSysModifier">
        <field name="Target" type="Ptr" template="NiNode" />
        <field name="Chance To Inherit" type="float" />
        <field name="Velocity Multiplier" type="float" />
        <field name="Velocity Variation" type="float" />
    </niobject>
    
    <niobject name="BSPSysHavokUpdateModifier"  abstract="0" inherit="NiPSysModifier">
        <field name="Num Nodes" type="uint" />
        <field name="Nodes" type="Ref" template="NiNode" arr1="Num Nodes" />
        <field name="Modifier" type="Ref" template="NiPSysModifier" />
    </niobject>   

    <niobject name="BSPSysRecycleBoundModifier"  abstract="0" inherit="NiPSysModifier">
        <field name="Bound Offset" type="Vector3" />
        <field name="Bound Extent" type="Vector3" />
        <field name="Target" type="Ptr" template="NiNode" />
    </niobject> 
    
    <niobject name="BSPSysSubTexModifier"  abstract="0" inherit="NiPSysModifier">
        Similar to a Flip Controller, this handles particle texture animation on a single texture atlas
        <field name="Start Frame" type="uint">Starting frame/position on atlas</field>
        <field name="Start Frame Fudge" type="float">Random chance to start on a different frame?</field>
        <field name="End Frame" type="float">Ending frame/position on atlas</field>
        <field name="Loop Start Frame" type="float">Frame to start looping</field>
        <field name="Loop Start Frame Fudge" type="float" />
        <field name="Frame Count" type="float" />
        <field name="Frame Count Fudge" type="float" />
    </niobject>
    
    <niobject name="NiPSysPlanarCollider" abstract="0" inherit="NiPSysCollider">
        Particle Collider object which particles will interact with.
        <field name="Width" type="float">Width of the plane along the X Axis.</field>
        <field name="Height" type="float">Height of the plane along the Y Axis.</field>
        <field name="X Axis" type="Vector3">Axis defining a plane, relative to Collider Object.</field>
        <field name="Y Axis" type="Vector3">Axis defining a plane, relative to Collider Object.</field>
    </niobject>

    <niobject name="NiPSysSphericalCollider" abstract="0" inherit="NiPSysCollider">
        Particle Collider object which particles will interact with.
        <field name="Radius" type="float" />
    </niobject>

    <niobject name="NiPSysPositionModifier" abstract="0" inherit="NiPSysModifier">
        Particle modifier that updates the particle positions based on velocity and last update time.
    </niobject>

    <niobject name="NiPSysResetOnLoopCtlr" abstract="0" inherit="NiTimeController">
        Particle modifier that calls reset on a target upon looping.
    </niobject>

    <niobject name="NiPSysRotationModifier" abstract="0" inherit="NiPSysModifier">
        Particle modifier that adds rotations to particles.
        <field name="Rotation Speed" type="float">Initial Rotation Speed in radians per second.</field>
        <field name="Rotation Speed Variation" type="float" ver1="20.0.0.2">Distributes rotation speed over the range [Speed - Variation, Speed + Variation].</field>
        <field name="Rotation Angle" type="float" ver1="20.0.0.2">Initial Rotation Angle in radians.</field>
        <field name="Rotation Angle Variation" type="float" ver1="20.0.0.2">Distributes rotation angle over the range [Angle - Variation, Angle + Variation].</field>
        <field name="Random Rot Speed Sign" type="bool" ver1="20.0.0.2">Randomly negate the initial rotation speed?</field>
        <field name="Random Axis" type="bool" default="1">Assign a random axis to new particles?</field>
        <field name="Axis" type="Vector3" default="1.0, 0.0, 0.0">Initial rotation axis.</field>
    </niobject>

    <niobject name="NiPSysSpawnModifier" abstract="0" inherit="NiPSysModifier">
        Particle modifier that spawns additional copies of a particle.
        <field name="Num Spawn Generations" type="ushort" default="0">Number of allowed generations for spawning. Particles whose generations are >= will not be spawned.</field>
        <field name="Percentage Spawned" type="float" default="1.0">The likelihood of a particular particle being spawned. Must be between 0.0 and 1.0.</field>
        <field name="Min Num to Spawn" type="ushort" default="1">The minimum particles to spawn for any given original particle.</field>
        <field name="Max Num to Spawn" type="ushort" default="1">The maximum particles to spawn for any given original particle.</field>
        <field name="Unknown Int" type="int" ver1="10.4.0.1" ver2="10.4.0.1">WorldShift</field>
        <field name="Spawn Speed Variation" type="float">How much the spawned particle speed can vary.</field>
        <field name="Spawn Dir Variation" type="float">How much the spawned particle direction can vary.</field>
        <field name="Life Span" type="float">Lifespan assigned to spawned particles.</field>
        <field name="Life Span Variation" type="float">The amount the lifespan can vary.</field>
    </niobject>

    <niobject name="NiPSysSphereEmitter" abstract="0" inherit="NiPSysVolumeEmitter">
        Particle emitter that uses points within a sphere shape to emit from.
        <field name="Radius" type="float" />
    </niobject>

    <niobject name="NiPSysUpdateCtlr" abstract="0" inherit="NiTimeController">
        Particle system controller, tells the system to update its simulation.
    </niobject>

    <niobject name="NiPSysFieldModifier" abstract="1" inherit="NiPSysModifier">
        Base for all force field particle modifiers.
        <field name="Field Object" type="Ref" template="NiAVObject">The object whose position and orientation are the basis of the field.</field>
        <field name="Magnitude" type="float">Magnitude of the force.</field>
        <field name="Attenuation" type="float">How the magnitude diminishes with distance from the Field Object.</field>
        <field name="Use Max Distance" type="bool">Whether or not to use a distance from the Field Object after which there is no effect.</field>
        <field name="Max Distance" type="float">Maximum distance after which there is no effect.</field>
    </niobject>

    <niobject name="NiPSysVortexFieldModifier" inherit="NiPSysFieldModifier">
        Particle system modifier, implements a vortex field force for particles.
        <field name="Direction" type="Vector3">Direction of the vortex field in Field Object's space.</field>
    </niobject>

    <niobject name="NiPSysGravityFieldModifier" inherit="NiPSysFieldModifier">
        Particle system modifier, implements a gravity field force for particles.
        <field name="Direction" type="Vector3" default="0.0, -1.0, 0.0">Direction of the gravity field in Field Object's space.</field>
    </niobject>

    <niobject name="NiPSysDragFieldModifier" inherit="NiPSysFieldModifier">
        Particle system modifier, implements a drag field force for particles.
        <field name="Use Direction" type="bool">Whether or not the drag force applies only in the direction specified.</field>
        <field name="Direction" type="Vector3">Direction in which the force applies if Use Direction is true.</field>
    </niobject>

    <niobject name="NiPSysTurbulenceFieldModifier" inherit="NiPSysFieldModifier">
        Particle system modifier, implements a turbulence field force for particles.
        <field name="Frequency" type="float">How many turbulence updates per second.</field>
    </niobject>

    <niobject name="BSPSysLODModifier" inherit="NiPSysModifier">
        <field name="LOD Begin Distance" type="float" default="0.1" />
        <field name="LOD End Distance" type="float" default="0.7" />
        <field name="End Emit Scale" type="float" default="0.2" />
        <field name="End Size" type="float" default="1.0" />
    </niobject>
    
    <niobject name="BSPSysScaleModifier" inherit="NiPSysModifier">
        <field name="Num Scales" type="uint" />
        <field name="Scales" type="float" arr1="Num Scales" />
    </niobject>
    
    
    <niobject name="NiPSysFieldMagnitudeCtlr" inherit="NiPSysModifierFloatCtlr">
        Particle system controller for force field magnitude.
    </niobject>

    <niobject name="NiPSysFieldAttenuationCtlr" inherit="NiPSysModifierFloatCtlr">
        Particle system controller for force field attenuation.
    </niobject>

    <niobject name="NiPSysFieldMaxDistanceCtlr" inherit="NiPSysModifierFloatCtlr">
        Particle system controller for force field maximum distance.
    </niobject>

    <niobject name="NiPSysAirFieldAirFrictionCtlr" inherit="NiPSysModifierFloatCtlr">
        Particle system controller for air field air friction.
    </niobject>

    <niobject name="NiPSysAirFieldInheritVelocityCtlr" inherit="NiPSysModifierFloatCtlr">
        Particle system controller for air field inherit velocity.
    </niobject>

    <niobject name="NiPSysAirFieldSpreadCtlr" inherit="NiPSysModifierFloatCtlr">
        Particle system controller for air field spread.
    </niobject>

    <niobject name="NiPSysInitialRotSpeedCtlr" inherit="NiPSysModifierFloatCtlr">
        Particle system controller for emitter initial rotation speed.
    </niobject>

    <niobject name="NiPSysInitialRotSpeedVarCtlr" inherit="NiPSysModifierFloatCtlr">
        Particle system controller for emitter initial rotation speed variation.
    </niobject>

    <niobject name="NiPSysInitialRotAngleCtlr" inherit="NiPSysModifierFloatCtlr">
        Particle system controller for emitter initial rotation angle.
    </niobject>

    <niobject name="NiPSysInitialRotAngleVarCtlr" inherit="NiPSysModifierFloatCtlr">
        Particle system controller for emitter initial rotation angle variation.
    </niobject>

    <niobject name="NiPSysEmitterPlanarAngleCtlr" inherit="NiPSysModifierFloatCtlr">
        Particle system controller for emitter planar angle.
    </niobject>

    <niobject name="NiPSysEmitterPlanarAngleVarCtlr" inherit="NiPSysModifierFloatCtlr">
        Particle system controller for emitter planar angle variation.
    </niobject>

    <niobject name="NiPSysAirFieldModifier" inherit="NiPSysFieldModifier">
        Particle system modifier, updates the particle velocity to simulate the effects of air movements like wind, fans, or wake.
        <field name="Direction" type="Vector3" default="-1.0, 0.0, 0.0">Direction of the particle velocity</field>
        <field name="Air Friction" type="float">How quickly particles will accelerate to the magnitude of the air field.</field>
        <field name="Inherit Velocity" type="float">How much of the air field velocity will be added to the particle velocity.</field>
        <field name="Inherit Rotation" type="bool" />
        <field name="Component Only" type="bool" />
        <field name="Enable Spread" type="bool" />
        <field name="Spread" type="float">The angle of the air field cone if Enable Spread is true.</field>
    </niobject>
    
    <niobject name="NiPSysTrailEmitter" abstract="0" inherit="NiPSysEmitter">
        Guild 2-Specific node
        <field name="Unknown Int 1" type="int">Unknown</field>
        <field name="Unknown Float 1" type="float">Unknown</field>
        <field name="Unknown Float 2" type="float">Unknown</field>
        <field name="Unknown Float 3" type="float">Unknown</field>
        <field name="Unknown Int 2" type="int">Unknown</field>
        <field name="Unknown Float 4" type="float">Unknown</field>
        <field name="Unknown Int 3" type="int">Unknown</field>
        <field name="Unknown Float 5" type="float">Unknown</field>
        <field name="Unknown Int 4" type="int">Unknown</field>
        <field name="Unknown Float 6" type="float">Unknown</field>
        <field name="Unknown Float 7" type="float">Unknown</field>
    </niobject>

    <niobject name="NiLightIntensityController" inherit="NiFloatInterpController">
        Unknown controller
    </niobject>

    <niobject name="NiPSysRadialFieldModifier" inherit="NiPSysFieldModifier">
        Particle system modifier, updates the particle velocity to simulate the effects of point gravity.
        <field name="Radial Type" type="float">If zero, no attenuation.</field>
    </niobject>

    <niobject name="NiLODData" abstract="1" inherit="NiObject">
        Abstract class used for different types of LOD selections.
    </niobject>

    <niobject name="NiRangeLODData" abstract="0" inherit="NiLODData">
        NiRangeLODData controls switching LOD levels based on Z depth from the camera to the NiLODNode.
        <field name="LOD Center" type="Vector3" />
        <field name="Num LOD Levels" type="uint" />
        <field name="LOD Levels" type="LODRange" arr1="Num LOD Levels" />
    </niobject>

    <niobject name="NiScreenLODData" abstract="0" inherit="NiLODData">
        NiScreenLODData controls switching LOD levels based on proportion of the screen that a bound would include.
        <field name="Bound" type="NiBound" />
        <field name="World Bound" type="NiBound" />
        <field name="Num Proportions" type="uint" />
        <field name="Proportion Levels" type="float" arr1="Num Proportions" />
    </niobject>

    <niobject name="NiRotatingParticles" abstract="0" inherit="NiParticles">
        Unknown.
    </niobject>

    <niobject name="NiSequenceStreamHelper" abstract="0" inherit="NiObjectNET">
        DEPRECATED (pre-10.1), REMOVED (20.3).
        Keyframe animation root node, in .kf files.
    </niobject>

    <niobject name="NiShadeProperty" abstract="0" inherit="NiProperty">
        Determines whether flat shading or smooth shading is used on a shape.
        <field name="Flags" type="Flags" default="1" vercond="(User Version 2 &lt;= 34)">
            Bit 0: Enable smooth phong shading on this shape. Otherwise, hard-edged flat shading will be used on this shape.
        </field>
    </niobject>

    <niobject name="NiSkinData" abstract="0" inherit="NiObject">
        Skinning data.
        <field name="Skin Transform" type="NiTransform">Offset of the skin from this bone in bind position.</field>
        <field name="Num Bones" type="uint">Number of bones.</field>
        <field name="Skin Partition" type="Ref" template="NiSkinPartition" ver1="4.0.0.2" ver2="10.1.0.0">This optionally links a NiSkinPartition for hardware-acceleration information.</field>
        <field name="Has Vertex Weights" type="byte" ver1="4.2.1.0" default="1">Enables Vertex Weights for this NiSkinData.</field>
        <field name="Bone List" type="BoneData" arr1="Num Bones" arg="Has Vertex Weights">Contains offset data for each node that this skin is influenced by.</field>
    </niobject>

    <niobject name="NiSkinInstance" abstract="0" inherit="NiObject">
        Skinning instance.
        <field name="Data" type="Ref" template="NiSkinData">Skinning data reference.</field>
        <field name="Skin Partition" type="Ref" template="NiSkinPartition" ver1="10.2.0.0">Refers to a NiSkinPartition objects, which partitions the mesh such that every vertex is only influenced by a limited number of bones.</field>
        <field name="Skeleton Root" type="Ptr" template="NiNode">Armature root node.</field>
        <field name="Num Bones" type="uint">The number of node bones referenced as influences.</field>
        <field name="Bones" type="Ptr" template="NiNode" arr1="Num Bones">List of all armature bones.</field>
    </niobject>

    <niobject name="NiTriShapeSkinController" abstract="0" inherit="NiTimeController">
        Old version of skinning instance.
        <field name="Num Bones" type="uint">The number of node bones referenced as influences.</field>
        <field name="Vertex Counts" type="uint" arr1="Num Bones">The number of vertex weights stored for each bone.</field>
        <field name="Bones" type="Ptr" template="NiBone" arr1="Num Bones">List of all armature bones.</field>
        <field name="Bone Data" type="OldSkinData" arr1="Num Bones" arr2="Vertex Counts">Contains skin weight data for each node that this skin is influenced by.</field>
    </niobject>

    <niobject name="NiClodSkinInstance" abstract="0" inherit="NiSkinInstance">
        A copy of NISkinInstance for use with NiClod meshes.
    </niobject>

    <niobject name="NiSkinPartition" abstract="0" inherit="NiObject">
        Skinning data, optimized for hardware skinning. The mesh is partitioned in submeshes such that each vertex of a submesh is influenced only by a limited and fixed number of bones.
        <field name="Num Skin Partition Blocks" type="uint" />
		<field name="Skin Partition Blocks" type="SkinPartition" arr1="Num Skin Partition Blocks" vercond="!((Version == 20.2.0.7) &amp;&amp; (User Version 2 == 100))">Skin partition objects.</field>
		<field name="Data Size" type="uint" ver="20.2.0.7" userver2="100" />
		<field name="Vertex Size" type="uint" ver="20.2.0.7" userver2="100" />
		<field name="Vertex Desc" type="BSVertexDesc" ver="20.2.0.7" userver2="100" />
		<field name="Vertex Data" type="BSVertexDataSSE" arg="Vertex Desc\Vertex Attributes" arr1="Data Size / Vertex Size" cond="Data Size &gt; 0" ver="20.2.0.7" userver2="100" />
		<field name="Partition" type="SkinPartition" arr1="Num Skin Partition Blocks" ver="20.2.0.7" userver2="100" />
    </niobject>

    <niobject name="NiTexture" abstract="1" inherit="NiObjectNET">
        A texture.
    </niobject>

    <compound name="FormatPrefs">
        NiTexture::FormatPrefs. These preferences are a request to the renderer to use a format the most closely matches the settings and may be ignored.
        <field name="Pixel Layout" type="PixelLayout">Requests the way the image will be stored.</field>
        <field name="Use Mipmaps" type="MipMapFormat" default="MIP_FMT_DEFAULT">Requests if mipmaps are used or not.</field>
        <field name="Alpha Format" type="AlphaFormat" default="ALPHA_DEFAULT">Requests no alpha, 1-bit alpha, or </field>
    </compound>

    <niobject name="NiSourceTexture" abstract="0" inherit="NiTexture">
        Describes texture source and properties.
        <field name="Use External" type="byte" default="1">Is the texture external?</field>
        <field name="File Name" type="FilePath" cond="Use External == 1">The external texture file name.</field>
        <field name="Unknown Link" type="Ref" template="NiObject" cond="Use External == 1" ver1="10.1.0.0">Unknown.</field>
        <field name="Unknown Byte" type="byte" default="1" cond="Use External == 0" ver2="10.0.1.0">Unknown. Seems to be set if Pixel Data is present?</field>
        <field name="File Name" type="FilePath" cond="Use External == 0" ver1="10.1.0.0">The original source filename of the image embedded by the referred NiPixelData object.</field>
        <field name="Pixel Data" type="Ref" template="NiPixelFormat" cond="Use External == 0">NiPixelData or NiPersistentSrcTextureRendererData</field>
        <field name="Format Prefs" type="FormatPrefs">A set of preferences for the texture format. They are a request only and the renderer may ignore them.</field>
        <field name="Is Static" type="byte" default="1">If set, then the application cannot assume that any dynamic changes to the pixel data will show in the rendered image.</field>
        <field name="Direct Render" type="bool" default="1" ver1="10.1.0.103">A hint to the renderer that the texture can be loaded directly from a texture file into a renderer-specific resource, bypassing the NiPixelData object.</field>
        <field name="Persist Render Data" type="bool" default="0" ver1="20.2.0.4">Pixel Data is NiPersistentSrcTextureRendererData instead of NiPixelData.</field>
    </niobject>

    <niobject name="NiSpecularProperty" abstract="0" inherit="NiProperty">
        Gives specularity to a shape. Flags 0x0001.
        <field name="Flags" type="Flags">Bit 0 = Enable specular lighting on this shape.</field>
    </niobject>

    <niobject name="NiSphericalCollider" abstract="0" inherit="NiParticleModifier">
        LEGACY (pre-10.1) particle modifier.
        <field name="Unknown Float 1" type="float">Unknown.</field>
        <field name="Unknown Short 1" type="ushort">Unknown.</field>
        <field name="Unknown Float 2" type="float">Unknown.</field>
        <field name="Unknown Short 2" type="ushort" ver2="4.2.0.2">Unknown.</field>
        <field name="Unknown Float 3" type="float" ver1="4.2.1.0">Unknown.</field>
        <field name="Unknown Float 4" type="float">Unknown.</field>
        <field name="Unknown Float 5" type="float">Unknown.</field>
    </niobject>

    <niobject name="NiSpotLight" abstract="0" inherit="NiPointLight">
        A spot.
        <field name="Outer Spot Angle" type="float" />
        <field name="Inner Spot Angle" type="float" ver1="20.2.0.5" />
        <field name="Exponent" type="float" default="1.0">Describes the distribution of light. (see: glLight)</field>
    </niobject>

    <niobject name="NiStencilProperty" abstract="0" inherit="NiProperty">
        Allows control of stencil testing.
        <field name="Flags" type="Flags" ver2="10.0.1.2">Property flags.</field>
        <field name="Stencil Enabled" type="byte" ver2="20.0.0.5">Enables or disables the stencil test.</field>
        <field name="Stencil Function" type="StencilCompareMode" ver2="20.0.0.5">Selects the compare mode function (see: glStencilFunc).</field>
        <field name="Stencil Ref" type="uint" ver2="20.0.0.5" />
        <field name="Stencil Mask" type="uint" default="4294967295" ver2="20.0.0.5">A bit mask. The default is 0xffffffff.</field>
        <field name="Fail Action" type="StencilAction" ver2="20.0.0.5" />
        <field name="Z Fail Action" type="StencilAction" ver2="20.0.0.5" />
        <field name="Pass Action" type="StencilAction" ver2="20.0.0.5" />
        <field name="Draw Mode" default="DRAW_BOTH" type="StencilDrawMode" ver2="20.0.0.5">Used to enabled double sided faces. Default is 3 (DRAW_BOTH).</field>
        <field name="Flags" type="Flags" default="19840" ver1="20.1.0.3"><!--type="StencilFlags"-->
            Property flags:
            Bit 0: Stencil Enable
            Bits 1-3: Fail Action
            Bits 4-6: Z Fail Action
            Bits 7-9: Pass Action
            Bits 10-11: Draw Mode
            Bits 12-14: Stencil Function
        </field>
        <field name="Stencil Ref" type="uint" ver1="20.1.0.3" />
        <field name="Stencil Mask" type="uint" default="4294967295" ver1="20.1.0.3">A bit mask. The default is 0xffffffff.</field>
    </niobject>

    <niobject name="NiStringExtraData" abstract="0" inherit="NiExtraData">
        Apparently commands for an optimizer instructing it to keep things it would normally discard.
        Also refers to NiNode objects (through their name) in animation .kf files.
        <field name="Bytes Remaining" type="uint" ver2="4.2.2.0">The number of bytes left in the record.  Equals the length of the following string + 4.</field>
        <field name="String Data" type="string">The string.</field>
    </niobject>

    <niobject name="NiStringPalette" abstract="0" inherit="NiObject">
        List of 0x00-seperated strings, which are names of controlled objects and controller types. Used in .kf files in conjunction with NiControllerSequence.
        <field name="Palette" type="StringPalette">A bunch of 0x00 seperated strings.</field>
    </niobject>

    <niobject name="NiStringsExtraData" abstract="0" inherit="NiExtraData">
        List of strings; for example, a list of all bone names.
        <field name="Num Strings" type="uint">Number of strings.</field>
        <field name="Data" type="SizedString" arr1="Num Strings">The strings.</field>
    </niobject>

    <niobject name="NiTextKeyExtraData" abstract="0" inherit="NiExtraData">
        Extra data, used to name different animation sequences.
        <field name="Unknown Int 1" type="uint" ver2="4.2.2.0">Unknown.  Always equals zero in all official files.</field>
        <field name="Num Text Keys" type="uint">The number of text keys that follow.</field>
        <field name="Text Keys" type="Key" arg="1" template="string" arr1="Num Text Keys">List of textual notes and at which time they take effect. Used for designating the start and stop of animations and the triggering of sounds.</field>
    </niobject>

    <niobject name="NiTextureEffect" abstract="0" inherit="NiDynamicEffect">
        Represents an effect that uses projected textures such as projected lights (gobos), environment maps, and fog maps.
        <field name="Model Projection Matrix" type="Matrix33">Model projection matrix.  Always identity?</field>
        <field name="Model Projection Transform" type="Vector3">Model projection transform.  Always (0,0,0)?</field>
        <field name="Texture Filtering" type="TexFilterMode" default="FILTER_TRILERP">Texture Filtering mode.</field>
        <field name="Max Anisotropy" type="ushort" ver1="20.5.0.4" />
        <field name="Texture Clamping" type="TexClampMode" default="WRAP_S_WRAP_T">Texture Clamp mode.</field>
        <field name="Texture Type" default="TEX_ENVIRONMENT_MAP" type="TextureType">The type of effect that the texture is used for.</field>
        <field name="Coordinate Generation Type" default="CG_SPHERE_MAP" type="CoordGenType">The method that will be used to generate UV coordinates for the texture effect.</field>
        <field name="Image" type="Ref" template="NiImage" ver2="3.1">Image index.</field>
        <field name="Source Texture" type="Ref" template="NiSourceTexture" ver1="4.0.0.0">Source texture index.</field>
        <field name="Enable Plane" default="0" type="byte">Determines whether a clipping plane is used.</field> <!-- Not bool as always 8-bit -->
        <field name="Plane" type="NiPlane" />
        <field name="PS2 L" type="short" default="0" ver2="10.2.0.0" />
        <field name="PS2 K" type="short" default="-75" ver2="10.2.0.0" />
        <field name="Unknown Short" type="ushort" ver2="4.1.0.12">Unknown: 0.</field>
    </niobject>

    <niobject name="NiTextureModeProperty" abstract="0" inherit="NiProperty">
        LEGACY (pre-10.1)
        <field name="Unknown Ints" type="uint" arr1="3" ver2="2.3" />
        <field name="Unknown Short" type="short" ver1="3.0">Unknown. Either 210 or 194.</field>
        <field name="PS2 L" type="short" default="0" ver1="3.1" ver2="10.2.0.0">0?</field>
        <field name="PS2 K" type="short" default="-75" ver1="3.1" ver2="10.2.0.0">-75?</field>
    </niobject>

    <niobject name="NiImage" abstract="0" inherit="NiObject">
        LEGACY (pre-10.1)
        <field name="Use External" type="byte">0 if the texture is internal to the NIF file.</field>
        <field name="File Name" type="FilePath" cond="Use External != 0">The filepath to the texture.</field>
        <field name="Image Data" type="Ref" template="NiRawImageData" cond="Use External == 0">Link to the internally stored image data.</field>
        <field name="Unknown Int" type="uint" default="7">Unknown.  Often seems to be 7. Perhaps m_uiMipLevels?</field>
        <field name="Unknown Float" type="float" ver1="3.1" default="128.5">Unknown.  Perhaps fImageScale?</field>
    </niobject>

    <niobject name="NiTextureProperty" abstract="0" inherit="NiProperty">
        LEGACY (pre-10.1)
        <field name="Unknown Ints 1" type="uint" arr1="2" ver2="2.3">Property flags.</field>
        <field name="Flags" type="Flags" ver1="3.0">Property flags.</field>
        <field name="Image" type="Ref" template="NiImage">Link to the texture image.</field>
        <field name="Unknown Ints 2" type="uint" arr1="2" ver1="3.0" ver2="3.03">Unknown.  0?</field>
    </niobject>

    <niobject name="NiTexturingProperty" abstract="0" inherit="NiProperty">
        Describes how a fragment shader should be configured for a given piece of geometry.
        <field name="Flags" type="Flags" ver2="10.0.1.2">Property flags.</field>
        <field name="Flags" type="Flags" ver1="20.1.0.2">Property flags.</field>
        <field name="Apply Mode" type="ApplyMode" default="APPLY_MODULATE" ver1="3.3.0.13" ver2="20.1.0.1">Determines how the texture will be applied.  Seems to have special functions in Oblivion.</field>
        <field name="Texture Count" type="uint" default="7">Number of textures.</field>
        <field name="Has Base Texture" type="bool">Do we have a base texture?</field>
        <field name="Base Texture" type="TexDesc" cond="Has Base Texture">The base texture.</field>
        <field name="Has Dark Texture" type="bool">Do we have a dark texture?</field>
        <field name="Dark Texture" type="TexDesc" cond="Has Dark Texture">The dark texture.</field>
        <field name="Has Detail Texture" type="bool">Do we have a detail texture?</field>
        <field name="Detail Texture" type="TexDesc" cond="Has Detail Texture">The detail texture.</field>
        <field name="Has Gloss Texture" type="bool">Do we have a gloss texture?</field>
        <field name="Gloss Texture" type="TexDesc" cond="Has Gloss Texture">The gloss texture.</field>
        <field name="Has Glow Texture" type="bool">Do we have a glow texture?</field>
        <field name="Glow Texture" type="TexDesc" cond="Has Glow Texture">The glowing texture.</field>
        <field name="Has Bump Map Texture" type="bool" ver1="3.3.0.13" cond="Texture Count &gt; 5">Do we have a bump map texture?</field>
        <field name="Bump Map Texture" type="TexDesc" cond="Has Bump Map Texture">The bump map texture.</field>
        <field name="Bump Map Luma Scale" type="float" cond="Has Bump Map Texture" />
        <field name="Bump Map Luma Offset" type="float" cond="Has Bump Map Texture" />
        <field name="Bump Map Matrix" type="Matrix22" cond="Has Bump Map Texture" />
        <field name="Has Normal Texture" type="bool" cond="Texture Count &gt; 6" ver1="20.2.0.5">Do we have a normal texture?</field>
        <field name="Normal Texture" type="TexDesc" cond="Has Normal Texture">Normal texture.</field>
        <field name="Has Parallax Texture" type="bool" cond="Texture Count &gt; 7" ver1="20.2.0.5" />
        <field name="Parallax Texture" type="TexDesc" cond="Has Parallax Texture" />
        <field name="Parallax Offset" type="float" cond="Has Parallax Texture" />
        <field name="Has Decal 0 Texture" type="bool" cond="Texture Count &gt; 6" ver2="20.2.0.4">Do we have a decal 0 texture?</field>
        <field name="Has Decal 0 Texture" type="bool" cond="Texture Count &gt; 8" ver1="20.2.0.5">Do we have a decal 0 texture?</field>
        <field name="Decal 0 Texture" type="TexDesc" cond="Has Decal 0 Texture">The decal texture.</field>
        <field name="Has Decal 1 Texture" type="bool" cond="Texture Count &gt; 7" ver2="20.2.0.4">Do we have a decal 1 texture?</field>
        <field name="Has Decal 1 Texture" type="bool" cond="Texture Count &gt; 9" ver1="20.2.0.5">Do we have a decal 1 texture?</field>
        <field name="Decal 1 Texture" type="TexDesc" cond="Has Decal 1 Texture">Another decal texture.</field>
        <field name="Has Decal 2 Texture" type="bool" cond="Texture Count &gt; 8" ver2="20.2.0.4">Do we have a decal 2 texture?</field>
        <field name="Has Decal 2 Texture" type="bool" cond="Texture Count &gt; 10" ver1="20.2.0.5">Do we have a decal 2 texture?</field>
        <field name="Decal 2 Texture" type="TexDesc" cond="Has Decal 2 Texture">Another decal texture.</field>
        <field name="Has Decal 3 Texture" type="bool" cond="Texture Count &gt; 9" ver2="20.2.0.4">Do we have a decal 3 texture?</field>
        <field name="Has Decal 3 Texture" type="bool" cond="Texture Count &gt; 11" ver1="20.2.0.5">Do we have a decal 3 texture?</field>
        <field name="Decal 3 Texture" type="TexDesc" cond="Has Decal 3 Texture">Another decal texture. Who knows the limit.</field>
        <field name="Num Shader Textures" type="uint" ver1="10.0.1.0">Number of Shader textures that follow.</field>
        <field name="Shader Textures" type="ShaderTexDesc" arr1="Num Shader Textures" ver1="10.0.1.0">Shader textures.</field>
    </niobject>

    <niobject name="NiMultiTextureProperty" abstract="0" inherit="NiTexturingProperty" />

    <niobject name="NiTransformData" abstract="0" inherit="NiKeyframeData">
        Wrapper for transformation animation keys.
    </niobject>

    <niobject name="NiTriShape" abstract="0" inherit="NiTriBasedGeom">
        A shape node that refers to singular triangle data.
    </niobject>

    <niobject name="NiTriShapeData" abstract="0" inherit="NiTriBasedGeomData">
        Holds mesh data using a list of singular triangles.
        <field name="Num Triangle Points" type="uint">Num Triangles times 3.</field>
        <field name="Has Triangles" type="bool" ver1="10.1.0.0" calculated="1">Do we have triangle data?</field>
        <field name="Triangles" type="Triangle" arr1="Num Triangles" ver2="10.0.1.2">Triangle data.</field>
        <field name="Triangles" type="Triangle" arr1="Num Triangles" cond="Has Triangles" ver1="10.0.1.3">Triangle face data.</field>
        <field name="Num Match Groups" type="ushort" ver1="3.1">Number of shared normals groups.</field>
        <field name="Match Groups" type="MatchGroup" arr1="Num Match Groups" ver1="3.1">The shared normals.</field>
    </niobject>

    <niobject name="NiTriStrips" abstract="0" inherit="NiTriBasedGeom">
        A shape node that refers to data organized into strips of triangles
    </niobject>

    <niobject name="NiTriStripsData" abstract="0" inherit="NiTriBasedGeomData">
        Holds mesh data using strips of triangles.
        <field name="Num Strips" type="ushort">Number of OpenGL triangle strips that are present.</field>
        <field name="Strip Lengths" type="ushort" arr1="Num Strips">The number of points in each triangle strip.</field>
        <field name="Has Points" type="bool" ver1="10.0.1.3">Do we have strip point data?</field>
        <field name="Points" type="ushort" arr1="Num Strips" arr2="Strip Lengths" ver2="10.0.1.2">The points in the Triangle strips.  Size is the sum of all entries in Strip Lengths.</field>
        <field name="Points" type="ushort" arr1="Num Strips" arr2="Strip Lengths" cond="Has Points" ver1="10.0.1.3">The points in the Triangle strips. Size is the sum of all entries in Strip Lengths.</field>
    </niobject>

    <niobject name="NiEnvMappedTriShape" abstract="0" inherit="NiObjectNET">
        Unknown
        <field name="Unknown 1" type="ushort">unknown (=4 - 5)</field>
        <field name="Unknown Matrix" type="Matrix44">unknown</field>
        <field name="Num Children" type="uint">The number of child objects.</field>
        <field name="Children" type="Ref" template="NiAVObject" arr1="Num Children">List of child node object indices.</field>
        <field name="Child 2" type="Ref" template="NiObject">unknown</field>
        <field name="Child 3" type="Ref" template="NiObject">unknown</field>
    </niobject>

    <niobject name="NiEnvMappedTriShapeData" abstract="0" inherit="NiTriShapeData">
        Holds mesh data using a list of singular triangles.
    </niobject>

    <niobject name="NiBezierTriangle4" abstract="0" inherit="NiObject">
        LEGACY (pre-10.1)
        Sub data of NiBezierMesh
        <field name="Unknown 1" type="uint" arr1="6">unknown</field>
        <field name="Unknown 2" type="ushort">unknown</field>
        <field name="Matrix" type="Matrix33">unknown</field>
        <field name="Vector 1" type="Vector3">unknown</field>
        <field name="Vector 2" type="Vector3">unknown</field>
        <field name="Unknown 3" type="short" arr1="4">unknown</field>
        <field name="Unknown 4" type="byte">unknown</field>
        <field name="Unknown 5" type="uint">unknown</field>
        <field name="Unknown 6" type="short" arr1="24">unknown</field>
    </niobject>

    <niobject name="NiBezierMesh" abstract="0" inherit="NiAVObject">
        LEGACY (pre-10.1)
        Unknown
        <field name="Num Bezier Triangles" type="uint">references.</field>
        <field name="Bezier Triangle" type="Ref" template="NiBezierTriangle4" arr1="Num Bezier Triangles">unknown</field>
        <field name="Unknown 3" type="uint">Unknown.</field>
        <field name="Count 1" type="ushort">Data count.</field>
        <field name="Unknown 4" type="ushort">Unknown.</field>
        <field name="Points 1" type="Vector3" arr1="Count 1">data.</field>
        <field name="Unknown 5" type="uint">Unknown (illegal link?).</field>
        <field name="Points 2" type="float" arr1="Count 1" arr2="2">data.</field>
        <field name="Unknown 6" type="uint">unknown</field>
        <field name="Count 2" type="ushort">data count 2.</field>
        <field name="Data 2" type="ushort" arr1="Count 2" arr2="4">data count.</field>
    </niobject>



    <niobject name="NiClod" abstract="0" inherit="NiTriBasedGeom">
        A shape node that holds continuous level of detail information.
        Seems to be specific to Freedom Force.
    </niobject>

    <niobject name="NiClodData" abstract="0" inherit="NiTriBasedGeomData">
        Holds mesh data for continuous level of detail shapes.
        Pesumably a progressive mesh with triangles specified by edge splits.
        Seems to be specific to Freedom Force.
        The structure of this is uncertain and highly experimental at this point.
        <field name="Unknown Shorts" type="ushort"></field>
        <field name="Unknown Count 1" type ="ushort"></field>
        <field name="Unknown Count 2" type ="ushort"></field>
        <field name="Unknown Count 3" type ="ushort"></field>
        <field name="Unknown Float" type="float"></field>
        <field name="Unknown Short" type="ushort"></field>
        <field name="Unknown Clod Shorts 1" type="ushort" arr1="Unknown Count 1" arr2="6"></field>
        <field name="Unknown Clod Shorts 2" type ="ushort" arr1="Unknown Count 2"></field>
        <field name="Unknown Clod Shorts 3" type ="ushort" arr1="Unknown Count 3" arr2="6"></field>
    </niobject>

    <niobject name="NiUVController" abstract="0" inherit="NiTimeController">
        DEPRECATED (pre-10.1), REMOVED (20.3).
        Time controller for texture coordinates.
        <field name="Unknown Short" type="ushort">Always 0?</field>
        <field name="Data" type="Ref" template="NiUVData">Texture coordinate controller data index.</field>
    </niobject>

    <niobject name="NiUVData" abstract="0" inherit="NiObject">
        DEPRECATED (pre-10.1), REMOVED (20.3)
        Texture coordinate data.
        <field name="UV Groups" type="KeyGroup" template="float" arr1="4">
            Four UV data groups. Appear to be U translation, V translation, U scaling/tiling, V scaling/tiling.
        </field>
    </niobject>

    <niobject name="NiVectorExtraData" abstract="0" inherit="NiExtraData">
        DEPRECATED (20.5).
        Extra data in the form of a vector (as x, y, z, w components).
        <field name="Vector Data" type="Vector4">The vector data.</field>
    </niobject>

    <niobject name="NiVertexColorProperty" abstract="0" inherit="NiProperty">
        Property of vertex colors. This object is referred to by the root object of the NIF file whenever some NiTriShapeData object has vertex colors with non-default settings; if not present, vertex colors have vertex_mode=2 and lighting_mode=1.
        <field name="Flags" type="Flags">
            Bits 0-2: Unknown
            Bit 3: Lighting Mode
            Bits 4-5: Vertex Mode
        </field>
        <field name="Vertex Mode" type="VertMode" ver2="20.0.0.5">In Flags from 20.1.0.3 on.</field>
        <field name="Lighting Mode" type="LightMode" ver2="20.0.0.5">In Flags from 20.1.0.3 on.</field>
    </niobject>

    <niobject name="NiVertWeightsExtraData" abstract="0" inherit="NiExtraData">
        DEPRECATED (10.x), REMOVED (?)
        Not used in skinning.
        Unsure of use - perhaps for morphing animation or gravity.
        <field name="Num Bytes" type="uint">Number of bytes in this data object.</field>
        <field name="Num Vertices" type="ushort">Number of vertices.</field>
        <field name="Weight" type="float" arr1="Num Vertices">The vertex weights.</field>
    </niobject>

    <niobject name="NiVisData" abstract="0" inherit="NiObject">
        DEPRECATED (10.2), REMOVED (?), Replaced by NiBoolData.
        Visibility data for a controller.
        <field name="Num Keys" type="uint" />
        <field name="Keys" type="Key" arg="1" template="byte" arr1="Num Keys" />
    </niobject>

    <niobject name="NiWireframeProperty" abstract="0" inherit="NiProperty">
        Allows applications to switch between drawing solid geometry or wireframe outlines.
        <field name="Flags" type="Flags">
            Property flags.
            0 - Wireframe Mode Disabled
            1 - Wireframe Mode Enabled
        </field>
    </niobject>

    <niobject name="NiZBufferProperty" abstract="0" inherit="NiProperty">
        Allows applications to set the test and write modes of the renderer's Z-buffer and to set the comparison function used for the Z-buffer test.
        <field name="Flags" type="Flags" default="3">
            Bit 0 enables the z test
            Bit 1 controls wether the Z buffer is read only (0) or read/write (1)
        </field>
        <field name="Function" type="ZCompareMode" default="ZCOMP_LESS_EQUAL" ver1="4.1.0.12" ver2="20.0.0.5">
            Z-Test function (see: glDepthFunc). In Flags from 20.1.0.3 on.
        </field>
    </niobject>

    <niobject name="RootCollisionNode" abstract="0" inherit="NiNode">
        Morrowind-specific node for collision mesh.
    </niobject>

    <niobject name="NiRawImageData" abstract="0" inherit="NiObject">
        LEGACY (pre-10.1)
        Raw image data.
        <field name="Width" type="uint">Image width</field>
        <field name="Height" type="uint">Image height</field>
        <field name="Image Type" type="ImageType">The format of the raw image data.</field>
        <field name="RGB Image Data" type="ByteColor3" arr1="Width" arr2="Height" cond="Image Type == 1" >Image pixel data.</field>
        <field name="RGBA Image Data" type="ByteColor4" arr1="Width" arr2="Height" cond="Image Type == 2" >Image pixel data.</field>
    </niobject>
    
    <niobject name="NiAccumulator" abstract="1" inherit="NiObject" />

    <niobject name="NiSortAdjustNode" abstract="0" inherit="NiNode">
        Used to turn sorting off for individual subtrees in a scene. Useful if objects must be drawn in a fixed order.
        <field name="Sorting Mode" type="SortingMode" default="SORTING_INHERIT">Sorting</field>
        <field name="Accumulator" type="Ref" template="NiAccumulator" ver2="20.0.0.3" />
    </niobject>

    <niobject name="NiSourceCubeMap" abstract="0" inherit="NiSourceTexture">
        Represents cube maps that are created from either a set of six image files, six blocks of pixel data, or a single pixel data with six faces.
    </niobject>

    <niobject name="NiPhysXProp" abstract="0" inherit="NiObjectNET">
        A PhysX prop which holds information about PhysX actors in a Gamebryo scene
        <field name="PhysX to World Scale" type="float" />
        <field name="Num Sources" type="uint" />
        <field name="Sources" type="Ref" template="NiObject" arr1="Num Sources" />
        <field name="Num Dests" type="int" />
        <field name="Dests" type="Ref" template="NiPhysXDest" arr1="Num Dests" />
        <field name="Num Modified Meshes" type="uint" ver1="20.4.0.0" />
        <field name="Modified Meshes" type="Ref" template="NiMesh" arr1="Num Modified Meshes" ver1="20.4.0.0" />
        <field name="Temp Name" type="string" ver1="30.1.0.2" ver2="30.2.0.2" />
        <field name="Keep Meshes" type="bool" />
        <field name="Prop Description" type="Ref" template="NiPhysXPropDesc" />
    </niobject>

    <compound name="PhysXMaterialRef">
        <field name="Key" type="ushort" />
        <field name="Material Desc" type="Ref" template="NiPhysXMaterialDesc" />
    </compound>

    <compound name="PhysXStateName">
        <field name="Name" type="string" />
        <field name="Index" type="uint" />
    </compound>

    <niobject name="NiPhysXPropDesc" abstract="0" inherit="NiObject">
        For serialization of PhysX objects and to attach them to the scene.
        <field name="Num Actors" type="int" />
        <field name="Actors" type="Ref" template="NiPhysXActorDesc" arr1="Num Actors" />
        <field name="Num Joints" type="uint" />
        <field name="Joints" type="Ref" template="NiPhysXJointDesc" arr1="Num Joints" />
        <field name="Num Clothes" type="uint" ver1="20.3.0.5" />
        <field name="Clothes" type="Ref" template="NiObject" arr1="Num Clothes" ver1="20.3.0.5" /> <!-- NiPhysXClothDesc -->
        <field name="Num Materials" type="uint" />
        <field name="Materials" type="PhysXMaterialRef" arr1="Num Materials" />
        <field name="Num States" type="uint" />
        <field name="Num State Names" type="uint" ver1="20.4.0.0" />
        <field name="State Names" type="PhysXStateName" arr1="Num State Names" ver1="20.4.0.0" />
        <field name="Flags" type="byte" ver1="20.4.0.0" />
    </niobject>

    <niobject name="NiPhysXActorDesc" abstract="0" inherit="NiObject">
        For serializing NxActor objects.
        <field name="Actor Name" type="string" />
        <field name="Num Poses" type="uint" />
        <field name="Poses" type="Matrix34" arr1="Num Poses" />
        <field name="Body Desc" type="Ref" template="NiPhysXBodyDesc" />
        <field name="Density" type="float" />
        <field name="Actor Flags" type="uint" />
        <field name="Actor Group" type="ushort" />
        <field name="Dominance Group" type="ushort" ver1="20.4.0.0" />
        <field name="Contact Report Flags" type="uint" ver1="20.4.0.0" />
        <field name="Force Field Material" type="ushort" ver1="20.4.0.0" />
        <field name="Dummy" type="uint" ver1="20.3.0.1" ver2="20.3.0.5" />
        <field name="Num Shape Descs" type="uint" />
        <field name="Shape Descriptions" type="Ref" template="NiPhysXShapeDesc" arr1="Num Shape Descs" />
        <field name="Actor Parent" type="Ref" template="NiPhysXActorDesc" />
        <field name="Source" type="Ref" template="NiPhysXRigidBodySrc" />
        <field name="Dest" type="Ref" template="NiPhysXRigidBodyDest" />
    </niobject>

    <compound name="PhysXBodyStoredVels">
        <field name="Linear Velocity" type="Vector3" />
        <field name="Angular Velocity" type="Vector3" />
        <field name="Sleep" type="bool" ver1="30.2.0.3" />
    </compound>

    <niobject name="NiPhysXBodyDesc" inherit="NiObject">
        For serializing NxBodyDesc objects.
        <field name="Local Pose" type="Matrix34" />
        <field name="Space Inertia" type="Vector3" />
        <field name="Mass" type="float" />
        <field name="Num Vels" type="uint" />
        <field name="Vels" type="PhysXBodyStoredVels" arr1="Num Vels" />
        <field name="Wake Up Counter" type="float" />
        <field name="Linear Damping" type="float" />
        <field name="Angular Damping" type="float" />
        <field name="Max Angular Velocity" type="float" />
        <field name="CCD Motion Threshold" type="float" />
        <field name="Flags" type="uint" />
        <field name="Sleep Linear Velocity" type="float" />
        <field name="Sleep Angular Velocity" type="float" />
        <field name="Solver Iteration Count" type="uint" />
        <field name="Sleep Energy Threshold" type="float" ver1="20.3.0.0" />
        <field name="Sleep Damping" type="float" ver1="20.3.0.0" />
        <field name="Contact Report Threshold" type="float" ver1="20.4.0.0" />
    </niobject>

    <enum name="NxJointType" storage="uint">
        <option name="NX_JOINT_PRISMATIC" value="0" />
        <option name="NX_JOINT_REVOLUTE" value="1" />
        <option name="NX_JOINT_CYLINDRICAL" value="2" />
        <option name="NX_JOINT_SPHERICAL" value="3" />
        <option name="NX_JOINT_POINT_ON_LINE" value="4" />
        <option name="NX_JOINT_POINT_IN_PLANE" value="5" />
        <option name="NX_JOINT_DISTANCE" value="6" />
        <option name="NX_JOINT_PULLEY" value="7" />
        <option name="NX_JOINT_FIXED" value="8" />
        <option name="NX_JOINT_D6" value="9" />
    </enum>

    <enum name="NxD6JointMotion" storage="uint">
        <option name="NX_D6JOINT_MOTION_LOCKED" value="0" />
        <option name="NX_D6JOINT_MOTION_LIMITED" value="1" />
        <option name="NX_D6JOINT_MOTION_FREE" value="2" />
    </enum>

    <enum name="NxD6JointDriveType" storage="uint">
        <option name="NX_D6JOINT_DRIVE_POSITION" value="1" />
        <option name="NX_D6JOINT_DRIVE_VELOCITY" value="2" />
    </enum>

    <enum name="NxJointProjectionMode" storage="uint">
        <option name="NX_JPM_NONE" value="0" />
        <option name="NX_JPM_POINT_MINDIST" value="1" />
        <option name="NX_JPM_LINEAR_MINDIST" value="2" />
    </enum>

    <compound name="NiPhysXJointActor">
        <field name="Actor" type="Ref" template="NiPhysXActorDesc" />
        <field name="Local Normal" type="Vector3" />
        <field name="Local Axis" type="Vector3" />
        <field name="Local Anchor" type="Vector3" />
    </compound>

    <compound name="NxJointLimitSoftDesc">
        <field name="Value" type="float" />
        <field name="Restitution" type="float" />
        <field name="Spring" type="float" />
        <field name="Damping" type="float" />
    </compound>

    <compound name="NxJointDriveDesc">
        <field name="Drive Type" type="NxD6JointDriveType" />
        <field name="Restitution" type="float" />
        <field name="Spring" type="float" />
        <field name="Damping" type="float" />
    </compound>

    <compound name="NiPhysXJointLimit">
        <field name="Limit Plane Normal" type="Vector3" />
        <field name="Limit Plane D" type="float" />
        <field name="Limit Plane R" type="float" ver1="20.4.0.0" />
    </compound>

    <niobject name="NiPhysXJointDesc" inherit="NiObject" abstract="1">
        A PhysX Joint abstract base class.
        <field name="Joint Type" type="NxJointType" />
        <field name="Joint Name" type="string" />
        <field name="Actors" type="NiPhysXJointActor" arr1="2" />
        <field name="Max Force" type="float" />
        <field name="Max Torque" type="float" />
        <field name="Solver Extrapolation Factor" type="float" ver1="20.5.0.3" />
        <field name="Use Acceleration Spring" type="uint" ver1="20.5.0.3" />
        <field name="Joint Flags" type="uint" />
        <field name="Limit Point" type="Vector3" />
        <field name="Num Limits" type="uint" />
        <field name="Limits" type="NiPhysXJointLimit" arr1="Num Limits" />
    </niobject>

    <niobject name="NiPhysXD6JointDesc" inherit="NiPhysXJointDesc">
        A 6DOF (6 degrees of freedom) joint.
        <field name="X Motion" type="NxD6JointMotion" />
        <field name="Y Motion" type="NxD6JointMotion" />
        <field name="Z Motion" type="NxD6JointMotion" />
        <field name="Swing 1 Motion" type="NxD6JointMotion" />
        <field name="Swing 2 Motion" type="NxD6JointMotion" />
        <field name="Twist Motion" type="NxD6JointMotion" />
        <field name="Linear Limit" type="NxJointLimitSoftDesc" />
        <field name="Swing 1 Limit" type="NxJointLimitSoftDesc" />
        <field name="Swing 2 Limit" type="NxJointLimitSoftDesc" />
        <field name="Twist Low Limit" type="NxJointLimitSoftDesc" />
        <field name="Twist High Limit" type="NxJointLimitSoftDesc" />
        <field name="X Drive" type="NxJointDriveDesc" />
        <field name="Y Drive" type="NxJointDriveDesc" />
        <field name="Z Drive" type="NxJointDriveDesc" />
        <field name="Swing Drive" type="NxJointDriveDesc" />
        <field name="Twist Drive" type="NxJointDriveDesc" />
        <field name="Slerp Drive" type="NxJointDriveDesc" />
        <field name="Drive Position" type="Vector3" />
        <field name="Drive Orientation" type="Quaternion" />
        <field name="Drive Linear Velocity" type="Vector3" />
        <field name="Drive Angular Velocity" type="Vector3" />
        <field name="Projection Mode" type="NxJointProjectionMode" />
        <field name="Projection Distance" type="float" />
        <field name="Projection Angle" type="float" />
        <field name="Gear Ratio" type="float" />
        <field name="Flags" type="uint" />
    </niobject>

    <enum name="NxShapeType" storage="uint">
        <option name="NX_SHAPE_PLANE" value="0" />
        <option name="NX_SHAPE_SPHERE" value="1" />
        <option name="NX_SHAPE_BOX" value="2" />
        <option name="NX_SHAPE_CAPSULE" value="3" />
        <option name="NX_SHAPE_WHEEL" value="4" />
        <option name="NX_SHAPE_CONVEX" value="5" />
        <option name="NX_SHAPE_MESH" value="6" />
        <option name="NX_SHAPE_HEIGHTFIELD" value="7" />
        <option name="NX_SHAPE_RAW_MESH" value="8" />
        <option name="NX_SHAPE_COMPOUND" value="9" />
    </enum>

    <bitflags name="NxShapeFlag" storage="uint" prefix="NX_SF" since="V20_2_0_8">
        <option bit="0" name="TRIGGER_ON_ENTER" />
        <option bit="1" name="TRIGGER_ON_LEAVE" />
        <option bit="2" name="TRIGGER_ON_STAY" />
        <option bit="3" name="VISUALIZATION" />
        <option bit="4" name="DISABLE_COLLISION" />
        <option bit="5" name="FEATURE_INDICES" />
        <option bit="6" name="DISABLE_RAYCASTING" />
        <option bit="7" name="POINT_CONTACT_FORCE" />
        <option bit="8" name="FLUID_DRAIN" />
        <option bit="10" name="FLUID_DISABLE_COLLISION" />
        <option bit="11" name="FLUID_TWOWAY" />
        <option bit="12" name="DISABLE_RESPONSE" />
        <option bit="13" name="DYNAMIC_DYNAMIC_CCD" />
        <option bit="14" name="DISABLE_SCENE_QUERIES" />
        <option bit="15" name="CLOTH_DRAIN" />
        <option bit="16" name="CLOTH_DISABLE_COLLISION" />
        <option bit="17" name="CLOTH_TWOWAY" />
        <option bit="18" name="SOFTBODY_DRAIN" />
        <option bit="19" name="SOFTBODY_DISABLE_COLLISION" />
        <option bit="20" name="SOFTBODY_TWOWAY" />
    </bitflags>

    <compound name="NxPlane">
        <field name="Val 1" type="float" />
        <field name="Point 1" type="Vector3" />
    </compound>

    <compound name="NxCapsule">
        <field name="Val 1" type="float" />
        <field name="Val 2" type="float" />
        <field name="Capsule Flags" type="uint" />
    </compound>

    <niobject name="NiPhysXShapeDesc" abstract="0" inherit="NiObject">
        For serializing NxShapeDesc objects
        <field name="Shape Type" type="NxShapeType" />
        <field name="Local Pose" type="Matrix34" />
        <field name="Shape Flags" type="uint" />
        <field name="Collision Group" type="ushort" />
        <field name="Material Index" type="ushort" />
        <field name="Density" type="float" />
        <field name="Mass" type="float" />
        <field name="Skin Width" type="float" />
        <field name="Shape Name" type="string" />
        <field name="Non-Interacting Compartment Types" type="uint" ver1="20.4.0.0" />
        <field name="Collision Bits" type="uint" arr1="4" />
        <field name="Plane" type="NxPlane" cond="Shape Type == 0" />
        <field name="Sphere Radius" type="float" cond="Shape Type == 1" />
        <field name="Box Half Extents" type="Vector3" cond="Shape Type == 2" />
        <field name="Capsule" type="NxCapsule" cond="Shape Type == 3" />
        <field name="Mesh" type="Ref" template="NiPhysXMeshDesc" cond="(Shape Type == 5) || (Shape Type == 6)" />
    </niobject>

    <niobject name="NiPhysXMeshDesc" abstract="0" inherit="NiObject">
        Holds mesh data for streaming.
        <field name="Is Convex" type="bool" ver2="20.3.0.4" />
        <field name="Mesh Name" type="string" />
        <field name="Mesh Data" type="ByteArray" />
        <field name="Mesh Size" type="ushort" ver1="20.3.0.5" ver2="30.2.0.2" />
        <field name="Mesh Data" type="ushort" arr1="Mesh Size" ver1="20.3.0.5" ver2="30.2.0.2" />
        <field name="Mesh Flags" type="uint" />
        <field name="Mesh Paging Mode" type="uint" ver1="20.3.0.1" />
        <field name="Is Hardware" type="bool" ver1="20.3.0.2" ver2="20.3.0.4" />
        <field name="Flags" type="byte" ver1="20.3.0.5" />
    </niobject>

    <bitflags name="NxMaterialFlag" storage="uint" prefix="NX_MF" >
        <option name="NX_MF_ANISOTROPIC" value="1" />
        <option name="NX_MF_DUMMY1" value="2" />
        <option name="NX_MF_DUMMY2" value="3" />
        <option name="NX_MF_DUMMY3" value="4" />
        <option name="NX_MF_DISABLE_FRICTION" value="5" />
        <option name="NX_MF_DISABLE_STRONG_FRICTION" value="6" />
    </bitflags>

    <compound name="NxSpringDesc">
        <field name="Spring" type="float" />
        <field name="Damper" type="float" />
        <field name="Target Value" type="float" />
    </compound>

    <enum name="NxCombineMode" storage="uint">
        <option name="NX_CM_AVERAGE" value="0" />
        <option name="NX_CM_MIN" value="1" />
        <option name="NX_CM_MULTIPLY" value="2" />
        <option name="NX_CM_MAX" value="3" />
    </enum>

    <compound name="NxMaterialDesc">
        <field name="Dynamic Friction" type="float" />
        <field name="Static Friction" type="float" />
        <field name="Restitution" type="float" />
        <field name="Dynamic Friction V" type="float" />
        <field name="Static Friction V" type="float" />
        <field name="Direction of Anisotropy" type="Vector3" />
        <field name="Flags" type="NxMaterialFlag" />
        <field name="Friction Combine Mode" type="NxCombineMode" />
        <field name="Restitution Combine Mode" type="NxCombineMode" />
        <field name="Has Spring" type="bool" ver2="20.2.3.0" />
        <field name="Spring" type="NxSpringDesc" ver2="20.2.3.0" cond="Has Spring" />
    </compound>

    <niobject name="NiPhysXMaterialDesc" abstract="0" inherit="NiObject">
        For serializing NxMaterialDesc objects.
        <field name="Index" type="ushort" />
        <field name="Num States" type="uint" />
        <field name="Material Descs" type="NxMaterialDesc" arr1="Num States" />
    </niobject>

    <bitflags name="NxClothFlag" storage="uint" prefix="NX_CLF" since="V20_2_0_8">
        <option bit="0" name="PRESSURE" />
        <option bit="1" name="STATIC" />
        <option bit="2" name="DISABLE_COLLISION" />
        <option bit="3" name="SELFCOLLISION" />
        <option bit="4" name="VISUALIZATION" />
        <option bit="5" name="GRAVITY" />
        <option bit="6" name="BENDING" />
        <option bit="7" name="BENDING_ORTHO" />
        <option bit="8" name="DAMPING" />
        <option bit="9" name="COLLISION_TWOWAY" />
        <option bit="11" name="TRIANGLE_COLLISION" />
        <option bit="12" name="TEARABLE" />
        <option bit="13" name="HARDWARE" />
        <option bit="14" name="COMDAMPING" />
        <option bit="15" name="VALIDBOUNDS" />
        <option bit="16" name="FLUID_COLLISION" />
        <option bit="17" name="DISABLE_DYNAMIC_CCD" />
        <option bit="18" name="ADHERE" />
    </bitflags>

    <compound name="PhysXClothState" since="V20_2_0_8">
        <field name="Pose" type="Matrix34" />
        <field name="Num Vertex Positions" type="ushort" />
        <field name="Vertex Positions" type="Vector3" arr1="Num Vertex Positions" />
        <field name="Num Tear Indices" type="ushort" />
        <field name="Tear Indices" type="ushort" arr1="Num Tear Indices" />
        <field name="Tear Split Planes" type="Vector3" arr1="Num Tear Indices" />
    </compound>

    <compound name="PhysXClothAttachmentPosition" since="V20_2_0_8">
        <field name="Vertex ID" type="uint" />
        <field name="Position" type="Vector3" />
        <field name="Flags" type="uint" />
    </compound>

    <compound name="PhysXClothAttachment" since="V20_2_0_8">
        <field name="Shape" type="Ref" template="NiPhysXShapeDesc" />
        <field name="Num Vertices" type="uint" />
        <field name="Flags" type="uint" cond="Num Vertices == 0" />
        <field name="Positions" type="PhysXClothAttachmentPosition" cond="Num Vertices #GT# 0" arr1="Num Vertices" />
    </compound>

    <niobject name="NiPhysXClothDesc" inherit="NiObject" module="NiPhysX" since="V20_2_0_8">
        For serializing NxClothDesc objects.
        <field name="Name" type="NiFixedString" />
        <field name="Mesh" type="Ref" template="NiPhysXMeshDesc" />
        <field name="Pose" type="Matrix34" ver2="20.3.0.9" />
        <field name="Thickness" type="float" default="0.01" />
        <field name="Self Collision Thickness" type="float" ver1="30.1.0.3" />
        <field name="Density" type="float" default="1.0" />
        <field name="Bending Stiffness" type="float" default="1.0" />
        <field name="Stretching Stiffness" type="float" default="1.0" />
        <field name="Damping Coefficient" type="float" default="0.5" />
        <field name="Hard Stretch Limitation Factor" type="float" ver1="30.1.0.3" />
        <field name="Friction" type="float" default="0.5" />
        <field name="Pressure" type="float" default="1.0" />
        <field name="Tear Factor" type="float" default="1.5" />
        <field name="Collision Response Coeff" type="float" default="0.2" />
        <field name="Attach Response Coeff" type="float" default="0.2" />
        <field name="Attach Tear Factor" type="float" default="1.5" />
        <field name="To Fluid Response Coeff" type="float" default="1.0" ver1="20.4.0.0" />
        <field name="From Fluid Response Coeff" type="float" default="1.0" ver1="20.4.0.0" />
        <field name="Min Adhere Velocity" type="float" default="1.0" ver1="20.4.0.0" />
        <field name="Relative Grid Spacing" type="float" default="0.25" ver1="20.4.0.0" />
        <field name="Solver Iterations" type="uint" default="5" />
        <field name="Hier Solver Iterations" type="uint" ver1="30.1.0.3" />
        <field name="External Acceleration" type="Vector3" />
        <field name="Wind Acceleration" type="Vector3" ver1="20.4.0.0" />
        <field name="Wake Up Counter" type="float" default="0.4" />
        <field name="Sleep Linear Velocity" type="float" default="-1.0" />
        <field name="Collision Group" type="ushort" />
        <field name="Collision Bits" type="uint" arr1="4" />
        <field name="Force Field Material" type="ushort" ver1="20.4.0.0" />
        <field name="Flags" type="NxClothFlag" default="0x20" />
        <field name="Vertex Map Size" type="ushort" ver1="30.2.0.3" />
        <field name="Vertex Map" type="ushort" arr1="Vertex Map Size" ver1="30.2.0.3" />
        <field name="Num States" type="uint" ver1="20.4.0.0" />
        <field name="States" type="PhysXClothState" arr1="Num States" ver1="20.4.0.0" />
        <field name="Num Attachments" type="uint" />
        <field name="Attachments" type="PhysXClothAttachment" arr1="Num Attachments" />
        <field name="Parent Actor" type="Ref" template="NiPhysXActorDesc" />
        <field name="Dest" type="Ref" template="NiPhysXDest" ver2="20.4.0.9" />
        <field name="Target Mesh" type="Ref" template="NiMesh" ver2="20.5.0.0" />
    </niobject>

    <niobject name="NiPhysXDest" inherit="NiObject" abstract="1">
        A destination is a link between a PhysX actor and a Gamebryo object being driven by the physics.
        <field name="Active" type="bool" />
        <field name="Interpolate" type="bool" />
    </niobject>

    <niobject name="NiPhysXRigidBodyDest" inherit="NiPhysXDest" abstract="1">
        Base for destinations that set a rigid body state.
    </niobject>

    <niobject name="NiPhysXTransformDest" inherit="NiPhysXRigidBodyDest">
        Connects PhysX rigid body actors to a scene node.
        <field name="Target" type="Ptr" template="NiAVObject" />
    </niobject>

    <niobject name="NiPhysXSrc" inherit="NiObject" abstract="1">
        A source is a link between a Gamebryo object and a PhysX actor.
        <field name="Active" type="bool" />
        <field name="Interpolate" type="bool" />
    </niobject>

    <niobject name="NiPhysXRigidBodySrc" inherit="NiPhysXSrc" abstract="1">
        Sets state of a rigid body PhysX actor.
        <field name="Source" type="Ptr" template="NiAVObject" />
    </niobject>

    <niobject name="NiPhysXKinematicSrc" inherit="NiPhysXRigidBodySrc">
        Sets state of kinematic PhysX actor.
    </niobject>

    <niobject name="NiPhysXDynamicSrc" inherit="NiPhysXRigidBodySrc">
        Sends Gamebryo scene state to a PhysX dynamic actor.
    </niobject>

    <niobject name="NiLines" inherit="NiTriBasedGeom">
        Wireframe geometry.
    </niobject>

    <niobject name="NiLinesData" inherit="NiGeometryData">
        Wireframe geometry data.
        <field name="Lines" type="bool" arr1="Num Vertices">Is vertex connected to other (next?) vertex?</field>
    </niobject>

    <compound name="Polygon">
        Two dimensional screen elements.
        <field name="Num Vertices" type="ushort" />
        <field name="Vertex Offset" type="ushort">Offset in vertex array.</field>
        <field name="Num Triangles" type="ushort" />
        <field name="Triangle Offset" type="ushort">Offset in indices array.</field>
    </compound>

    <niobject name="NiScreenElementsData" inherit="NiTriShapeData">
        DEPRECATED (20.5), functionality included in NiMeshScreenElements.
        Two dimensional screen elements.
        <field name="Max Polygons" type="ushort" />
        <field name="Polygons" type="Polygon" arr1="Max Polygons" />
        <field name="Polygon Indices" type="ushort" arr1="Max Polygons" />
        <field name="Polygon Grow By" type="ushort" default="1" />
        <field name="Num Polygons" type="ushort" />
        <field name="Max Vertices" type="ushort" />
        <field name="Vertices Grow By" type="ushort" default="1" />
        <field name="Max Indices" type="ushort" />
        <field name="Indices Grow By" type="ushort" default="1" />
    </niobject>

    <niobject name="NiScreenElements" inherit="NiTriShape">
        DEPRECATED (20.5), replaced by NiMeshScreenElements.
        Two dimensional screen elements.
    </niobject>

    <niobject name="NiRoomGroup" inherit="NiNode">
        NiRoomGroup represents a set of connected rooms i.e. a game level.
        <field name="Shell" type="Ptr" template="NiNode">Object that represents the room group as seen from the outside.</field>
        <field name="Num Rooms" type="int" />
        <field name="Rooms" type="Ptr" template="NiRoom" arr1="Num Rooms" />
    </niobject>

    <niobject name="NiWall" inherit="NiNode" until="V3_3_0_13">
        <field name="Wall Plane" type="NiPlane" />
    </niobject>

    <niobject name="NiRoom" inherit="NiNode">
        NiRoom objects represent cells in a cell-portal culling system.
        <field name="Num Walls" type="int" />
        <field name="Wall Planes" type="NiPlane" arr1="Num Walls" />
        <field name="Num In Portals" type="uint" />
        <field name="In Portals" type="Ptr" template="NiPortal" arr1="Num In Portals">The portals which see into the room.</field>
        <field name="Num Out Portals" type="uint" />
        <field name="Out Portals" type="Ptr" template="NiPortal" arr1="Num Out Portals">The portals which see out of the room.</field>
        <field name="Num Fixtures" type="uint" />
        <field name="Fixtures" type="Ptr" template="NiAVObject" arr1="Num Fixtures">All geometry associated with the room.</field>
    </niobject>

    <niobject name="NiPortal" inherit="NiAVObject">
        NiPortal objects are grouping nodes that support aggressive visibility culling.
        They represent flat polygonal regions through which a part of a scene graph can be viewed.
        <field name="Portal Flags" type="ushort" />
        <field name="Plane Count" type="ushort">Unused in 20.x, possibly also 10.x.</field>
        <field name="Num Vertices" type="ushort" />
        <field name="Vertices" type="Vector3" arr1="Num Vertices" />
        <field name="Adjoiner" type="Ptr" template="NiNode">Root of the scenegraph which is to be seen through this portal.</field>
    </niobject>

    <!-- Red Ocean Custom Objects
    <niobject name="Object" inherit="NiNode">
        Red Ocean Object class
        <field name="Unknown Short 1" type="short">Unknown</field>
        <field name="Unknown Link 1" type="Ref" template="NiObject">Unknown</field>
        <field name="Unknown Short 2" type="short">Unknown</field>
        <field name="Unknown Short 3" type="short">Unknown</field>
        <field name="Unknown Float 1" type="float">Unknown</field>
    </niobject>
    
    <niobject name="BoundingBoxExtraData" inherit="NiExtraData">
        Red Ocean Bounding Box
        <field name="Flags" type="Flags">Unknown</field>
        <field name="Center?" type="Vector3">Center of box?</field>
        <field name="Extent?" type="Vector3">Extents of box?</field>
    </niobject>
    
    <niobject name="Door" inherit="Object">
        Red Ocean Object class
        <field name="Unknown Short 1" type="short">Unknown</field>
        <field name="Unknown Float 1" type="float">Unknowns</field>
        <field name="Unknown Float 2" type="float">Unknowns</field>
        <field name="Unknown Short 2" type="short">Unknown</field>
        <field name="Unknown Int 1" type="int">Unknown</field>
        <field name="Unknown Short 3" type="short">Unknown</field>
        <field name="Unknown Bool 1" type="bool">Unknown</field>
        <field name="Unknown Short 4" type="short">Unknown</field>
        <field name="Unknown Float 3" type="float">Unknowns</field>
    </niobject>
    -->
    <niobject name="BSFadeNode" abstract="0" inherit="NiNode">
        Bethesda-specific fade node.
    </niobject>

    <enum name="BSShaderType" storage="uint">
        The type of animation interpolation (blending) that will be used on the associated key frames.
        <option value="0" name="SHADER_TALL_GRASS">Tall Grass Shader</option>
        <option value="1" name="SHADER_DEFAULT">Standard Lighting Shader</option>
        <option value="10" name="SHADER_SKY">Sky Shader</option>
		<option value="14" name="SHADER_SKIN">Skin Shader</option>
        <option value="17" name="SHADER_WATER">Water Shader</option>
        <option value="29" name="SHADER_LIGHTING30">Lighting 3.0 Shader</option>
        <option value="32" name="SHADER_TILE">Tiled Shader</option>
        <option value="33" name="SHADER_NOLIGHTING">No Lighting Shader</option>
    </enum>
    
    <bitflags name="BSShaderFlags" storage="uint" prefix="F3SF1">
        Shader Property Flags
        <option value="0" name="Specular">Enables Specularity</option>
        <option value="1" name="Skinned">Required For Skinned Meshes</option>
        <option value="2" name="LowDetail">Lowddetail (seems to use standard diff/norm/spec shader)</option>
        <option value="3" name="Vertex_Alpha">Vertex Alpha</option>
        <option value="4" name="Unknown_1">Unknown</option>
        <option value="5" name="Single_Pass">Single Pass</option>
        <option value="6" name="Empty">Unknown</option>
        <option value="7" name="Environment_Mapping">Environment mapping (uses Envmap Scale)</option>
        <option value="8" name="Alpha_Texture">Alpha Texture Requires NiAlphaProperty to Enable</option>
        <option value="9" name="Unknown_2">Unknown</option>
        <option value="10" name="FaceGen">FaceGen</option>
        <option value="11" name="Parallax_Shader_Index_15">Parallax</option>
        <option value="12" name="Unknown_3">Unknown/Crash</option>
        <option value="13" name="Non_Projective_Shadows">Non-Projective Shadows</option>
        <option value="14" name="Unknown_4">Unknown/Crash</option>
        <option value="15" name="Refraction">Refraction (switches on refraction power)</option>
        <option value="16" name="Fire_Refraction">Fire Refraction (switches on refraction power/period)</option>
        <option value="17" name="Eye_Environment_Mapping">Eye Environment Mapping (does not use envmap light fade or envmap scale)</option>
        <option value="18" name="Hair">Hair</option>
        <option value="19" name="Dynamic_Alpha">Dynamic Alpha</option>
        <option value="20" name="Localmap_Hide_Secret">Localmap Hide Secret</option>
        <option value="21" name="Window_Environment_Mapping">Window Environment Mapping</option>
        <option value="22" name="Tree_Billboard">Tree Billboard</option>
        <option value="23" name="Shadow_Frustum">Shadow Frustum</option>
        <option value="24" name="Multiple_Textures">Multiple Textures (base diff/norm become null)</option>
        <option value="25" name="Remappable_Textures">usually seen w/texture animation</option>
        <option value="26" name="Decal_Single_Pass">Decal</option>
        <option value="27" name="Dynamic_Decal_Single_Pass">Dynamic Decal</option>
        <option value="28" name="Parallax_Occulsion">Parallax Occlusion</option>
        <option value="29" name="External_Emittance">External Emittance</option>
        <option value="30" name="Shadow_Map">Shadow Map</option>
        <option value="31" name="ZBuffer_Test">ZBuffer Test (1=on)</option>
    </bitflags>

    <bitflags name="BSShaderFlags2" storage="uint" prefix="F3SF2">
        Shader Property Flags 2
        <option value="0" name="ZBuffer_Write">ZBuffer Write</option>
        <option value="1" name="LOD_Landscape">LOD Landscape</option>
        <option value="2" name="LOD_Building">LOD Building</option>
        <option value="3" name="No_Fade">No Fade</option>
        <option value="4" name="Refraction_Tint">Refraction Tint</option>
        <option value="5" name="Vertex_Colors">Has Vertex Colors</option>
        <option value="6" name="Unknown1">Unknown</option>
        <option value="7" name="1st_Light_is_Point_Light">1st Light is Point Light</option>
        <option value="8" name="2nd_Light">2nd Light</option>
        <option value="9" name="3rd_Light">3rd Light</option>
        <option value="10" name="Vertex_Lighting">Vertex Lighting</option>
        <option value="11" name="Uniform_Scale">Uniform Scale</option>
        <option value="12" name="Fit_Slope">Fit Slope</option>
        <option value="13" name="Billboard_and_Envmap_Light_Fade">Billboard and Envmap Light Fade</option>
        <option value="14" name="No_LOD_Land_Blend">No LOD Land Blend</option>
        <option value="15" name="Envmap_Light_Fade">Envmap Light Fade</option>
        <option value="16" name="Wireframe">Wireframe</option>
        <option value="17" name="VATS_Selection">VATS Selection</option>
        <option value="18" name="Show_in_Local_Map">Show in Local Map</option>
        <option value="19" name="Premult_Alpha">Premult Alpha</option>
        <option value="20" name="Skip_Normal_Maps">Skip Normal Maps</option>
        <option value="21" name="Alpha_Decal">Alpha Decal</option>
        <option value="22" name="No_Transparecny_Multisampling">No Transparency MultiSampling</option>
        <option value="23" name="Unknown2">Unknown</option>
        <option value="24" name="Unknown3">Unknown</option>
        <option value="25" name="Unknown4">Unknown</option>
        <option value="26" name="Unknown5">Unknown</option>
        <option value="27" name="Unknown6">Unknown</option>
        <option value="28" name="Unknown7">Unknown</option>
        <option value="29" name="Unknown8">Unknown</option>
        <option value="30" name="Unknown9">Unknown</option>
        <option value="31" name="Unknown10">Unknown</option>
    </bitflags>
    
    <niobject name="BSShaderProperty" abstract="0" inherit="NiShadeProperty">
        Bethesda-specific property.
        <field name="Shader Type" type="BSShaderType" default="SHADER_DEFAULT" vercond="(User Version 2 &lt;= 34)" />
        <field name="Shader Flags" type="BSShaderFlags" default="0x82000000" vercond="(User Version 2 &lt;= 34)" />
        <field name="Shader Flags 2" type="BSShaderFlags2" default="1" vercond="(User Version 2 &lt;= 34)" />
        <field name="Environment Map Scale" type="float" default="1.0" vercond="(User Version 2 &lt;= 34)">Scales the intensity of the environment/cube map.</field>
    </niobject>

    <niobject name="BSShaderLightingProperty" abstract="1" inherit="BSShaderProperty">
        Bethesda-specific property.
        <field name="Texture Clamp Mode" type="TexClampMode" default="3" vercond="(User Version 2 &lt;= 34)">How to handle texture borders.</field>
    </niobject>

    <niobject name="BSShaderNoLightingProperty" abstract="0" inherit="BSShaderLightingProperty">
        Bethesda-specific property.
        <field name="File Name" type="SizedString">The texture glow map.</field>
        <field name="Falloff Start Angle" type="float" default="1.0" vercond="(User Version 2 &gt; 26)">At this cosine of angle falloff will be equal to Falloff Start Opacity</field>
        <field name="Falloff Stop Angle" type="float" default="0.0" vercond="(User Version 2 &gt; 26)">At this cosine of angle falloff will be equal to Falloff Stop Opacity</field>
        <field name="Falloff Start Opacity" type="float" default="1.0" vercond="(User Version 2 &gt; 26)">Alpha falloff multiplier at start angle</field>
        <field name="Falloff Stop Opacity" type="float" default="0.0" vercond="(User Version 2 &gt; 26)">Alpha falloff multiplier at end angle</field>
    </niobject>

    <niobject name="BSShaderPPLightingProperty" abstract="0" inherit="BSShaderLightingProperty">
        Bethesda-specific property.
        <field name="Texture Set" type="Ref" template="BSShaderTextureSet">Texture Set</field>
        <field name="Refraction Strength" type="float" default="0.0" vercond="(User Version 2 &gt; 14)">The amount of distortion. **Not based on physically accurate refractive index** (0=none) (0-1)</field>
        <field name="Refraction Fire Period" type="int" default="0" vercond="(User Version 2 &gt; 14)">Rate of texture movement for refraction shader.</field>
        <field name="Parallax Max Passes" type="float" default="4.0" vercond="(User Version 2 &gt; 24)">The number of passes the parallax shader can apply.</field>
        <field name="Parallax Scale" type="float" default="1.0" vercond="(User Version 2 &gt; 24)">The strength of the parallax.</field>
        <!-- TODO: Find where this could have even come from as > 34 doesn't exist for this block. -->
        <field name="Emissive Color" type="Color4" vercond="(User Version 2 &gt; 34)">Glow color and alpha</field>
    </niobject>

    <!-- Skyrim specific Node -->

    <niobject name="BSEffectShaderPropertyFloatController" abstract="0" inherit="NiFloatInterpController">
        This controller is used to animate float variables in BSEffectShaderProperty.
        <field name="Type of Controlled Variable" type="EffectShaderControlledVariable">Which float variable in BSEffectShaderProperty to animate:</field>
    </niobject>
	
	<niobject name="BSEffectShaderPropertyColorController" inherit="NiPoint3InterpController">
		This controller is used to animate colors in BSEffectShaderProperty.
		<field name="Type of Controlled Color" type="EffectShaderControlledColor">Which color in BSEffectShaderProperty to animate:</field>
	</niobject>
	
	<niobject name="BSLightingShaderPropertyFloatController" abstract="0" inherit="NiFloatInterpController">
		This controller is used to animate float variables in BSLightingShaderProperty.
		<field name="Type of Controlled Variable" type="LightingShaderControlledVariable">Which float variable in BSLightingShaderProperty to animate:</field>
	</niobject>
	
	<niobject name="BSLightingShaderPropertyColorController" abstract="0" inherit="NiPoint3InterpController">
		This controller is used to animate colors in BSLightingShaderProperty.
		<field name="Type of Controlled Color" type="LightingShaderControlledColor">Which color in BSLightingShaderProperty to animate:</field>
	</niobject>	
	
	<niobject name="BSNiAlphaPropertyTestRefController" inherit="NiFloatInterpController" />
	
	<niobject name="BSProceduralLightningController" abstract="0" inherit="NiTimeController">
    Skyrim, Paired with dummy TriShapes, this controller generates lightning shapes for special effects.
    First interpolator controls Generation.
        <field name="Interpolator 1: Generation" type="Ref" template="NiInterpolator">References generation interpolator.</field>
		<field name="Interpolator 2: Mutation" type="Ref" template="NiInterpolator">References interpolator for Mutation of strips</field>
        <field name="Interpolator 3: Subdivision" type="Ref" template="NiInterpolator">References subdivision interpolator.</field>
        <field name="Interpolator 4: Num Branches" type="Ref" template="NiInterpolator">References branches interpolator.</field>
        <field name="Interpolator 5: Num Branches Var" type="Ref" template="NiInterpolator">References branches variation interpolator.</field>
        <field name="Interpolator 6: Length" type="Ref" template="NiInterpolator">References length interpolator.</field>
        <field name="Interpolator 7: Length Var" type="Ref" template="NiInterpolator">References length variation interpolator.</field>
        <field name="Interpolator 8: Width" type="Ref" template="NiInterpolator">References width interpolator.</field>
        <field name="Interpolator 9: Arc Offset" type="Ref" template="NiInterpolator">References interpolator for amplitude control. 0=straight, 50=wide</field>
        <field name="Subdivisions" type="ushort" />
        <field name="Num Branches" type="ushort" />
        <field name="Num Branches Variation" type="ushort" />
        <field name="Length" type="float">How far lightning will stretch to.</field>
        <field name="Length Variation" type="float">How far lightning variation will stretch to.</field>
        <field name="Width" type="float">How wide the bolt will be.</field>
        <field name="Child Width Mult" type="float">Influences forking behavior with a multiplier.</field>
        <field name="Arc Offset" type="float" />
        <field name="Fade Main Bolt" type="bool" />
        <field name="Fade Child Bolts" type="bool" />
        <field name="Animate Arc Offset" type="bool" />
        <field name="Shader Property" type="Ref" template="BSShaderProperty">Reference to a shader property.</field>
	</niobject>

   <niobject name="BSShaderTextureSet" abstract="0" inherit="NiObject">
        Bethesda-specific Texture Set.
        <field name="Num Textures" type="int" default="6" />
        <field name="Textures" type="SizedString" arr1="Num Textures">Textures.
            0: Diffuse
            1: Normal/Gloss
            2: Glow(SLSF2_Glow_Map)/Skin/Hair/Rim light(SLSF2_Rim_Lighting)
            3: Height/Parallax
            4: Environment
            5: Environment Mask
            6: Subsurface for Multilayer Parallax
            7: Back Lighting Map (SLSF2_Back_Lighting)
        </field>
    </niobject>

    <niobject name="WaterShaderProperty" abstract="0" inherit="BSShaderProperty">
        Bethesda-specific property. Found in Fallout3
    </niobject>

    <enum name="SkyObjectType" storage="uint">
        Sets what sky function this object fulfills in BSSkyShaderProperty or SkyShaderProperty.
        <option value="0" name="BSSM_SKY_TEXTURE">BSSM_Sky_Texture</option>
        <option value="1" name="BSSM_SKY_SUNGLARE">BSSM_Sky_Sunglare</option>
        <option value="2" name="BSSM_SKY">BSSM_Sky</option>
        <option value="3" name="BSSM_SKY_CLOUDS">BSSM_Sky_Clouds</option>
        <option value="5" name="BSSM_SKY_STARS">BSSM_Sky_Stars</option>
        <option value="7" name="BSSM_SKY_MOON_STARS_MASK">BSSM_Sky_Moon_Stars_Mask</option>
    </enum>
    <niobject name="SkyShaderProperty" abstract="0" inherit="BSShaderLightingProperty">
        Bethesda-specific property. Found in Fallout3
        <field name="File Name" type="SizedString">The texture.</field>
        <field name="Sky Object Type" type="SkyObjectType">Sky Object Type</field>
    </niobject>

    <niobject name="TileShaderProperty" abstract="0" inherit="BSShaderLightingProperty">
        Bethesda-specific property.
        <field name="File Name" type="SizedString">Texture file name</field>
    </niobject>

    <niobject name="DistantLODShaderProperty" abstract="0" inherit="BSShaderProperty">
        Bethesda-specific property.
    </niobject>

    <niobject name="BSDistantTreeShaderProperty" abstract="0" inherit="BSShaderProperty">
        Bethesda-specific property.
    </niobject>

    <niobject name="TallGrassShaderProperty" abstract="0" inherit="BSShaderProperty">
        Bethesda-specific property.
        <field name="File Name" type="SizedString">Texture file name</field>
    </niobject>

    <niobject name="VolumetricFogShaderProperty" abstract="0" inherit="BSShaderProperty">
        Bethesda-specific property.
    </niobject>

    <niobject name="HairShaderProperty" abstract="0" inherit="BSShaderProperty">
        Bethesda-specific property.
    </niobject>

    <niobject name="Lighting30ShaderProperty" abstract="0" inherit="BSShaderPPLightingProperty">
        Bethesda-specific property.
    </niobject>

    <bitflags name="SkyrimShaderPropertyFlags1" storage="uint" prefix="SLSF1">
        Skyrim Shader Property Flags 1
        <option value="0" name="Specular">Enables Specularity</option>
        <option value="1" name="Skinned">Required For Skinned Meshes.</option>
        <option value="2" name="Temp_Refraction"></option>
        <option value="3" name="Vertex_Alpha">Enables using alpha component of vertex colors.</option>
        <option value="4" name="Greyscale_To_PaletteColor">in EffectShaderProperty</option>
        <option value="5" name="Greyscale_To_PaletteAlpha">in EffectShaderProperty</option>
        <option value="6" name="Use_Falloff">Use Falloff value in EffectShaderProperty</option>
        <option value="7" name="Environment_Mapping">Environment mapping (uses Envmap Scale).</option>
        <option value="8" name="Recieve_Shadows">Object can recieve shadows.</option>
        <option value="9" name="Cast_Shadows">Can cast shadows</option>
        <option value="10" name="Facegen_Detail_Map">Use a face detail map in the 4th texture slot.</option>
        <option value="11" name="Parallax">Unused?</option>
        <option value="12" name="Model_Space_Normals">Use Model space normals and an external Specular Map.</option>
        <option value="13" name="Non_Projective_Shadows"></option>
        <option value="14" name="Landscape"></option>
        <option value="15" name="Refraction">Use normal map for refraction effect.</option>
        <option value="16" name="Fire_Refraction"></option>
        <option value="17" name="Eye_Environment_Mapping">Eye Environment Mapping (Must use the Eye shader and the model must be skinned)</option>
        <option value="18" name="Hair_Soft_Lighting">Keeps from going too bright under lights (hair shader only)</option>
        <option value="19" name="Screendoor_Alpha_Fade"></option>
        <option value="20" name="Localmap_Hide_Secret">Object and anything it is positioned above will not render on local map view.</option>
        <option value="21" name="FaceGen_RGB_Tint">Use tintmask for Face.</option>
        <option value="22" name="Own_Emit">Provides its own emittance color. (will not absorb light/ambient color?)</option>
        <option value="23" name="Projected_UV">Used for decalling?</option>
        <option value="24" name="Multiple_Textures"></option>
        <option value="25" name="Remappable_Textures"></option>
        <option value="26" name="Decal"></option>
        <option value="27" name="Dynamic_Decal"></option>
        <option value="28" name="Parallax_Occlusion"></option>
        <option value="29" name="External_Emittance"></option>
        <option value="30" name="Soft_Effect"></option>
        <option value="31" name="ZBuffer_Test">ZBuffer Test (1=on)</option>
    </bitflags>
    
    <bitflags name="SkyrimShaderPropertyFlags2" storage="uint" prefix="SLSF2">
        Skyrim Shader Property Flags 2
        <option value="0" name="ZBuffer_Write">Enables writing to the Z-Buffer</option>
        <option value="1" name="LOD_Landscape"></option>
        <option value="2" name="LOD_Objects"></option>
        <option value="3" name="No_Fade"></option>
        <option value="4" name="Double_Sided">Double-sided rendering.</option>
        <option value="5" name="Vertex_Colors">Has Vertex Colors.</option>
        <option value="6" name="Glow_Map">Use Glow Map in the third texture slot.</option>
        <option value="7" name="Assume_Shadowmask"></option>
        <option value="8" name="Packed_Tangent"></option>
        <option value="9" name="Multi_Index_Snow"></option>
        <option value="10" name="Vertex_Lighting"></option>
        <option value="11" name="Uniform_Scale"></option>
        <option value="12" name="Fit_Slope"></option>
        <option value="13" name="Billboard"></option>
        <option value="14" name="No_LOD_Land_Blend"></option>
        <option value="15" name="EnvMap_Light_Fade"></option>
        <option value="16" name="Wireframe">Wireframe (Seems to only work on particles)</option>
        <option value="17" name="Weapon_Blood">Used for blood decals on weapons.</option>
        <option value="18" name="Hide_On_Local_Map">Similar to hide secret, but only for self?</option>
        <option value="19" name="Premult_Alpha">Has Premultiplied Alpha</option>
        <option value="20" name="Cloud_LOD"></option>
        <option value="21" name="Anisotropic_Lighting">Hair only?</option>
        <option value="22" name="No_Transparency_Multisampling"></option>
        <option value="23" name="Unused01">Unused?</option>
        <option value="24" name="Multi_Layer_Parallax">Use Multilayer (inner-layer) Map</option>
        <option value="25" name="Soft_Lighting">Use Soft Lighting Map</option>
        <option value="26" name="Rim_Lighting">Use Rim Lighting Map</option>
        <option value="27" name="Back_Lighting">Use Back Lighting Map</option>
        <option value="28" name="Unused02">Unused?</option>
        <option value="29" name="Tree_Anim">Enables Vertex Animation, Flutter Animation</option>
        <option value="30" name="Effect_Lighting"></option>
        <option value="31" name="HD_LOD_Objects"></option>
    </bitflags>

    <bitflags name="Fallout4ShaderPropertyFlags1" storage="uint" prefix="F4SF1">
        Fallout 4 Shader Property Flags 1
        <option value="0" name="Specular" />
        <option value="1" name="Skinned" />
        <option value="2" name="Temp_Refraction" />
        <option value="3" name="Vertex_Alpha" />
        <option value="4" name="GreyscaleToPalette_Color" />
        <option value="5" name="GreyscaleToPalette_Alpha" />
        <option value="6" name="Use_Falloff" />
        <option value="7" name="Environment_Mapping" />
        <option value="8" name="RGB_Falloff" />
        <option value="9" name="Cast_Shadows" />
        <option value="10" name="Face" />
        <option value="11" name="UI_Mask_Rects" />
        <option value="12" name="Model_Space_Normals" />
        <option value="13" name="Non_Projective_Shadows" />
        <option value="14" name="Landscape" />
        <option value="15" name="Refraction" />
        <option value="16" name="Fire_Refraction" />
        <option value="17" name="Eye_Environment_Mapping" />
        <option value="18" name="Hair" />
        <option value="19" name="Screendoor_Alpha_Fade" />
        <option value="20" name="Localmap_Hide_Secret" />
        <option value="21" name="Skin_Tint" />
        <option value="22" name="Own_Emit" />
        <option value="23" name="Projected_UV" />
        <option value="24" name="Multiple_Textures" />
        <option value="25" name="Tessellate" />
        <option value="26" name="Decal" />
        <option value="27" name="Dynamic_Decal" />
        <option value="28" name="Character_Lighting" />
        <option value="29" name="External_Emittance" />
        <option value="30" name="Soft_Effect" />
        <option value="31" name="ZBuffer_Test" />
    </bitflags>
    
    <bitflags name="Fallout4ShaderPropertyFlags2" storage="uint" prefix="F4SF2">
        Fallout 4 Shader Property Flags 2
        <option value="0" name="ZBuffer_Write" />
        <option value="1" name="LOD_Landscape" />
        <option value="2" name="LOD_Objects" />
        <option value="3" name="No_Fade" />
        <option value="4" name="Double_Sided" />
        <option value="5" name="Vertex_Colors" />
        <option value="6" name="Glow_Map" />
        <option value="7" name="Transform_Changed" />
        <option value="8" name="Dismemberment_Meatcuff" />
        <option value="9" name="Tint" />
        <option value="10" name="Grass_Vertex_Lighting" />
        <option value="11" name="Grass_Uniform_Scale" />
        <option value="12" name="Grass_Fit_Slope" />
        <option value="13" name="Grass_Billboard" />
        <option value="14" name="No_LOD_Land_Blend" />
        <option value="15" name="Dismemberment" />
        <option value="16" name="Wireframe" />
        <option value="17" name="Weapon_Blood" />
        <option value="18" name="Hide_On_Local_Map" />
        <option value="19" name="Premult_Alpha" />
        <option value="20" name="VATS_Target" />
        <option value="21" name="Anisotropic_Lighting" />
        <option value="22" name="Skew_Specular_Alpha" />
        <option value="23" name="Menu_Screen" />
        <option value="24" name="Multi_Layer_Parallax" />
        <option value="25" name="Alpha_Test" />
        <option value="26" name="Gradient_Remap" />
        <option value="27" name="VATS_Target_Draw_All" />
        <option value="28" name="Pipboy_Screen" />
        <option value="29" name="Tree_Anim" />
        <option value="30" name="Effect_Lighting" />
        <option value="31" name="Refraction_Writes_Depth" />
    </bitflags>

    <niobject name="BSLightingShaderProperty"  abstract="0" inherit="BSShaderProperty">
        Bethesda shader property for Skyrim and later.
        <field name="Shader Flags 1" suffix="SK" type="SkyrimShaderPropertyFlags1" vercond="(User Version 2 != 130)" default="2185233153">Skyrim Shader Flags for setting render/shader options.</field>
        <field name="Shader Flags 2" suffix="SK" type="SkyrimShaderPropertyFlags2" vercond="(User Version 2 != 130)" default="32801">Skyrim Shader Flags for setting render/shader options.</field>
        <field name="Shader Flags 1" suffix="FO4" type="Fallout4ShaderPropertyFlags1" vercond="(User Version 2 == 130)" default="2151678465">Fallout 4 Shader Flags. Mostly overridden if "Name" is a path to a BGSM/BGEM file.</field>
        <field name="Shader Flags 2" suffix="FO4" type="Fallout4ShaderPropertyFlags2" vercond="(User Version 2 == 130)" default="1">Fallout 4 Shader Flags. Mostly overridden if "Name" is a path to a BGSM/BGEM file.</field>
        <field name="UV Offset" type="TexCoord">Offset UVs</field>
        <field name="UV Scale" type="TexCoord" default="1.0, 1.0">Offset UV Scale to repeat tiling textures, see above.</field>
        <field name="Texture Set" type="Ref" template="BSShaderTextureSet">Texture Set, can have override in an esm/esp</field>
        <field name="Emissive Color" type="Color3" default="0.0, 0.0, 0.0">Glow color and alpha</field>
        <field name="Emissive Multiple" type="float">Multiplied emissive colors</field>
        <field name="Wet Material" type="string" vercond="(User Version 2 == 130)" />
        <field name="Texture Clamp Mode" type="TexClampMode" default="3">How to handle texture borders.</field>
        <field name="Alpha" type="float" default="1.0">The material opacity (1=non-transparent).</field>
        <field name="Refraction Strength" type="float">The amount of distortion. **Not based on physically accurate refractive index** (0=none) (0-1)</field>
        <field name="Glossiness" type="float" default="80" vercond="User Version 2 &lt; 130">The material specular power, or glossiness (0-999).</field>
        <field name="Smoothness" type="float" default="1.0" vercond="(User Version 2 == 130)">The base roughness (0.0-1.0), multiplied by the smoothness map.</field>
        <field name="Specular Color" type="Color3">Adds a colored highlight.</field>
        <field name="Specular Strength" type="float" default="1.0">Brightness of specular highlight. (0=not visible) (0-999)</field>
        <field name="Lighting Effect 1" type="float" default="0.3" vercond="User Version 2 &lt; 130">Controls strength for envmap/backlight/rim/softlight lighting effect?</field>
        <field name="Lighting Effect 2" type="float" default="2.0" vercond="User Version 2 &lt; 130">Controls strength for envmap/backlight/rim/softlight lighting effect?</field>
        <field name="Subsurface Rolloff" type="float" default="0.3" vercond="(User Version 2 == 130)" />
        <field name="Rimlight Power" type="float" default="3.402823466e+38" vercond="(User Version 2 == 130)" />
        <field name="Backlight Power" type="float" cond="Rimlight Power == 0x7F7FFFFF" vercond="(User Version 2 == 130)" />
        <field name="Grayscale to Palette Scale" type="float" vercond="(User Version 2 == 130)" />
        <field name="Fresnel Power" type="float" default="5.0" vercond="(User Version 2 == 130)" />
        <field name="Wetness Spec Scale" type="float" default="-1.0" vercond="(User Version 2 == 130)" />
        <field name="Wetness Spec Power" type="float" default="-1.0" vercond="(User Version 2 == 130)" />
        <field name="Wetness Min Var" type="float" default="-1.0" vercond="(User Version 2 == 130)" />
        <field name="Wetness Env Map Scale" type="float" default="-1.0" vercond="(User Version 2 == 130)" />
        <field name="Wetness Fresnel Power" type="float" default="-1.0" vercond="(User Version 2 == 130)" />
        <field name="Wetness Metalness" type="float" default="-1.0" vercond="(User Version 2 == 130)" />
        <field name="Environment Map Scale" type="float" default="1.0" cond="Skyrim Shader Type == 1">Scales the intensity of the environment/cube map. (0-1)</field>
        <field name="Unknown Env Map Short" type="ushort" cond="Skyrim Shader Type == 1" vercond="(User Version 2 == 130)" />
        <field name="Skin Tint Color" type="Color3" cond="Skyrim Shader Type == 5">Tints the base texture. Overridden by game settings.</field>
        <field name="Unknown Skin Tint Int" type="uint" cond="Skyrim Shader Type == 5" vercond="(User Version 2 == 130)" />
        <field name="Hair Tint Color" type="Color3" cond="Skyrim Shader Type == 6">Tints the base texture. Overridden by game settings.</field>
        <field name="Max Passes" type="float" cond="Skyrim Shader Type == 7">Max Passes</field>
        <field name="Scale" type="float" cond="Skyrim Shader Type == 7">Scale</field>
        <field name="Parallax Inner Layer Thickness" type="float" cond="Skyrim Shader Type == 11">How far from the surface the inner layer appears to be.</field>
        <field name="Parallax Refraction Scale" type="float" cond="Skyrim Shader Type == 11">Depth of inner parallax layer effect.</field>
        <field name="Parallax Inner Layer Texture Scale" type="TexCoord" cond="Skyrim Shader Type == 11">Scales the inner parallax layer texture.</field>
        <field name="Parallax Envmap Strength" type="float" cond="Skyrim Shader Type == 11">How strong the environment/cube map is. (0-??)</field>
        <field name="Sparkle Parameters" type="Vector4" cond="Skyrim Shader Type == 14">CK lists "snow material" when used.</field>
        <field name="Eye Cubemap Scale" type="float" cond="Skyrim Shader Type == 16">Eye cubemap scale</field>
        <field name="Left Eye Reflection Center" type="Vector3" cond="Skyrim Shader Type == 16">Offset to set center for left eye cubemap</field>
        <field name="Right Eye Reflection Center" type="Vector3" cond="Skyrim Shader Type == 16">Offset to set center for right eye cubemap</field>
    </niobject>

    <niobject name="BSEffectShaderProperty" abstract="0" inherit="BSShaderProperty">
        Bethesda effect shader property for Skyrim and later.
        <field name="Shader Flags 1" suffix="SK" type="SkyrimShaderPropertyFlags1" default="2147483648" vercond="(User Version 2 != 130)" />
        <field name="Shader Flags 2" suffix="SK" type="SkyrimShaderPropertyFlags2" default="32" vercond="(User Version 2 != 130)" />
        <field name="Shader Flags 1" suffix="FO4" type="Fallout4ShaderPropertyFlags1" default="2147483648" vercond="(User Version 2 == 130)" />
        <field name="Shader Flags 2" suffix="FO4" type="Fallout4ShaderPropertyFlags2" default="32" vercond="(User Version 2 == 130)" />
        <field name="UV Offset" type="TexCoord">Offset UVs</field>
        <field name="UV Scale" type="TexCoord" default="1.0, 1.0">Offset UV Scale to repeat tiling textures</field>
        <field name="Source Texture"  type="SizedString">points to an external texture.</field>
        <field name="Texture Clamp Mode" type="byte">How to handle texture borders.</field>
        <field name="Lighting Influence" type="byte" />
        <field name="Env Map Min LOD" type="byte" />
        <field name="Unknown Byte" type="byte" />
        <field name="Falloff Start Angle" type="float" default="1.0">At this cosine of angle falloff will be equal to Falloff Start Opacity</field>
        <field name="Falloff Stop Angle" type="float" default="1.0">At this cosine of angle falloff will be equal to Falloff Stop Opacity</field>
        <field name="Falloff Start Opacity" type="float">Alpha falloff multiplier at start angle</field>
        <field name="Falloff Stop Opacity" type="float">Alpha falloff multiplier at end angle</field>
        <field name="Emissive Color" type="Color4">Emissive color</field>
        <field name="Emissive Multiple" type="float">Multiplier for Emissive Color (RGB part)</field>
        <field name="Soft Falloff Depth" type="float"></field>
        <field name="Greyscale Texture"  type="SizedString">Points to an external texture, used as palette for SLSF1_Greyscale_To_PaletteColor/SLSF1_Greyscale_To_PaletteAlpha.</field>
        <field name="Env Map Texture" type="SizedString" vercond="(User Version 2 == 130)" />
        <field name="Normal Texture" type="SizedString" vercond="(User Version 2 == 130)" />
        <field name="Env Mask Texture" type="SizedString" vercond="(User Version 2 == 130)" />
        <field name="Environment Map Scale" type="float" vercond="(User Version 2 == 130)" />
    </niobject>
    
    <bitflags name="SkyrimWaterShaderFlags" storage="byte">
        Skyrim water shader property flags
        <option value="0" name="SWSF1_UNKNOWN0">Unknown</option>
        <option value="1" name="SWSF1_Bypass_Refraction_Map">Bypasses refraction map when set to 1</option>
        <option value="2" name="SWSF1_Water_Toggle">Main water Layer on/off</option>
        <option value="3" name="SWSF1_UNKNOWN3">Unknown</option>
        <option value="4" name="SWSF1_UNKNOWN4">Unknown</option>
        <option value="5" name="SWSF1_UNKNOWN5">Unknown</option>
        <option value="6" name="SWSF1_Highlight_Layer_Toggle">Reflection layer 2 on/off. (is this scene reflection?)</option>
        <option value="7" name="SWSF1_Enabled">Water layer on/off</option>
    </bitflags>
    
    <niobject name="BSWaterShaderProperty" inherit="BSShaderProperty">
        Skyrim water shader property, different from "WaterShaderProperty" seen in Fallout.
        <field name="Shader Flags 1" type="SkyrimShaderPropertyFlags1"></field>
        <field name="Shader Flags 2" type="SkyrimShaderPropertyFlags2"></field>
        <field name="UV Offset" type="TexCoord">Offset UVs. Seems to be unused, but it fits with the other Skyrim shader properties.</field>
        <field name="UV Scale" type="TexCoord" default="1.0, 1.0">Offset UV Scale to repeat tiling textures, see above.</field>
        <field name="Water Shader Flags" type="SkyrimWaterShaderFlags">Defines attributes for the water shader (will use SkyrimWaterShaderFlags)</field>
        <field name="Water Direction" type="byte" default="3">A bitflag, only the first/second bit controls water flow positive or negative along UVs.</field>
        <field name="Unknown Short 3" type="ushort">Unknown, flag?</field>  
    </niobject>
    
    <niobject name="BSSkyShaderProperty" inherit="BSShaderProperty">
        Skyrim Sky shader block.
        <field name="Shader Flags 1" type="SkyrimShaderPropertyFlags1"></field>
        <field name="Shader Flags 2" type="SkyrimShaderPropertyFlags2"></field>
        <field name="UV Offset" type="TexCoord">Offset UVs. Seems to be unused, but it fits with the other Skyrim shader properties.</field>
        <field name="UV Scale" type="TexCoord" default="1.0, 1.0">Offset UV Scale to repeat tiling textures, see above.</field>
        <field name="Source Texture" type="SizedString">points to an external texture.</field>
        <field name="Sky Object Type" type="SkyObjectType" />
    </niobject>

    <niobject name="BSDismemberSkinInstance" abstract="0" inherit="NiSkinInstance">
        Bethesda-specific skin instance.
        <field name="Num Partitions" type="int" />
        <field name="Partitions" type="BodyPartList" arr1="Num Partitions" />
    </niobject>

    <niobject name="BSDecalPlacementVectorExtraData" inherit="NiFloatExtraData">
        Bethesda-specific extra data. Lists locations and normals on a mesh that are appropriate for decal placement.
        <field name="Num Vector Blocks" type="short" />
        <field name="Vector Blocks" type="DecalVectorArray" arr1="Num Vector Blocks" />
    </niobject>

    <niobject name="BSPSysSimpleColorModifier" inherit="NiPSysModifier">
        Bethesda-specific particle modifier.
        <field name="Fade In Percent" type="float" />
        <field name="Fade out Percent" type="float" />
        <field name="Color 1 End Percent" type="float" />
        <field name="Color 1 Start Percent" type="float" />
        <field name="Color 2 End Percent" type="float" />
        <field name="Color 2 Start Percent" type="float" />
        <field name="Colors" type="Color4" arr1="3" />
    </niobject>


    <bitflags name="BSValueNodeFlags" storage="byte">
        Flags for BSValueNode.
        <option value="0" name="BillboardWorldZ" />
        <option value="1" name="UsePlayerAdjust" />
    </bitflags>

    <niobject name="BSValueNode" inherit="NiNode">
        Bethesda-specific node. Found on fxFire effects
        <field name="Value" type="uint" />
        <field name="Value Node Flags" type="BSValueNodeFlags" />
    </niobject>

    <niobject name="BSStripParticleSystem" inherit="NiParticleSystem">
        Bethesda-Specific (mesh?) Particle System.
    </niobject>

    <niobject name="BSStripPSysData" inherit="NiPSysData">
        Bethesda-Specific (mesh?) Particle System Data.
        <field name="Max Point Count" type="ushort" />
        <field name="Start Cap Size" type="float" />
        <field name="End Cap Size" type="float" />
        <field name="Do Z Prepass" type="bool" />
    </niobject>

    <niobject name="BSPSysStripUpdateModifier" inherit="NiPSysModifier">
        Bethesda-Specific (mesh?) Particle System Modifier.
        <field name="Update Delta Time" type="float" />
    </niobject>

    <niobject name="BSMaterialEmittanceMultController" inherit="NiFloatInterpController">
        Bethesda-Specific time controller.
    </niobject>

    <niobject name="BSMasterParticleSystem" inherit="NiNode">
        Bethesda-Specific particle system.
        <field name="Max Emitter Objects" type="ushort" />
        <field name="Num Particle Systems" type="int" />
        <field name="Particle Systems" type="Ref" template="NiAVObject" arr1="Num Particle Systems" />
    </niobject>

    <niobject name="BSPSysMultiTargetEmitterCtlr" inherit="NiPSysEmitterCtlr">
        Particle system (multi?) emitter controller.
        <field name="Max Emitters" type="ushort" />
        <field name="Master Particle System" type="Ptr" template="BSMasterParticleSystem" />
    </niobject>

    <niobject name="BSRefractionStrengthController" inherit="NiFloatInterpController">
        Bethesda-Specific time controller.
    </niobject>

    <niobject name="BSOrderedNode" inherit="NiNode">
        Bethesda-Specific node.
        <field name="Alpha Sort Bound" type="Vector4" />
        <field name="Static Bound" type="bool" />
    </niobject>

    <niobject name="BSRangeNode" inherit="NiNode">
        Bethesda-Specific node.
        <field name="Min" type="byte" />
        <field name="Max" type="byte" />
        <field name="Current" type="byte" />
    </niobject>

    <niobject name="BSBlastNode" inherit="BSRangeNode">
        Bethesda-Specific node.
    </niobject>

    <niobject name="BSDamageStage" inherit="BSBlastNode">
        Bethesda-Specific node.
    </niobject>

    <niobject name="BSRefractionFirePeriodController" abstract="0" inherit="NiTimeController">
        Bethesda-specific time controller.
        <field name="Interpolator" type="Ref" template="NiInterpolator" ver1="20.2.0.7" />
    </niobject>

    <niobject name="bhkConvexListShape" abstract="0" inherit="bhkShape">
        A list of shapes. However,
            - The sub shapes must ALL be convex: Sphere, Capsule, Cylinder, Convex Vertices, Convex Transform
            - The radius of all shapes must be identical
            - The number of sub shapes is restricted to 255
            - The number of vertices of each sub shape is restricted to 255

        For this reason you most likely cannot combine Sphere Shapes, Capsule Shapes, and Convex Vertices Shapes,
        as their Radius values differ in function. (Sphere/Capsule radius = physical size, CVS radius = padding/shell)

        Shapes collected in a bhkConvexListShape may not have the correct material noise.
        <field name="Num Sub Shapes" type="uint" />
        <field name="Sub Shapes" type="Ref" template="bhkConvexShape" arr1="Num Sub Shapes">List of shapes.</field>
        <field name="Material" type="HavokMaterial">The material of the shape.</field>
        <field name="Radius" type="float" />
        <field name="Unknown Int 1" type="uint" />
        <field name="Unknown Float 1" type="float" />
        <field name="Child Shape Property" type="hkWorldObjCinfoProperty" />
        <field name="Use Cached AABB" type="bool">If true, an AABB of the children's AABBs is used, which is faster but larger than building an AABB from each child.</field>
        <field name="Closest Point Min Distance" type="float">A distance which is used for getClosestPoint(). If the object being tested is closer, the children are recursed. Otherwise it returns this value.</field>
    </niobject>

    <compound name="BSTreadTransform">
        Bethesda-specific compound.
        <field name="Name" type="string" />
        <field name="Transform 1" type="NiQuatTransform" />
        <field name="Transform 2" type="NiQuatTransform" />
    </compound>

    <niobject name="BSTreadTransfInterpolator" abstract="0" inherit="NiInterpolator">
        Bethesda-specific interpolator.
        <field name="Num Tread Transforms" type="int" />
        <field name="Tread Transforms" type="BSTreadTransform" arr1="Num Tread Transforms" />
        <field name="Data" type="Ref" template="NiFloatData" />
    </niobject>

    <enum name="AnimNoteType" storage="uint">
        Anim note types.
        <option value="0" name="ANT_INVALID">ANT_INVALID</option>
        <option value="1" name="ANT_GRABIK">ANT_GRABIK</option>
        <option value="2" name="ANT_LOOKIK">ANT_LOOKIK</option>
    </enum>

    <niobject name="BSAnimNote" abstract="0" inherit="NiObject">
        Bethesda-specific object.
        <field name="Type" type="AnimNoteType">Type of this note.</field>
        <field name="Time" type="float">Location in time.</field>
        <field name="Arm" type="uint" cond="Type == 1">Unknown.</field>
        <field name="Gain" type="float" cond="Type == 2">Unknown.</field>
        <field name="State" type="uint" cond="Type == 2">Unknown.</field>
    </niobject>

    <niobject name="BSAnimNotes" abstract="0" inherit="NiObject">
        Bethesda-specific object.
        <field name="Num Anim Notes" type="ushort">Number of BSAnimNote objects.</field>
        <field name="Anim Notes" type="Ref" template="BSAnimNote" arr1="Num Anim Notes">BSAnimNote objects.</field>
    </niobject>

    <niobject name="bhkLiquidAction" inherit="bhkSerializable">
        Bethesda-specific Havok serializable.
        <field name="User Data" type="uint" />
        <field name="Unknown Int 2" type="int">Unknown</field>
        <field name="Unknown Int 3" type="int">Unknown</field>
        <field name="Initial Stick Force" type="float" />
        <field name="Stick Strength" type="float" />
        <field name="Neighbor Distance" type="float" />
        <field name="Neighbor Strength" type="float" />
    </niobject>

    <enum name="BSCPCullingType" storage="uint">
        Culling modes for multi bound nodes.
        <option value="0" name="BSCP_CULL_NORMAL">Normal</option>
        <option value="1" name="BSCP_CULL_ALLPASS">All Pass</option>
        <option value="2" name="BSCP_CULL_ALLFAIL">All Fail</option>
        <option value="3" name="BSCP_CULL_IGNOREMULTIBOUNDS">Ignore Multi Bounds</option>
        <option value="4" name="BSCP_CULL_FORCEMULTIBOUNDSNOUPDATE">Force Multi Bounds No Update</option>
    </enum>

    <niobject name="BSMultiBoundNode" inherit="NiNode">
        Bethesda-specific node.
        <field name="Multi Bound" type="Ref" template="BSMultiBound" />
		<field name="Culling Mode" type="BSCPCullingType" vercond="(User Version 2 &gt;= 83)" />
    </niobject>

    <niobject name="BSMultiBound" inherit="NiObject">
        Bethesda-specific object.
        <field name="Data" type="Ref" template="BSMultiBoundData" />
    </niobject>

    <niobject name="BSMultiBoundData" inherit="NiObject">
        Abstract base type for bounding data.
    </niobject>

    <niobject name="BSMultiBoundOBB" inherit="BSMultiBoundData">
        Oriented bounding box.
        <field name="Center" type="Vector3">Center of the box.</field>
        <field name="Size" type="Vector3">Size of the box along each axis.</field>
        <field name="Rotation" type="Matrix33">Rotation of the bounding box.</field>
    </niobject>
    
    <niobject name="BSMultiBoundSphere" inherit="BSMultiBoundData">
        Bethesda-specific object.
        <field name="Center" type="Vector3" />
        <field name="Radius" type="float" />
    </niobject>

    <compound name="BSGeometrySubSegment">
        This is only defined because of recursion issues.
        <field name="Start Index" type="uint" />
        <field name="Num Primitives" type="uint" />
        <field name="Parent Array Index" type="uint" />
        <field name="Unused" type="uint" />
    </compound>

    <compound name="BSGeometrySegmentData">
        Bethesda-specific. Describes groups of triangles either segmented in a grid (for LOD) or by body part for skinned FO4 meshes.
        <field name="Flags" type="byte" vercond="(User Version 2 &lt; 130)" />
        <field name="Index" type="uint" vercond="(User Version 2 &lt; 130)">Index = previous Index + previous Num Tris in Segment * 3</field>
        <field name="Num Tris in Segment" type="uint" vercond="(User Version 2 &lt; 130)">The number of triangles belonging to this segment</field>
        <field name="Start Index" type="uint" userver2="130" />
        <field name="Num Primitives" type="uint" userver2="130" />
        <field name="Parent Array Index" type="uint" userver2="130" />
        <field name="Num Sub Segments" type="uint" userver2="130" />
        <field name="Sub Segment" type="BSGeometrySubSegment" arr1="Num Sub Segments" userver2="130" />
    </compound>

    <niobject name="BSSegmentedTriShape" inherit="NiTriShape">
        Bethesda-specific AV object.
        <field name="Num Segments" type="int" >Number of segments in the square grid</field>
        <field name="Segment" type="BSGeometrySegmentData" arr1="Num Segments">Configuration of each segment</field>
    </niobject>

    <niobject name="BSMultiBoundAABB" inherit="BSMultiBoundData">
        Bethesda-specific object.
        <field name="Position" type="Vector3">Position of the AABB's center</field>
        <field name="Extent" type="Vector3">Extent of the AABB in all directions</field>
    </niobject>

    <compound name="AdditionalDataInfo">
        <field name="Data Type" type="int" >Type of data in this channel</field>
        <field name="Num Channel Bytes Per Element" type="int" >Number of bytes per element of this channel</field>
        <field name="Num Channel Bytes" type="int" >Total number of bytes of this channel (num vertices times num bytes per element)</field>
        <field name="Num Total Bytes Per Element" type="int" >Number of bytes per element in all channels together. Sum of num channel bytes per element over all block infos.</field>
        <field name="Block Index" type="int" >Unsure. The block in which this channel is stored? Usually there is only one block, and so this is zero.</field>
        <field name="Channel Offset" type="int" >Offset (in bytes) of this channel. Sum of all num channel bytes per element of all preceeding block infos.</field>
        <field name="Unknown Byte 1" type="byte" default="2">Unknown, usually equal to 2.</field>
    </compound>

    <compound name="AdditionalDataBlock">
        <!-- todo: check if this is essentially the same as BSPackedAdditionalData, i.e. if this is identical to BSPackedAdditionalData minus its last two fields -->
        <field name="Has Data" type="bool">Has data</field>
        <field name="Block Size" type="int" cond="Has Data">Size of Block</field>
        <field name="Num Blocks" type="int" cond="Has Data" />
        <field name="Block Offsets" type="int" arr1="Num Blocks" cond="Has Data" />

        <field name="Num Data" type="int" cond="Has Data" />
        <field name="Data Sizes" type="int" arr1="Num Data" cond="Has Data" />
        <field name="Data" type="byte" arr1="Num Data" arr2="Block Size" cond="Has Data" />
    </compound>

    <compound name="BSPackedAdditionalDataBlock">
        <!-- see Fallout NV (nvdlc01vaultposter01.nif) -->
        <field name="Has Data" type="bool">Has data</field>
        <field name="Num Total Bytes" type="int" cond="Has Data">Total number of bytes (over all channels and all elements, equals num total bytes per element times num vertices).</field>
        <field name="Num Blocks" type="int" cond="Has Data">Number of blocks? Usually equal to one.</field>
        <field name="Block Offsets" type="int" arr1="Num Blocks" cond="Has Data">Block offsets in the data? Usually equal to zero.</field>

        <field name="Num Atoms" type="int" cond="Has Data">Number of atoms?</field>
        <field name="Atom Sizes" type="int" arr1="Num Atoms" cond="Has Data">The sum of all of these equal num total bytes per element, so this probably describes how each data element breaks down into smaller chunks (i.e. atoms).</field>
        <field name="Data" type="byte" arr1="Num Total Bytes" cond="Has Data" />
        <field name="Unknown Int 1" type="int" />
        <field name="Num Total Bytes Per Element" type="int">Unsure, but this seems to correspond again to the number of total bytes per element.</field>
    </compound>

    <niobject name="NiAdditionalGeometryData" inherit="AbstractAdditionalGeometryData">
        <field name="Num Vertices" type="ushort">Number of vertices</field>
        <field name="Num Block Infos" type="uint">Information about additional data blocks</field>
        <field name="Block Infos" type="AdditionalDataInfo" arr1="Num Block Infos">Number of additional data blocks</field>
        <field name="Num Blocks" type="int">Number of additional data blocks</field>
        <field name="Blocks" type="AdditionalDataBlock" arr1="Num Blocks">Number of additional data blocks</field>
    </niobject>

    <!-- Fallout NV (nvdlc01vaultposter01.nif) -->
    <niobject name="BSPackedAdditionalGeometryData" inherit="AbstractAdditionalGeometryData">
        <field name="Num Vertices" type="ushort" />
        <field name="Num Block Infos" type="uint">Information about additional data blocks</field>
        <field name="Block Infos" type="AdditionalDataInfo" arr1="Num Block Infos">Number of additional data blocks</field>
        <field name="Num Blocks" type="int">Number of additional data blocks. Usually there is exactly one block.</field>
        <field name="Blocks" type="BSPackedAdditionalDataBlock" arr1="Num Blocks">Number of additional data blocks</field>
    </niobject>

    <niobject name="BSWArray" inherit="NiExtraData">
        Bethesda-specific extra data.
        <field name="Num Items" type="int" />
        <field name="Items" type="int" arr1="Num Items" />
    </niobject>

    <niobject name="bhkAabbPhantom" inherit="bhkShapePhantom">
        Bethesda-specific Havok serializable.
        <field name="Unused" type="byte" arr1="8" />
        <field name="AABB Min" type="Vector4" />
        <field name="AABB Max" type="Vector4" />
    </niobject>

    <niobject name="BSFrustumFOVController" inherit="NiFloatInterpController">
        Bethesda-specific time controller.
    </niobject>

    <niobject name="BSDebrisNode" inherit="BSRangeNode">
        Bethesda-Specific node.
    </niobject>

    <niobject name="bhkBreakableConstraint" abstract="0" inherit="bhkConstraint">
        A breakable constraint.
        <field name="Constraint Data" type="ConstraintData">Constraint within constraint.</field>
        <field name="Threshold" type="float">Amount of force to break the rigid bodies apart?</field>
        <field name="Remove When Broken" type="bool" default="0">No: Constraint stays active. Yes: Constraint gets removed when breaking threshold is exceeded.</field>
    </niobject>

    <niobject name="bhkOrientHingedBodyAction" abstract="0" inherit="bhkSerializable">
        Bethesda-Specific Havok serializable.
        <field name="Body" type="Ptr" template="bhkRigidBody" />
        <field name="Unknown Int 1" type="uint" />
        <field name="Unknown Int 2" type="uint" />
        <field name="Unused 1" type="byte" arr1="8" />
        <field name="Hinge Axis LS" type="Vector4" />
        <field name="Forward LS" type="Vector4" />
        <field name="Strength" type="float" />
        <field name="Damping" type="float" />
        <field name="Unused 2" type="byte" arr1="8" />
    </niobject>

    <niobject name="bhkPoseArray" inherit="NiObject">
        Found in Fallout 3 .psa files, extra ragdoll info for NPCs/creatures. (usually idleanims\deathposes.psa)
        Defines different kill poses. The game selects the pose randomly and applies it to a skeleton immediately upon ragdolling.
        Poses can be previewed in GECK Object Window-Actor Data-Ragdoll and selecting Pose Matching tab.
        <field name="Num Bones" type="int" />
        <field name="Bones" type="string" arr1="Num Bones" />
        <field name="Num Poses" type="int" />
        <field name="Poses" type="BonePose" arr1="Num Poses" />
    </niobject>

    <niobject name="bhkRagdollTemplate" inherit="NiExtraData">
        Found in Fallout 3, more ragdoll info?  (meshes\ragdollconstraint\*.rdt)
        <field name="Num Bones" type="int" />
        <field name="Bones" type="Ref" template="NiObject" arr1="Num Bones" />
    </niobject>

    <niobject name="bhkRagdollTemplateData" inherit="NiObject">
        Data for bhkRagdollTemplate
        <field name="Name" type="string" />
        <field name="Mass" type="float" default="9.0" />
        <field name="Restitution" type="float" default="0.8" />
        <field name="Friction" type="float" default="0.3" />
        <field name="Radius" type="float" default="1.0" />
        <field name="Material" type="HavokMaterial" />
        <field name="Num Constraints" type="uint" />
        <field name="Constraint" type="ConstraintData" arr1="Num Constraints" />
    </niobject>

    <compound name="Region">
        A range of indices, which make up a region (such as a submesh).
        <field name="Start Index" type="uint" />
        <field name="Num Indices" type="uint" />
    </compound>

    <enum name="CloningBehavior" storage="uint">
        Sets how objects are to be cloned.
        <option value="0" name="CLONING_SHARE">Share this object pointer with the newly cloned scene.</option>
        <option value="1" name="CLONING_COPY">Create an exact duplicate of this object for use with the newly cloned scene.</option>
        <option value="2" name="CLONING_BLANK_COPY">Create a copy of this object for use with the newly cloned stream, leaving some of the data to be written later.</option>
    </enum>

    <enum name="ComponentFormat" storage="uint">
        The data format of components.
        <option value="0x00000000" name="F_UNKNOWN">Unknown, or don't care, format.</option>
        <option value="0x00010101" name="F_INT8_1"></option>
        <option value="0x00020102" name="F_INT8_2"></option>
        <option value="0x00030103" name="F_INT8_3"></option>
        <option value="0x00040104" name="F_INT8_4"></option>
        <option value="0x00010105" name="F_UINT8_1"></option>
        <option value="0x00020106" name="F_UINT8_2"></option>
        <option value="0x00030107" name="F_UINT8_3"></option>
        <option value="0x00040108" name="F_UINT8_4"></option>
        <option value="0x00010109" name="F_NORMINT8_1"></option>
        <option value="0x0002010A" name="F_NORMINT8_2"></option>
        <option value="0x0003010B" name="F_NORMINT8_3"></option>
        <option value="0x0004010C" name="F_NORMINT8_4"></option>
        <option value="0x0001010D" name="F_NORMUINT8_1"></option>
        <option value="0x0002010E" name="F_NORMUINT8_2"></option>
        <option value="0x0003010F" name="F_NORMUINT8_3"></option>
        <option value="0x00040110" name="F_NORMUINT8_4"></option>
        <option value="0x00010211" name="F_INT16_1"></option>
        <option value="0x00020212" name="F_INT16_2"></option>
        <option value="0x00030213" name="F_INT16_3"></option>
        <option value="0x00040214" name="F_INT16_4"></option>
        <option value="0x00010215" name="F_UINT16_1"></option>
        <option value="0x00020216" name="F_UINT16_2"></option>
        <option value="0x00030217" name="F_UINT16_3"></option>
        <option value="0x00040218" name="F_UINT16_4"></option>
        <option value="0x00010219" name="F_NORMINT16_1"></option>
        <option value="0x0002021A" name="F_NORMINT16_2"></option>
        <option value="0x0003021B" name="F_NORMINT16_3"></option>
        <option value="0x0004021C" name="F_NORMINT16_4"></option>
        <option value="0x0001021D" name="F_NORMUINT16_1"></option>
        <option value="0x0002021E" name="F_NORMUINT16_2"></option>
        <option value="0x0003021F" name="F_NORMUINT16_3"></option>
        <option value="0x00040220" name="F_NORMUINT16_4"></option>
        <option value="0x00010421" name="F_INT32_1"></option>
        <option value="0x00020422" name="F_INT32_2"></option>
        <option value="0x00030423" name="F_INT32_3"></option>
        <option value="0x00040424" name="F_INT32_4"></option>
        <option value="0x00010425" name="F_UINT32_1"></option>
        <option value="0x00020426" name="F_UINT32_2"></option>
        <option value="0x00030427" name="F_UINT32_3"></option>
        <option value="0x00040428" name="F_UINT32_4"></option>
        <option value="0x00010429" name="F_NORMINT32_1"></option>
        <option value="0x0002042A" name="F_NORMINT32_2"></option>
        <option value="0x0003042B" name="F_NORMINT32_3"></option>
        <option value="0x0004042C" name="F_NORMINT32_4"></option>
        <option value="0x0001042D" name="F_NORMUINT32_1"></option>
        <option value="0x0002042E" name="F_NORMUINT32_2"></option>
        <option value="0x0003042F" name="F_NORMUINT32_3"></option>
        <option value="0x00040430" name="F_NORMUINT32_4"></option>
        <option value="0x00010231" name="F_FLOAT16_1"></option>
        <option value="0x00020232" name="F_FLOAT16_2"></option>
        <option value="0x00030233" name="F_FLOAT16_3"></option>
        <option value="0x00040234" name="F_FLOAT16_4"></option>
        <option value="0x00010435" name="F_FLOAT32_1"></option>
        <option value="0x00020436" name="F_FLOAT32_2"></option>
        <option value="0x00030437" name="F_FLOAT32_3"></option>
        <option value="0x00040438" name="F_FLOAT32_4"></option>
        <option value="0x00010439" name="F_UINT_10_10_10_L1"></option>
        <option value="0x0001043A" name="F_NORMINT_10_10_10_L1"></option>
        <option value="0x0001043B" name="F_NORMINT_11_11_10"></option>
        <option value="0x0004013C" name="F_NORMUINT8_4_BGRA"></option>
        <option value="0x0001043D" name="F_NORMINT_10_10_10_2"></option>
        <option value="0x0001043E" name="F_UINT_10_10_10_2"></option>
    </enum>

    <enum name="DataStreamUsage" storage="uint">
        Determines how a data stream is used?
        <option value="0" name="USAGE_VERTEX_INDEX"></option>
        <option value="1" name="USAGE_VERTEX"></option>
        <option value="2" name="USAGE_SHADER_CONSTANT"></option>
        <option value="3" name="USAGE_USER"></option>
    </enum>
    
    <bitflags name="DataStreamAccess" storage="uint">
        Determines how the data stream is accessed?
        <option value="0" name="CPU Read"></option>
        <option value="1" name="CPU Write Static"></option>
        <option value="2" name="CPU Write Mutable"></option>
        <option value="3" name="CPU Write Volatile"></option>
        <option value="4" name="GPU Read"></option>
        <option value="5" name="GPU Write"></option>
        <option value="6" name="CPU Write Static Inititialized"></option>
    </bitflags>


    <niobject name="NiDataStream" inherit="NiObject" abstract="0">
        <field name="Usage" type="DataStreamUsage" abstract="1"></field>
        <field name="Access" type="DataStreamAccess" abstract="1"></field>
        <field name="Num Bytes" type="uint">The size in bytes of this data stream.</field>
        <field name="Cloning Behavior" type="CloningBehavior" default="CLONING_SHARE" />
        <field name="Num Regions" type="uint">Number of regions (such as submeshes).</field>
        <field name="Regions" type="Region" arr1="Num Regions">The regions in the mesh. Regions can be used to mark off submeshes which are independent draw calls.</field>
        <field name="Num Components" type="uint">Number of components of the data (matches corresponding field in MeshData).</field>
        <field name="Component Formats" type="ComponentFormat" arr1="Num Components">The format of each component in this data stream.</field>
        <field name="Data" type="byte" binary="1" arr1="Num Bytes" />
        <field name="Streamable" type="bool" default="1" />
    </niobject>

    <compound name="SemanticData">
        <field name="Name" type="string">
            Type of data (POSITION, POSITION_BP, INDEX, NORMAL, NORMAL_BP,
            TEXCOORD, BLENDINDICES, BLENDWEIGHT, BONE_PALETTE, COLOR, DISPLAYLIST,
            MORPH_POSITION, BINORMAL_BP, TANGENT_BP).
        </field>
        <field name="Index" type="uint" default="0">
            An extra index of the data. For example, if there are 3 uv maps,
            then the corresponding TEXCOORD data components would have indices
            0, 1, and 2, respectively.
        </field>
    </compound>

    <compound name="DataStreamRef">
        <field name="Stream" type="Ref" template="NiDataStream">
            Reference to a data stream object which holds the data used by
            this reference.
        </field>
        <field name="Is Per Instance" type="bool" default="0">
            Sets whether this stream data is per-instance data for use in
            hardware instancing.
        </field>
        <field name="Num Submeshes" type="ushort" default="1">
            The number of submesh-to-region mappings that this data stream
            has.
        </field>
        <field name="Submesh To Region Map" type="ushort" arr1="Num Submeshes">
            <!-- see Zorsis Zombie_Boy.nif -->
            A lookup table that maps submeshes to regions.
        </field>
        <field name="Num Components" type="uint" default="1" />
        <field name="Component Semantics" type="SemanticData" arr1="Num Components">Describes the semantic of each component.</field>
    </compound>

    <niobject name="NiRenderObject" abstract="1" inherit="NiAVObject">
        An object that can be rendered.
        <field name="Material Data" type="MaterialData">Per-material data.</field>
    </niobject>

    <enum name="MeshPrimitiveType" storage="uint">
        Describes the type of primitives stored in a mesh object.
        <option value="0" name="MESH_PRIMITIVE_TRIANGLES">Triangle primitive type.</option>
        <option value="1" name="MESH_PRIMITIVE_TRISTRIPS">Triangle strip primitive type.</option>
        <option value="2" name="MESH_PRIMITIVE_LINES">Lines primitive type.</option>
        <option value="3" name="MESH_PRIMITIVE_LINESTRIPS">Line strip primitive type.</option>
        <option value="4" name="MESH_PRIMITIVE_QUADS">Quadrilateral primitive type.</option>
        <option value="5" name="MESH_PRIMITIVE_POINTS">Point primitive type.</option>
    </enum>

    <enum name="SyncPoint" storage="ushort">
        A sync point corresponds to a particular stage in per-frame processing.
        <option value="0x8000" name="SYNC_ANY">Synchronize for any sync points that the modifier supports.</option>
        <option value="0x8010" name="SYNC_UPDATE">Synchronize when an object is updated.</option>
        <option value="0x8020" name="SYNC_POST_UPDATE">Synchronize when an entire scene graph has been updated.</option>
        <option value="0x8030" name="SYNC_VISIBLE">Synchronize when an object is determined to be potentially visible.</option>
        <option value="0x8040" name="SYNC_RENDER">Synchronize when an object is rendered.</option>
        <option value="0x8050" name="SYNC_PHYSICS_SIMULATE">Synchronize when a physics simulation step is about to begin.</option>
        <option value="0x8060" name="SYNC_PHYSICS_COMPLETED">Synchronize when a physics simulation step has produced results.</option>
        <option value="0x8070" name="SYNC_REFLECTIONS">Synchronize after all data necessary to calculate reflections is ready.</option>
    </enum>

    <niobject name="NiMeshModifier" abstract="1" inherit="NiObject">
        Base class for mesh modifiers.
        <field name="Num Submit Points" type="uint" />
        <field name="Submit Points" type="SyncPoint" arr1="Num Submit Points">The sync points supported by this mesh modifier for SubmitTasks.</field>
        <field name="Num Complete Points" type="uint" />
        <field name="Complete Points" type="SyncPoint" arr1="Num Complete Points">The sync points supported by this mesh modifier for CompleteTasks.</field>
    </niobject>

    <compound name="ExtraMeshDataEpicMickey">
        <field name="Unknown Int 1" type="int" />
        <field name="Unknown Int 2" type="int" />
        <field name="Unknown Int 3" type="int" />
        <field name="Unknown Int 4" type="float" />
        <field name="Unknown Int 5" type="float" />
        <field name="Unknown Int 6" type="float" />
    </compound>

    <compound name="ExtraMeshDataEpicMickey2">
        <field name="Start" type="int" />
        <field name="End" type="int" />
        <field name="Unknown Shorts" type="short" arr1="10" />
    </compound>

    <niobject name="NiMesh" inherit="NiRenderObject">
        <field name="Primitive Type" type="MeshPrimitiveType">The primitive type of the mesh, such as triangles or lines.</field>

        <!-- start: epic mickey (user version 15) unknowns -->
        <field name="Unknown 51" type="int" userver="15" /><!-- could also be some other type -->
        <field name="Unknown 52" type="int" userver="15" /><!-- could also be some other type -->
        <field name="Unknown 53" type="int" userver="15" /><!-- could also be some other type -->
        <field name="Unknown 54" type="int" userver="15" /><!-- could also be some other type -->
        <field name="Unknown 55" type="float" userver="15" /><!-- could also be some other type -->
        <field name="Unknown 56" type="int" userver="15" /><!-- could also be some other type -->
        <!-- end: epic mickey (user version 15) unknowns -->

        <field name="Num Submeshes" type="ushort">The number of submeshes contained in this mesh.</field>
        <field name="Instancing Enabled" type="bool">Sets whether hardware instancing is being used.</field>
        <field name="Bound" type="NiBound">The combined bounding volume of all submeshes.</field>
        <field name="Num Datastreams" type="uint" />
        <field name="Datastreams" type="DataStreamRef" arr1="Num Datastreams" />
        <field name="Num Modifiers" type="uint" />
        <field name="Modifiers" type="Ref" template="NiMeshModifier" arr1="Num Modifiers" />

        <!-- start: epic mickey (user version 15) unknowns -->
        <field name="Unknown 100" type="byte" userver="15">Unknown.</field>
        <field name="Unknown 101" type="int" userver="15">Unknown.</field>
        <field name="Unknown 102" type="uint" userver="15">Size of additional data.</field>
        <field name="Unknown 103" type="float" arr1="Unknown 102" userver="15" />
        <field name="Unknown 200" type="int" userver="15" />
        <field name="Unknown 201" type="ExtraMeshDataEpicMickey" arr1="Unknown 200" userver="15" />
        <field name="Unknown 250" type="int" userver="15" />
        <field name="Unknown 251" type="int" arr1="Unknown 250" userver="15" />
        <field name="Unknown 300" type="int" userver="15" />
        <field name="Unknown 301" type="short" userver="15" />
        <field name="Unknown 302" type="int" userver="15" />
        <field name="Unknown 303" type="byte" arr1="Unknown 302" userver="15" />
        <field name="Unknown 350" type="int" userver="15" />
        <field name="Unknown 351" type="ExtraMeshDataEpicMickey2" arr1="Unknown 350" userver="15" />
        <field name="Unknown 400" type="int" userver="15" />
        <!-- end: epic mickey (user version 15) unknowns -->
    </niobject>

    <niobject name="NiMorphWeightsController" inherit="NiInterpController">
        Manipulates a mesh with the semantic MORPHWEIGHTS using an NiMorphMeshModifier.
        <field name="Count" type="uint" />
        <field name="Num Interpolators" type="uint" />
        <field name="Interpolators" type="Ref" template="NiInterpolator" arr1="Num Interpolators" />
        <field name="Num Targets" type="uint" />
        <field name="Target Names" type="string" arr1="Num Targets" />
    </niobject>

    <compound name="ElementReference" ver1="20.5.0.0">
        <field name="Semantic" type="SemanticData">The element semantic.</field>
        <field name="Normalize Flag" type="uint">Whether or not to normalize the data.</field>
    </compound>

    <niobject name="NiMorphMeshModifier" inherit="NiMeshModifier">
        Performs linear-weighted blending between a set of target data streams.
        <field name="Flags" type="byte">
            FLAG_RELATIVETARGETS = 0x01
            FLAG_UPDATENORMALS   = 0x02
            FLAG_NEEDSUPDATE     = 0x04
            FLAG_ALWAYSUPDATE    = 0x08
            FLAG_NEEDSCOMPLETION = 0x10
            FLAG_SKINNED         = 0x20
            FLAG_SWSKINNED       = 0x40
        </field>
        <field name="Num Targets" type="ushort">The number of morph targets.</field>
        <field name="Num Elements" type="uint">The number of morphing data stream elements.</field>
        <field name="Elements" type="ElementReference" arr1="Num Elements">Semantics and normalization of the morphing data stream elements.</field>
    </niobject>

    <niobject name="NiSkinningMeshModifier" inherit="NiMeshModifier">
        <field name="Flags" type="ushort">
            USE_SOFTWARE_SKINNING = 0x0001
            RECOMPUTE_BOUNDS = 0x0002
        </field>
        <field name="Skeleton Root" type="Ptr" template="NiAVObject">The root bone of the skeleton.</field>
        <field name="Skeleton Transform" type="NiTransform">The transform that takes the root bone parent coordinate system into the skin coordinate system.</field>
        <field name="Num Bones" type="uint">The number of bones referenced by this mesh modifier.</field>
        <field name="Bones" type="Ptr" template="NiAVObject" arr1="Num Bones">Pointers to the bone nodes that affect this skin.</field>
        <field name="Bone Transforms" type="NiTransform" arr1="Num Bones">The transforms that go from bind-pose space to bone space.</field>
        <field name="Bone Bounds" type="NiBound" cond="(Flags &amp; 2)!=0" arr1="Num Bones">The bounds of the bones.  Only stored if the RECOMPUTE_BOUNDS bit is set.</field>
    </niobject>

    <niobject name="NiMeshHWInstance" inherit="NiAVObject">
        An instance of a hardware-instanced mesh in a scene graph.
        <field name="Master Mesh" type="Ref" template="NiMesh">The instanced mesh this object represents.</field>
        <field name="Mesh Modifier" type="Ref" template="NiInstancingMeshModifier" />
    </niobject>

    <niobject name="NiInstancingMeshModifier" inherit="NiMeshModifier">
        Mesh modifier that provides per-frame instancing capabilities in Gamebryo.
        <field name="Has Instance Nodes" type="bool" />
        <field name="Per Instance Culling" type="bool" />
        <field name="Has Static Bounds" type="bool" />
        <field name="Affected Mesh" type="Ref" template="NiMesh" />
        <field name="Bound" type="NiBound" cond="Has Static Bounds" />
        <field name="Num Instance Nodes" type="uint" cond="Has Instance Nodes" />
        <field name="Instance Nodes" type="Ref" template="NiMeshHWInstance" arr1="Num Instance Nodes" cond="Has Instance Nodes" />
    </niobject>

    <compound name="LODInfo">
        <field name="Num Bones" type="uint" />
        <field name="Num Active Skins" type="uint" />
        <field name="Skin Indices" type="uint" arr1="Num Active Skins" />
    </compound>

    <niobject name="NiSkinningLODController" inherit="NiTimeController">
        Defines the levels of detail for a given character and dictates the character's current LOD.
        <field name="Current LOD" type="uint" />
        <field name="Num Bones" type="uint" />
        <field name="Bones" type="Ref" template="NiNode" arr1="Num Bones" />
        <field name="Num Skins" type="uint" />
        <field name="Skins" type="Ref" template="NiMesh" arr1="Num Skins" />
        <field name="Num LOD Levels" type="uint" />
        <field name="LODs" type="LODInfo" arr1="Num LOD Levels" />
    </niobject>


    <!-- NiPS Particle System -->

    <compound name="PSSpawnRateKey">
        <field name="Value" type="float" />
        <field name="Time" type="float" />
    </compound>

    <enum name="AlignMethod" storage="uint">
        Describes the various methods that may be used to specify the orientation of the particles.
        <option value="0" name="ALIGN_INVALID" />
        <option value="1" name="ALIGN_PER_PARTICLE" />
        <option value="2" name="ALIGN_LOCAL_FIXED" />
        <option value="5" name="ALIGN_LOCAL_POSITION" />
        <option value="9" name="ALIGN_LOCAL_VELOCITY" />
        <option value="16" name="ALIGN_CAMERA" />
    </enum>

    <niobject name="NiPSParticleSystem" inherit="NiMesh">
        Represents a particle system.
        <field name="Simulator" type="Ref" template="NiPSSimulator" />
        <field name="Generator" type="Ref" template="NiPSBoundUpdater" />
        <field name="Num Emitters" type="uint" />
        <field name="Emitters" type="Ref" template="NiPSEmitter" arr1="Num Emitters" />
        <field name="Num Spawners" type="uint" />
        <field name="Spawners" type="Ref" template="NiPSSpawner" arr1="Num Spawners" />
        <field name="Death Spawner" type="Ref" template="NiPSSpawner" />
        <field name="Max Num Particles" type="uint" />
        <field name="Has Colors" type="bool" />
        <field name="Has Rotations" type="bool" />
        <field name="Has Rotation Axes" type="bool" />
        <field name="Has Animated Textures" type="bool" ver1="20.6.1.0" />
        <field name="World Space" type="bool" />
        <field name="Normal Method" type="AlignMethod" ver1="20.6.1.0" />
        <field name="Normal Direction" type="Vector3" ver1="20.6.1.0" />
        <field name="Up Method" type="AlignMethod" ver1="20.6.1.0" />
        <field name="Up Direction" type="Vector3" ver1="20.6.1.0" />
        <field name="Living Spawner" type="Ref" template="NiPSSpawner" ver1="20.6.1.0" />
        <field name="Num Spawn Rate Keys" type="byte" ver1="20.6.1.0" />
        <field name="Spawn Rate Keys" type="PSSpawnRateKey" arr1="Num Spawn Rate Keys" ver1="20.6.1.0" />
        <field name="Pre-RPI" type="bool" ver1="20.6.1.0" />
    </niobject>

    <niobject name="NiPSMeshParticleSystem" inherit="NiPSParticleSystem">
        Represents a particle system that uses mesh particles instead of sprite-based particles.
        <field name="Num Generations" type="uint" />
        <field name="Master Particles" type="Ref" template="NiAVObject" arr1="Num Generations" />
        <field name="Pool Size" type="uint" />
        <field name="Auto-Fill Pools" type="bool" />
    </niobject>

    <!-- NiPS Generators -->

    <niobject name="NiPSFacingQuadGenerator" inherit="NiMeshModifier">
        A mesh modifier that uses particle system data to generate camera-facing quads.
    </niobject>

    <niobject name="NiPSAlignedQuadGenerator" inherit="NiMeshModifier">
        A mesh modifier that uses particle system data to generate aligned quads for each particle.
        <field name="Scale Amount U" type="float" />
        <field name="Scale Limit U" type="float" default="10000.0" />
        <field name="Scale Rest U" type="float" default="1.0" />
        <field name="Scale Amount V" type="float" />
        <field name="Scale Limit V" type="float" default="10000.0" />
        <field name="Scale Rest V" type="float" default="1.0" />
        <field name="Center U" type="float" />
        <field name="Center V" type="float" />
        <field name="UV Scrolling" type="bool" />
        <field name="Num Frames Across" type="ushort" default="1" />
        <field name="Num Frames Down" type="ushort" default="1" />
        <field name="Ping Pong" type="bool" />
        <field name="Initial Frame" type="ushort" />
        <field name="Initial Frame Variation" type="float" />
        <field name="Num Frames" type="ushort" />
        <field name="Num Frames Variation" type="float" />
        <field name="Initial Time" type="float" />
        <field name="Final Time" type="float" default="1.0" />
    </niobject>

    <!-- NiPS Simulators -->

    <niobject name="NiPSSimulator" inherit="NiMeshModifier">
        The mesh modifier that performs all particle system simulation.
        <field name="Num Simulation Steps" type="uint" />
        <field name="Simulation Steps" type="Ref" template="NiPSSimulatorStep" arr1="Num Simulation Steps" />
    </niobject>

    <niobject name="NiPSSimulatorStep" inherit="NiObject" abstract="1">
        Abstract base class for a single step in the particle system simulation process.  It has no seralized data.
    </niobject>

    <enum name="PSLoopBehavior" ver1="20.5.0.0" storage="uint">
        <option name="PS_LOOP_CLAMP_BIRTH" value="0">Key times map such that the first key occurs at the birth of the particle, and times later than the last key get the last key value.</option>
        <option name="PS_LOOP_CLAMP_DEATH" value="1">Key times map such that the last key occurs at the death of the particle, and times before the initial key time get the value of the initial key.</option>
        <option name="PS_LOOP_AGESCALE" value="2">Scale the animation to fit the particle lifetime, so that the first key is age zero, and the last key comes at the particle death.</option>
        <option name="PS_LOOP_LOOP" value="3">The time is converted to one within the time range represented by the keys, as if the key sequence loops forever in the past and future.</option>
        <option name="PS_LOOP_REFLECT" value="4">The time is reflection looped, as if the keys played forward then backward the forward then backward etc for all time.</option>
    </enum>

    <niobject name="NiPSSimulatorGeneralStep" inherit="NiPSSimulatorStep">
        Encapsulates a floodgate kernel that updates particle size, colors, and rotations.
        <field name="Num Size Keys" type="byte" ver1="20.6.1.0" />
        <field name="Size Keys" type="Key" template="float" arg="1" arr1="Num Size Keys" ver1="20.6.1.0">The particle size keys.</field>
        <field name="Size Loop Behavior" type="PSLoopBehavior" ver1="20.6.1.0">The loop behavior for the size keys.</field>
        <field name="Num Color Keys" type="byte" />
        <field name="Color Keys" type="Key" template="ByteColor4" arg="1" arr1="Num Color Keys">The particle color keys.</field>
        <field name="Color Loop Behavior" type="PSLoopBehavior" ver1="20.6.1.0">The loop behavior for the color keys.</field>
        <field name="Num Rotation Keys" type="byte" ver1="20.6.1.0" />
        <field name="Rotation Keys" type="QuatKey" template="Quaternion" arg="1" arr1="Num Rotation Keys" ver1="20.6.1.0">The particle rotation keys.</field>
        <field name="Rotation Loop Behavior" type="PSLoopBehavior" ver1="20.6.1.0">The loop behavior for the rotation keys.</field>
        <field name="Grow Time" type="float"> The the amount of time over which a particle's size is ramped from 0.0 to 1.0 in seconds</field>
        <field name="Shrink Time" type="float">The the amount of time over which a particle's size is ramped from 1.0 to 0.0 in seconds</field>
        <field name="Grow Generation" type="ushort">Specifies the particle generation to which the grow effect should be applied. This is usually generation 0, so that newly created particles will grow.</field>
        <field name="Shrink Generation" type="ushort">Specifies the particle generation to which the shrink effect should be applied. This is usually the highest supported generation for the particle system, so that particles will shrink immediately before getting killed.</field>
    </niobject>

    <niobject name="NiPSSimulatorForcesStep" inherit="NiPSSimulatorStep">
        Encapsulates a floodgate kernel that simulates particle forces.
        <field name="Num Forces" type="uint" />
        <field name="Forces" type="Ref" template="NiPSForce" arr1="Num Forces">The forces affecting the particle system.</field>
    </niobject>

    <niobject name="NiPSSimulatorCollidersStep" inherit="NiPSSimulatorStep">
        Encapsulates a floodgate kernel that simulates particle colliders.
        <field name="Num Colliders" type="uint" />
        <field name="Colliders" type="Ref" template="NiPSCollider" arr1="Num Colliders">The colliders affecting the particle system.</field>
    </niobject>

    <niobject name="NiPSSimulatorMeshAlignStep" inherit="NiPSSimulatorStep">
        Encapsulates a floodgate kernel that updates mesh particle alignment and transforms.
        <field name="Num Rotation Keys" type="byte" />
        <field name="Rotation Keys" type="QuatKey" template="Quaternion" arg="1" arr1="Num Rotation Keys">The particle rotation keys.</field>
        <field name="Rotation Loop Behavior" type="PSLoopBehavior">The loop behavior for the rotation keys.</field>
    </niobject>

    <niobject name="NiPSSimulatorFinalStep" inherit="NiPSSimulatorStep">
        Encapsulates a floodgate kernel that updates particle positions and ages. As indicated by its name, this step should be attached last in the NiPSSimulator mesh modifier.
    </niobject>

    <niobject name="NiPSBoundUpdater" inherit="NiObject">
        Updates the bounding volume for an NiPSParticleSystem object.
        <field name="Update Skip" type="ushort">Number of particle bounds to skip updating every frame. Higher = more updates each frame.</field>
    </niobject>

    <!-- NiPS Forces -->

    <enum name="PSForceType" storage="uint">
        This is used by the Floodgate kernel to determine which NiPSForceHelpers functions to call.
        <option value="0" name="FORCE_BOMB" />
        <option value="1" name="FORCE_DRAG" />
        <option value="2" name="FORCE_AIR_FIELD" />
        <option value="3" name="FORCE_DRAG_FIELD" />
        <option value="4" name="FORCE_GRAVITY_FIELD" />
        <option value="5" name="FORCE_RADIAL_FIELD" />
        <option value="6" name="FORCE_TURBULENCE_FIELD" />
        <option value="7" name="FORCE_VORTEX_FIELD" />
        <option value="8" name="FORCE_GRAVITY" />
    </enum>

    <niobject name="NiPSForce" abstract="1" inherit="NiObject">
        Abstract base class for all particle forces.
        <field name="Name" type="string" />
        <field name="Type" type="PSForceType" />
        <field name="Active" type="bool" />
    </niobject>

    <niobject name="NiPSDragForce" inherit="NiPSForce">
        Applies a linear drag force to particles.
        <field name="Drag Axis" type="Vector3" />
        <field name="Percentage" type="float" />
        <field name="Range" type="float" />
        <field name="Range Falloff" type="float" />
        <field name="Drag Object" type="Ptr" template="NiAVObject" />
    </niobject>

    <niobject name="NiPSGravityForce" inherit="NiPSForce">
        Applies a gravitational force to particles.
        <field name="Gravity Axis" type="Vector3" />
        <field name="Decay" type="float" />
        <field name="Strength" type="float" />
        <field name="Force Type" type="ForceType" />
        <field name="Turbulence" type="float" />
        <field name="Turbulence Scale" type="float" />
        <field name="Gravity Object" type="Ptr" template="NiAVObject" />
    </niobject>

    <niobject name="NiPSBombForce" inherit="NiPSForce">
        Applies an explosive force to particles.
        <field name="Bomb Axis" type="Vector3" />
        <field name="Decay" type="float" />
        <field name="Delta V" type="float" />
        <field name="Decay Type" type="DecayType" />
        <field name="Symmetry Type" type="SymmetryType" />
        <field name="Bomb Object" type="Ptr" template="NiAVObject" />
    </niobject>

    <niobject name="NiPSAirFieldForce" inherit="NiPSFieldForce" module="NiPSParticle" since="V20_5_0_0">
        Inside a field, updates particle velocity to simulate the effects of air movements.
        <field name="Direction" type="Vector3" />
        <field name="Air Friction" type="float" />
        <field name="Inherited Velocity" type="float" />
        <field name="Inherit Rotation" type="bool" />
        <field name="Enable Spread" type="bool" />
        <field name="Spread" type="float" />
    </niobject>

    <niobject name="NiPSGravityFieldForce" inherit="NiPSFieldForce" module="NiPSParticle" since="V20_5_0_0">
        Inside a field, updates particle velocity to simulate the effects of directional gravity.
        <field name="DEM Unknown Short" type="ushort" ver1="20.6.5.0" ver2="20.6.5.0" vercond="#USER# #GT# 14" />
        <field name="Direction" type="Vector3" default="#X_AXIS#" />
        <field name="DEM Unknown Byte" type="byte" ver1="20.6.5.0" ver2="20.6.5.0" vercond="#USER# #GT# 14" />
    </niobject>

    <niobject name="NiPSDragFieldForce" inherit="NiPSFieldForce" module="NiPSParticle" since="V20_5_0_0">
        Inside a field, updates particle velocity to simulate the effects of drag.
        <field name="Use Direction" type="bool" />
        <field name="Direction" type="Vector3" default="#X_AXIS#" />
    </niobject>

    <niobject name="NiPSRadialFieldForce" inherit="NiPSFieldForce" module="NiPSParticle" since="V20_5_0_0">
        Inside a field, updates particle velocity to simulate the effects of point gravity.
        <field name="Radial Factor" type="float" />
    </niobject>

    <niobject name="NiPSTurbulenceFieldForce" inherit="NiPSFieldForce" module="NiPSParticle" since="V20_5_0_0">
        Inside a field, updates particle velocity to simulate the effects of turbulence.
        <field name="Frequency" type="float" />
    </niobject>

    <niobject name="NiPSVortexFieldForce" inherit="NiPSFieldForce" module="NiPSParticle" since="V20_5_0_0">
        Inside a field, updates particle velocity to simulate the effects of a vortex.
        <field name="Direction" type="Vector3" default="#X_AXIS#" />
    </niobject>

    <!-- NiPS Emitters -->

    <niobject name="NiPSEmitter" abstract="1" inherit="NiObject">
        Abstract base class for all particle emitters.
        <field name="Name" type="string" />
        <field name="Speed" type="float" />
        <field name="Speed Var" type="float" />
        <field name="Speed Flip Ratio" type="float" ver1="20.6.1.0" />
        <field name="Declination" type="float" />
        <field name="Declination Var" type="float" />
        <field name="Planar Angle" type="float" />
        <field name="Planar Angle Var" type="float" />
        <field name="Color" type="ByteColor4" ver2="20.6.0.0" />
        <field name="Size" type="float" />
        <field name="Size Var" type="float" />
        <field name="Lifespan" type="float" />
        <field name="Lifespan Var" type="float" />
        <field name="Rotation Angle" type="float" />
        <field name="Rotation Angle Var" type="float" />
        <field name="Rotation Speed" type="float" />
        <field name="Rotation Speed Var" type="float" />
        <field name="Rotation Axis" type="Vector3" />
        <field name="Random Rot Speed Sign" type="bool" />
        <field name="Random Rot Axis" type="bool" />
        <field name="Unknown" type="bool" ver1="30.0.0.0" ver2="30.0.0.1" />
    </niobject>

    <niobject name="NiPSVolumeEmitter" abstract="1" inherit="NiPSEmitter">
        Abstract base class for particle emitters that emit particles from a volume.
        <field name="Emitter Object" type="Ptr" template="NiAVObject" />
    </niobject>

    <niobject name="NiPSBoxEmitter" inherit="NiPSVolumeEmitter">
        A particle emitter that emits particles from a rectangular volume.
        <field name="Emitter Width" type="float" />
        <field name="Emitter Height" type="float" />
        <field name="Emitter Depth" type="float" />
    </niobject>

    <niobject name="NiPSSphereEmitter" inherit="NiPSVolumeEmitter">
        A particle emitter that emits particles from a spherical volume.
        <field name="Emitter Radius" type="float" />
    </niobject>

    <niobject name="NiPSCylinderEmitter" inherit="NiPSVolumeEmitter">
        A particle emitter that emits particles from a cylindrical volume.
        <field name="Emitter Radius" type="float" />
        <field name="Emitter Height" type="float" />
    </niobject>

    <niobject name="NiPSMeshEmitter" inherit="NiPSEmitter">
        Emits particles from one or more NiMesh objects. A random mesh emitter is selected for each particle emission.
        <field name="Num Mesh Emitters" type="uint" />
        <field name="Mesh Emitters" type="Ptr" template="NiMesh" arr1="Num Mesh Emitters" />
        <field name="Emit Axis" type="Vector3" ver2="20.6.0.0" />
        <field name="Emitter Object" type="Ptr" template="NiAVObject" ver1="20.6.1.0" />
        <field name="Mesh Emission Type" type="EmitFrom" />
        <field name="Initial Velocity Type" type="VelocityType" />
    </niobject>

    <!-- NiPS Controllers -->

    <niobject name="NiPSEmitterCtlr" abstract="1" inherit="NiSingleInterpController">
        Abstract base class for all particle emitter time controllers.
        <field name="Emitter Name" type="string" />
    </niobject>

    <niobject name="NiPSEmitterFloatCtlr" abstract="1" inherit="NiPSEmitterCtlr">
        Abstract base class for controllers that animate a floating point value on an NiPSEmitter object.
    </niobject>

    <niobject name="NiPSEmitParticlesCtlr" inherit="NiPSEmitterCtlr">
        Animates particle emission and birth rate.
        <field name="Emitter Active Interpolator" type="Ref" template="NiInterpolator" />
    </niobject>

    <niobject name="NiPSForceCtlr" abstract="1" inherit="NiSingleInterpController">
        Abstract base class for all particle force time controllers.
        <field name="Force Name" type="string" />
    </niobject>

    <niobject name="NiPSForceBoolCtlr" abstract="1" inherit="NiPSForceCtlr">
        Abstract base class for controllers that animate a Boolean value on an NiPSForce object.
    </niobject>

    <niobject name="NiPSForceFloatCtlr" abstract="1" inherit="NiPSForceCtlr">
        Abstract base class for controllers that animate a floating point value on an NiPSForce object.
    </niobject>

    <niobject name="NiPSForceActiveCtlr" inherit="NiPSForceBoolCtlr">
        Animates whether or not an NiPSForce object is active.
    </niobject>

    <niobject name="NiPSGravityStrengthCtlr" inherit="NiPSForceFloatCtlr">
        Animates the strength value of an NiPSGravityForce object.
    </niobject>

    <niobject name="NiPSEmitterSpeedCtlr" inherit="NiPSEmitterFloatCtlr">
        Animates the speed value on an NiPSEmitter object.
    </niobject>

    <niobject name="NiPSEmitterRadiusCtlr" inherit="NiPSEmitterFloatCtlr">
        Animates the size value on an NiPSEmitter object.
    </niobject>

    <niobject name="NiPSEmitterDeclinationCtlr" inherit="NiPSEmitterFloatCtlr">
        Animates the declination value on an NiPSEmitter object.
    </niobject>

    <niobject name="NiPSEmitterDeclinationVarCtlr" inherit="NiPSEmitterFloatCtlr">
        Animates the declination variation value on an NiPSEmitter object.
    </niobject>

    <niobject name="NiPSEmitterPlanarAngleCtlr" inherit="NiPSEmitterFloatCtlr">
        Animates the planar angle value on an NiPSEmitter object.
    </niobject>

    <niobject name="NiPSEmitterPlanarAngleVarCtlr" inherit="NiPSEmitterFloatCtlr">
        Animates the planar angle variation value on an NiPSEmitter object.
    </niobject>

    <niobject name="NiPSEmitterRotAngleCtlr" inherit="NiPSEmitterFloatCtlr">
        Animates the rotation angle value on an NiPSEmitter object.
    </niobject>

    <niobject name="NiPSEmitterRotAngleVarCtlr" inherit="NiPSEmitterFloatCtlr">
        Animates the rotation angle variation value on an NiPSEmitter object.
    </niobject>

    <niobject name="NiPSEmitterRotSpeedCtlr" inherit="NiPSEmitterFloatCtlr">
        Animates the rotation speed value on an NiPSEmitter object.
    </niobject>

    <niobject name="NiPSEmitterRotSpeedVarCtlr" inherit="NiPSEmitterFloatCtlr">
        Animates the rotation speed variation value on an NiPSEmitter object.
    </niobject>

    <niobject name="NiPSEmitterLifeSpanCtlr" inherit="NiPSEmitterFloatCtlr">
        Animates the lifespan value on an NiPSEmitter object.
    </niobject>

    <niobject name="NiPSResetOnLoopCtlr" inherit="NiTimeController">
        Calls ResetParticleSystem on an NiPSParticleSystem target upon looping.
    </niobject>

    <!-- NiPS Colliders -->

    <enum name="ColliderType" storage="uint">
        This is used by the Floodgate kernel to determine which NiPSColliderHelpers functions to call.
        <option value="0" name="COLLIDER_PLANAR" />
        <option value="1" name="COLLIDER_SPHERICAL" />
    </enum>

    <niobject name="NiPSCollider" inherit="NiObject">
        Abstract base class for all particle colliders.
        <field name="Spawner" type="Ref" template="NiPSSpawner" />
        <field name="Type" type="ColliderType" />
        <field name="Active" type="bool" />
        <field name="Bounce" type="float" />
        <field name="Spawn on Collide" type="bool" />
        <field name="Die on Collide" type="bool" />
    </niobject>

    <niobject name="NiPSPlanarCollider" inherit="NiPSCollider">
        A planar collider for particles.
        <field name="Width" type="float" />
        <field name="Height" type="float" />
        <field name="X Axis" type="Vector3" />
        <field name="Y Axis" type="Vector3" />
        <field name="Collider Object" type="Ptr" template="NiAVObject" />
    </niobject>

    <niobject name="NiPSSphericalCollider" inherit="NiPSCollider">
        A spherical collider for particles.
        <field name="Radius" type="float" />
        <field name="Collider Object" type="Ptr" template="NiAVObject" />
    </niobject>

    <niobject name="NiPSSpawner" inherit="NiObject">
        Creates a new particle whose initial parameters are based on an existing particle.
        <field name="Master Particle System" type="Ptr" template="NiPSParticleSystem" ver1="20.6.1.0" />
        <field name="Percentage Spawned" type="float" />
        <field name="Spawn Speed Factor" type="float" ver1="20.6.1.0" />
        <field name="Spawn Speed Factor Var" type="float" />
        <field name="Spawn Dir Chaos" type="float" />
        <field name="Life Span" type="float" />
        <field name="Life Span Var" type="float" />
        <field name="Num Spawn Generations" type="ushort" />
        <field name="Min to Spawn" type="uint" />
        <field name="Max to Spawn" type="uint" />
    </niobject>

    <niobject name="NiEvaluator" abstract="1" inherit="NiObject">
        <field name="Node Name" type="string">The name of the animated NiAVObject.</field>
        <field name="Property Type" type="string">The RTTI type of the NiProperty the controller is attached to, if applicable.</field>
        <field name="Controller Type" type="string">The RTTI type of the NiTimeController.</field>
        <field name="Controller ID" type="string">An ID that can uniquely identify the controller among others of the same type on the same NiObjectNET.</field>
        <field name="Interpolator ID" type="string">An ID that can uniquely identify the interpolator among others of the same type on the same NiObjectNET.</field>
        <field name="Channel Types" type="byte" arr1="4">
            Channel Indices are BASE/POS = 0, ROT = 1, SCALE = 2, FLAG = 3
            Channel Types are:
             INVALID = 0, COLOR, BOOL, FLOAT, POINT3, ROT = 5
            Any channel may be | 0x40 which means POSED
            The FLAG (3) channel flags affects the whole evaluator:
             REFERENCED = 0x1, TRANSFORM = 0x2, ALWAYSUPDATE = 0x4, SHUTDOWN = 0x8
        </field>
    </niobject>

    <niobject name="NiKeyBasedEvaluator" abstract="1" inherit="NiEvaluator" />

    <niobject name="NiBoolEvaluator" inherit="NiKeyBasedEvaluator">
        <field name="Data" type="Ref" template="NiBoolData" />
    </niobject>

    <niobject name="NiBoolTimelineEvaluator" inherit="NiBoolEvaluator" />

    <niobject name="NiColorEvaluator" inherit="NiKeyBasedEvaluator">
        <field name="Data" type="Ref" template="NiColorData" />
    </niobject>

    <niobject name="NiFloatEvaluator" inherit="NiKeyBasedEvaluator">
        <field name="Data" type="Ref" template="NiFloatData" />
    </niobject>

    <niobject name="NiPoint3Evaluator" inherit="NiKeyBasedEvaluator">
        <field name="Data" type="Ref" template="NiPosData" />
    </niobject>

    <niobject name="NiQuaternionEvaluator" inherit="NiKeyBasedEvaluator">
        <field name="Data" type="Ref" template="NiRotData" />
    </niobject>

    <niobject name="NiTransformEvaluator" inherit="NiKeyBasedEvaluator">
        <field name="Value" type="NiQuatTransform" />
        <field name="Data" type="Ref" template="NiTransformData" />
    </niobject>

    <niobject name="NiConstBoolEvaluator" inherit="NiEvaluator">
        <field name="Value" type="float" default="-3.402823466e+38" /> <!-- Yes, this is actually a float. -->
    </niobject>

    <niobject name="NiConstColorEvaluator" inherit="NiEvaluator">
        <field name="Value" type="Color4" default="-3.402823466e+38, -3.402823466e+38, -3.402823466e+38, -3.402823466e+38" />
    </niobject>

    <niobject name="NiConstFloatEvaluator" inherit="NiEvaluator">
        <field name="Value" type="float" default="-3.402823466e+38" />
    </niobject>

    <niobject name="NiConstPoint3Evaluator" inherit="NiEvaluator">
        <field name="Value" type="Vector3" default="-3.402823466e+38, -3.402823466e+38, -3.402823466e+38," />
    </niobject>

    <niobject name="NiConstQuaternionEvaluator" inherit="NiEvaluator">
        <field name="Value" type="Quaternion" default="-3.402823466e+38, -3.402823466e+38, -3.402823466e+38, -3.402823466e+38" />
    </niobject>

    <niobject name="NiConstTransformEvaluator" inherit="NiEvaluator">
        <field name="Value" type="NiQuatTransform" />
    </niobject>

    <niobject name="NiBSplineEvaluator" inherit="NiEvaluator">
        <field name="Start Time" type="float" default="3.402823466e+38" />
        <field name="End Time" type="float" default="-3.402823466e+38" />
        <field name="Data" type="Ref" template="NiBSplineData" />
        <field name="Basis Data" type="Ref" template="NiBSplineBasisData" />
    </niobject>

    <niobject name="NiBSplineColorEvaluator" inherit="NiBSplineEvaluator">
        <field name="Handle" type="uint" default="0xFFFF">Handle into the data. (USHRT_MAX for invalid handle.)</field>
    </niobject>

    <niobject name="NiBSplineCompColorEvaluator" inherit="NiBSplineColorEvaluator">
        <field name="Offset" type="float" default="3.402823466e+38" />
        <field name="Half Range" type="float" default="3.402823466e+38" />
    </niobject>

    <niobject name="NiBSplineFloatEvaluator" inherit="NiBSplineEvaluator">
        <field name="Handle" type="uint" default="0xFFFF">Handle into the data. (USHRT_MAX for invalid handle.)</field>
    </niobject>

    <niobject name="NiBSplineCompFloatEvaluator" inherit="NiBSplineFloatEvaluator">
        <field name="Offset" type="float" default="3.402823466e+38" />
        <field name="Half Range" type="float" default="3.402823466e+38" />
    </niobject>

    <niobject name="NiBSplinePoint3Evaluator" inherit="NiBSplineEvaluator">
        <field name="Handle" type="uint" default="0xFFFF">Handle into the data. (USHRT_MAX for invalid handle.)</field>
    </niobject>

    <niobject name="NiBSplineCompPoint3Evaluator" inherit="NiBSplinePoint3Evaluator">
        <field name="Offset" type="float" default="3.402823466e+38" />
        <field name="Half Range" type="float" default="3.402823466e+38" />
    </niobject>

    <niobject name="NiBSplineTransformEvaluator" inherit="NiBSplineEvaluator">
        <field name="Transform" type="NiQuatTransform" />
        <field name="Translation Handle" type="uint" default="0xFFFF">Handle into the translation data. (USHRT_MAX for invalid handle.)</field>
        <field name="Rotation Handle" type="uint" default="0xFFFF">Handle into the rotation data. (USHRT_MAX for invalid handle.)</field>
        <field name="Scale Handle" type="uint" default="0xFFFF">Handle into the scale data. (USHRT_MAX for invalid handle.)</field>
    </niobject>

    <niobject name="NiBSplineCompTransformEvaluator" inherit="NiBSplineTransformEvaluator">
        <field name="Translation Offset" type="float" default="3.402823466e+38" />
        <field name="Translation Half Range" type="float" default="3.402823466e+38" />
        <field name="Rotation Offset" type="float" default="3.402823466e+38" />
        <field name="Rotation Half Range" type="float" default="3.402823466e+38" />
        <field name="Scale Offset" type="float" default="3.402823466e+38" />
        <field name="Scale Half Range" type="float" default="3.402823466e+38" />
    </niobject>

    <niobject name="NiLookAtEvaluator" inherit="NiEvaluator">
        <field name="Flags" type="LookAtFlags" />
        <field name="Look At Name" type="string" />
        <field name="Driven Name" type="string" />
        <field name="Interpolator: Translation" type="Ref" template="NiPoint3Interpolator" />
        <field name="Interpolator: Roll" type="Ref" template="NiFloatInterpolator" />
        <field name="Interpolator: Scale" type="Ref" template="NiFloatInterpolator" />
    </niobject>

    <niobject name="NiPathEvaluator" inherit="NiKeyBasedEvaluator">
        <field name="Flags" type="PathFlags" default="3" />
        <field name="Bank Dir" type="int" default="1">-1 = Negative, 1 = Positive</field>
        <field name="Max Bank Angle" type="float">Max angle in radians.</field>
        <field name="Smoothing" type="float" />
        <field name="Follow Axis" type="short">0, 1, or 2 representing X, Y, or Z.</field>
        <field name="Path Data" type="Ref" template="NiPosData" />
        <field name="Percent Data" type="Ref" template="NiFloatData" />
    </niobject>

    <niobject name="NiSequenceData" inherit="NiObject">
        Root node in Gamebryo .kf files (20.5.0.1 and up).
        For 20.5.0.0, "NiSequenceData" is an alias for "NiControllerSequence" and this is not handled in nifxml.
        This was not found in any 20.5.0.0 KFs available and they instead use NiControllerSequence directly.
        <field name="Name" type="string" />
        <!-- Pre-Evaluator -->
        <field name="Num Controlled Blocks" type="uint" ver2="20.5.0.1" />
        <field name="Array Grow By" type="uint" ver2="20.5.0.1" />
        <field name="Controlled Blocks" type="ControlledBlock" arr1="Num Controlled Blocks" ver2="20.5.0.1" />
        <!-- Evaluator -->
        <field name="Num Evaluators" type="uint" ver1="20.5.0.2" />
        <field name="Evaluators" type="Ref" template="NiEvaluator" arr1="Num Evaluators" ver1="20.5.0.2" />
        <field name="Text Keys" type="Ref" template="NiTextKeyExtraData" />
        <field name="Duration" type="float" />
        <field name="Cycle Type" type="CycleType" />
        <field name="Frequency" type="float" default="1.0" />
        <field name="Accum Root Name" type="string">The name of the NiAVObject serving as the accumulation root. This is where all accumulated translations, scales, and rotations are applied.</field>
        <field name="Accum Flags" type="AccumFlags" default="ACCUM_X_FRONT" />
    </niobject>

    <niobject name="NiShadowGenerator" inherit="NiObject">
        An NiShadowGenerator object is attached to an NiDynamicEffect object to inform the shadowing system that the effect produces shadows.
        <field name="Name" type="string" />
        <field name="Flags" type="ushort" />
        <field name="Num Shadow Casters" type="uint" />
        <field name="Shadow Casters" type="Ref" template="NiNode" arr1="Num Shadow Casters" />
        <field name="Num Shadow Receivers" type="uint" />
        <field name="Shadow Receivers" type="Ref" template="NiNode" arr1="Num Shadow Receivers" />
        <field name="Target" type="Ptr" template="NiDynamicEffect" />
        <field name="Depth Bias" type="float" default="0.98" />
        <field name="Size Hint" type="ushort" />
        <field name="Near Clipping Distance" type="float" ver1="20.3.0.7" />
        <field name="Far Clipping Distance" type="float" ver1="20.3.0.7" />
        <field name="Directional Light Frustum Width" type="float" ver1="20.3.0.7" />
    </niobject>

    <niobject name="NiFurSpringController" inherit="NiTimeController"><!-- BloodBowl -->
        <field name="Unknown Float" type="float"></field>
        <field name="Unknown Float 2" type="float"></field>
        <field name="Num Bones" type="uint">The number of node bones referenced as influences.</field>
        <field name="Bones" type="Ptr" template="NiNode" arr1="Num Bones">List of all armature bones.</field>
        <field name="Num Bones 2" type="uint">The number of node bones referenced as influences.</field>
        <field name="Bones 2" type="Ptr" template="NiNode" arr1="Num Bones 2">List of all armature bones.</field>
    </niobject>

    <!-- Divinity 2 (P_Island_VerySmall_A.item) -->
    <niobject name="CStreamableAssetData" inherit="NiObject">
        <field name="Root" type="Ref" template="NiNode" />
        <field name="Unknown Bytes" type="byte" arr1="5" />
    </niobject>

    <!-- Skyrim specific havok block -->
    <niobject name="bhkCompressedMeshShape" inherit="bhkShape">
        Compressed collision mesh.
        <field name="Target" type="Ptr" template="NiAVObject">Points to root node?</field>
        <field name="User Data" type="uint">Unknown.</field>
        <field name="Radius" type="float" default="0.005">A shell that is added around the shape.</field>
        <field name="Unknown Float 1" type="float">Unknown.</field>
        <field name="Scale" type="Vector4" default="1.0, 1.0, 1.0, 0.0">Scale</field>
        <field name="Radius Copy" type="float" default="0.005">A shell that is added around the shape.</field>
        <field name="Scale Copy" type="Vector4" default="1.0, 1.0, 1.0, 0.0">Scale</field>
        <field name="Data" type="Ref" template="bhkCompressedMeshShapeData">The collision mesh data.</field>
    </niobject>

    <enum name="hkWeldingType" storage="byte" prefix="WT">
        hkpWeldingUtility::WeldingType
        <option value="0" name="ANTICLOCKWISE" />
        <!--<option value="4" name="CLOCKWISE" />-->
        <!--<option value="5" name="TWO_SIDED" />-->
        <!--<option value="6" name="NONE" />-->
    </enum>

    <enum name="bhkCMSMatType" storage="byte" prefix="CMS">
        hkpCompressedMeshShape::MaterialType
        <option value="1" name="SINGLE_VALUE_PER_CHUNK">Chunk builder makes sure that only chunks with the same material are created.</option>
        <!--<option value="2" name="ONE_BYTE_PER_TRIANGLE" />-->
        <!--<option value="3" name="TWO_BYTES_PER_TRIANGLE" />-->
        <!--<option value="4" name="FOUR_BYTES_PER_TRIANGLE" />-->
    </enum>

    <niobject name="bhkCompressedMeshShapeData" inherit="bhkRefObject">
         A compressed mesh shape for collision in Skyrim.
		<field name="Bits Per Index" type="uint">Number of bits in the shape-key reserved for a triangle index</field>
		<field name="Bits Per W Index" type="uint">Number of bits in the shape-key reserved for a triangle index and its winding</field>
		<field name="Mask W Index" type="uint">Mask used to get the triangle index and winding from a shape-key (common: 262143 = 0x3ffff)</field>
		<field name="Mask Index" type="uint">Mask used to get the triangle index from a shape-key (common: 131071 = 0x1ffff)</field>
		<field name="Error" type="float">The radius of the storage mesh shape? Quantization error?</field>
		<field name="Bounds Min" type="Vector4">The minimum boundary of the AABB (the coordinates of the corner with the lowest numerical values)</field>
		<field name="Bounds Max" type="Vector4">The maximum boundary of the AABB (the coordinates of the corner with the highest numerical values)</field>
		<field name="Welding Type" type="byte" />
		<field name="Material Type" type="byte" />
		<field name="Num Materials 32" type="uint" />
		<field name="Materials 32" type="uint" arr1="Num Materials 32">Does not appear to be used.</field>
		<field name="Num Materials 16" type="uint" />
		<field name="Materials 16" type="uint" arr1="Num Materials 16">Does not appear to be used.</field>
		<field name="Num Materials 8" type="uint" />
		<field name="Materials 8" type="uint" arr1="Num Materials 8">Does not appear to be used.</field>
		<field name="Num Materials" type="uint">Number of chunk materials</field>
		<field name="Chunk Materials" type="bhkCMSDMaterial" arr1="Num Materials">Table (array) with sets of materials. Chunks refers to this table by index.</field>
		<field name="Num Named Materials" type="uint" />
		<field name="Num Transforms" type="uint">Number of chunk transformations</field>
        <field name="Chunk Transforms" type="bhkCMSDTransform" arr1="Num Transforms">Table (array) with sets of transformations. Chunks refers to this table by index.</field>
		<field name="Num Big Verts" type="uint" />
		<field name="Big Verts" type="Vector4" arr1="Num Big Verts">Compressed Vertices?</field>
        <field name="Num Big Tris" type="uint" />
        <field name="Big Tris" type="bhkCMSDBigTris" arr1="Num Big Tris" />
        <field name="Num Chunks" type="uint" />
        <field name="Chunks" type="bhkCMSDChunk" arr1="Num Chunks" />
        <field name="Num Convex Piece A" type="uint">Does not appear to be used. Needs array.</field>
	</niobject>
	
    <!-- Skyrim specific blocks -->
    <niobject name="BSInvMarker" abstract="0" inherit="NiExtraData">
    Orientation marker for Skyrim's inventory view.
        How to show the nif in the player's inventory.
        Typically attached to the root node of the nif tree.
        If not present, then Skyrim will still show the nif in inventory,
        using the default values.
        Name should be 'INV' (without the quotes).
        For rotations, a short of "4712" appears as "4.712" but "959" appears as "0.959"  meshes\weapons\daedric\daedricbowskinned.nif
        <field name="Rotation X" type="ushort" default="4712"></field>
        <field name="Rotation Y" type="ushort" default="6283"></field>
        <field name="Rotation Z" type="ushort" default="0"></field>
        <field name="Zoom" type="float" default="1.0">Zoom factor.</field>
    </niobject>

	<niobject name="BSBoneLODExtraData" inherit="NiExtraData">
    Unknown
		<field name="BoneLOD Count" type="uint">Number of bone entries</field>
        <field name="BoneLOD Info" type="BoneLOD" arr1="BoneLOD Count">Bone Entry</field>
	</niobject>
	
	<niobject name="BSBehaviorGraphExtraData" inherit="NiExtraData">
    Links a nif with a Havok Behavior .hkx animation file
		<field name="Behaviour Graph File" type="string">Name of the hkx file.</field>
		<field name="Controls Base Skeleton" type="bool">Unknown, has to do with blending appended bones onto an actor.</field>
	</niobject>

	<niobject name="BSLagBoneController" inherit="NiTimeController">
    A controller that trails a bone behind an actor.
		<field name="Linear Velocity" type="float">How long it takes to rotate about an actor back to rest position.</field>
		<field name="Linear Rotation" type="float">How the bone lags rotation</field>
		<field name="Maximum Distance" type="float">How far bone will tail an actor.</field>
	</niobject>

	<niobject name="BSLODTriShape" inherit="NiTriBasedGeom">
		A variation on NiTriShape, for visibility control over vertex groups.
		<field name="LOD0 Size" type="uint" />
		<field name="LOD1 Size" type="uint" />
		<field name="LOD2 Size" type="uint" />
	</niobject>

	<niobject name="BSFurnitureMarkerNode" inherit="BSFurnitureMarker">
        Furniture Marker for actors
    </niobject>
	
    <niobject name="BSLeafAnimNode" inherit="NiNode">
        Unknown, related to trees.
    </niobject>
    
    <niobject name="BSTreeNode" inherit="NiNode">
        Node for handling Trees, Switches branch configurations for variation?
        <field name="Num Bones 1" type="uint" />
        <field name="Bones 1" type="Ref" arr1="Num Bones 1" template="NiNode">Unknown</field>
        <field name="Num Bones 2" type="uint" />
        <field name="Bones" type="Ref" arr1="Num Bones 2" template="NiNode">Unknown</field>
    </niobject>
    
    
    <!-- Fallout 4 Geometry -->
    
    <niobject name="BSTriShape" abstract="0" inherit="NiAVObject">
        Fallout 4 Tri Shape
        <field name="Bounding Sphere" type="NiBound" />
        <field name="Skin" type="Ref" template="NiObject" />
        <field name="Shader Property" type="Ref" template="BSShaderProperty" />
        <field name="Alpha Property" type="Ref" template="NiAlphaProperty" />
        <field name="Vertex Desc" type="BSVertexDesc" />
        <field name="Num Triangles" type="uint" userver2="130" />
        <field name="Num Triangles" type="ushort" vercond="User Version 2 &lt; 130" />
        <field name="Num Vertices" type="ushort" />
        <field name="Data Size" type="uint" />
        <field name="Vertex Data" type="BSVertexData" arr1="Num Vertices" arg="Vertex Desc\Vertex Attributes" cond="Data Size &gt; 0" userver2="130" />
        <field name="Vertex Data" type="BSVertexDataSSE" arr1="Num Vertices" arg="Vertex Desc\Vertex Attributes" cond="Data Size &gt; 0" userver2="100" />
        <field name="Triangles" type="Triangle" arr1="Num Triangles" cond="Data Size &gt; 0" />
        <field name="Particle Data Size" type="uint" userver2="100" />
        <field name="Vertices" type="Vector3" arr1="Num Vertices" cond="Particle Data Size &gt; 0" userver2="100" />
        <field name="Triangles Copy" type="Triangle" arr1="Num Triangles" cond="Particle Data Size &gt; 0" userver2="100" />
    </niobject>

    <niobject name="BSMeshLODTriShape" inherit="BSTriShape">
        Fallout 4 LOD Tri Shape
        <field name="LOD0 Size" type="uint" />
        <field name="LOD1 Size" type="uint" />
        <field name="LOD2 Size" type="uint" />
    </niobject>
    
    <compound name="BSGeometryPerSegmentSharedData">
        <field name="User Index" type="uint">If Bone ID is 0xffffffff, this value refers to the Segment at the listed index. Otherwise this is the "Biped Object", which is like the body part types in Skyrim and earlier.</field>
        <field name="Bone ID" type="uint">A hash of the bone name string.</field>
        <field name="Num Cut Offsets" type="uint">Maximum of 8.</field>
        <field name="Cut Offsets" type="float" arr1="Num Cut Offsets" />
    </compound>

    <compound name="BSGeometrySegmentSharedData">
        <field name="Num Segments" type="uint" />
        <field name="Total Segments" type="uint" />
        <field name="Segment Starts" type="uint" arr1="Num Segments" />
        <field name="Per Segment Data" type="BSGeometryPerSegmentSharedData" arr1="Total Segments" />
        <!-- TODO: Actual ShortString type (current "ShortString" is actually a byte) -->
        <field name="SSF Length" type="ushort" />
        <field name="SSF File" type="byte" arr1="SSF Length" />
    </compound>

    <niobject name="BSSubIndexTriShape" inherit="BSTriShape">
        Fallout 4 Sub-Index Tri Shape
		<field name="Num Primitives" type="uint" userver2="130" cond="Data Size &gt; 0" />
		<field name="Num Segments" type="uint" userver2="130" cond="Data Size &gt; 0" />
		<field name="Total Segments" type="uint" userver2="130" cond="Data Size &gt; 0" />
		<field name="Segment" type="BSGeometrySegmentData" userver2="130" arr1="Num Segments" cond="Data Size &gt; 0" />
		<field name="Segment Data" type="BSGeometrySegmentSharedData" userver2="130" cond="(Num Segments &lt; Total Segments) &amp;&amp; (Data Size &gt; 0)" />
		<field name="Num Segments" type="uint" userver2="100" />
		<field name="Segment" type="BSGeometrySegmentData" userver2="100" arr1="Num Segments" />
    </niobject>
    
    <!-- Fallout 4 Physics -->

    <niobject name="bhkSystem" abstract="1" inherit="NiObject">
        Fallout 4 Physics System
    </niobject>
    
    <niobject name="bhkNPCollisionObject" inherit="NiCollisionObject">
        Fallout 4 Collision Object
        <field name="Flags" type="ushort">
            Due to inaccurate reporting in the CK the Reset and Sync On Update positions are a guess.
            Bits: 0=Reset, 2=Notify, 3=SetLocal, 7=SyncOnUpdate, 10=AnimTargeted
        </field>
        <field name="Data" type="Ref" template="bhkSystem" />
        <field name="Body ID" type="uint" />
    </niobject>
    
    <niobject name="bhkPhysicsSystem" inherit="bhkSystem">
        Fallout 4 Collision System
        <field name="Binary Data" type="ByteArray" />
    </niobject>

    <niobject name="bhkRagdollSystem" inherit="bhkSystem">
        Fallout 4 Ragdoll System
        <field name="Binary Data" type="ByteArray" />
    </niobject>

    <niobject name="BSExtraData" inherit="NiExtraData">
        Fallout 4 Extra Data
    </niobject>

    <niobject name="BSClothExtraData" inherit="BSExtraData">
        Fallout 4 Cloth data
        <field name="Binary Data" type="ByteArray" />
    </niobject>
    
    <!-- Fallout 4 Skeleton -->

    <compound name="BSSkinBoneTrans">
        Fallout 4 Bone Transform
        <field name="Bounding Sphere" type="NiBound" />
        <field name="Rotation" type="Matrix33" />
        <field name="Translation" type="Vector3" />
        <field name="Scale" type="float" />
    </compound>

    <niobject name="BSSkin::Instance" inherit="NiObject">
        Fallout 4 Skin Instance
        <field name="Skeleton Root" type="Ptr" template="NiAVObject" />
        <field name="Data" type="Ref" template="BSSkin::BoneData" />
        <field name="Num Bones" type="uint" />
        <field name="Bones" type="Ptr" template="NiNode" arr1="Num Bones" />
        <field name="Num Unknown" type="uint" />
        <field name="Unknown" type="Vector3" arr1="Num Unknown" />
    </niobject>

    <niobject name="BSSkin::BoneData" inherit="NiObject">
        Fallout 4 Bone Data
        <field name="Num Bones" type="uint" />
        <field name="Bone List" type="BSSkinBoneTrans" arr1="Num Bones" />
    </niobject>

    <niobject name="BSPositionData" inherit="NiExtraData">
        Fallout 4 Positional Data
        <field name="Num Data" type="uint" />
        <field name="Data" type="hfloat" arr1="Num Data" />
    </niobject>

    <compound name="BSConnectPoint">
        <field name="Parent" type="SizedString" default="WorkshopConnectPoints" />
        <field name="Name" type="SizedString" />
        <field name="Rotation" type="Quaternion" />
        <field name="Translation" type="Vector3" />
        <field name="Scale" type="float" default="1.0" />
    </compound>

    <niobject name="BSConnectPoint::Parents" inherit="NiExtraData">
        Fallout 4 Item Slot Parent
        <field name="Num Connect Points" type="uint" />
        <field name="Connect Points" type="BSConnectPoint" arr1="Num Connect Points" />
    </niobject>

    <niobject name="BSConnectPoint::Children" inherit="NiExtraData">
        Fallout 4 Item Slot Child
        <field name="Skinned" type="bool" />
        <field name="Num Points" type="int" />
        <field name="Name" type="SizedString" arr1="Num Points" />
    </niobject>
    
    <niobject name="BSEyeCenterExtraData" inherit="NiExtraData">
        Fallout 4 Eye Center Data
        <field name="Num Data" type="int" />
        <field name="Data" type="float" arr1="Num Data" />
    </niobject>
	
    <compound name="BSPackedGeomDataCombined">
        <field name="Grayscale to Palette Scale" type="float" />
        <field name="Transform" type="NiTransform" />
        <field name="Bounding Sphere" type="NiBound" />
    </compound>

    <compound name="BSPackedGeomData">
        <field name="Num Verts" type="uint" />
        <field name="LOD Levels" type="uint" />
        <field name="Tri Count LOD0" type="uint" />
        <field name="Tri Offset LOD0" type="uint" />
        <field name="Tri Count LOD1" type="uint" />
        <field name="Tri Offset LOD1" type="uint" />
        <field name="Tri Count LOD2" type="uint" />
        <field name="Tri Offset LOD2" type="uint" />
        <field name="Num Combined" type="uint" />
        <field name="Combined" type="BSPackedGeomDataCombined" arr1="Num Combined" />
        <field name="Vertex Desc" type="BSVertexDesc" />
        <field name="Vertex Data" type="BSVertexData" arr1="Num Verts" arg="Vertex Desc\Vertex Attributes" cond="!BSPackedCombinedSharedGeomDataExtra" />
        <field name="Triangles" type="Triangle" arr1="Tri Count LOD0 + Tri Count LOD1 + Tri Count LOD2" cond="!BSPackedCombinedSharedGeomDataExtra" />
    </compound>
	
    <compound name="BSPackedGeomObject">
        This appears to be a 64-bit hash but nif.xml does not have a 64-bit type.
        <field name="Shape ID 1" type="uint" />
        <field name="Shape ID 2" type="uint" />
    </compound>

    <niobject name="BSPackedCombinedGeomDataExtra" inherit="NiExtraData">
        Fallout 4 Packed Combined Geometry Data.
        Geometry is baked into the file and given a list of transforms to position each copy.
        <field name="Vertex Desc" type="BSVertexDesc" />
        <field name="Num Vertices" type="uint" />
        <field name="Num Triangles" type="uint" />
        <field name="Unknown Flags 1" type="uint" />
        <field name="Unknown Flags 2" type="uint" />
        <field name="Num Data" type="uint" />
        <field name="Object" type="BSPackedGeomObject" arr1="Num Data" cond="BSPackedCombinedSharedGeomDataExtra" />
        <field name="Object Data" type="BSPackedGeomData" arr1="Num Data" />
    </niobject>

    <niobject name="BSPackedCombinedSharedGeomDataExtra" inherit="BSPackedCombinedGeomDataExtra">
        Fallout 4 Packed Combined Shared Geometry Data.
        Geometry is NOT baked into the file. It is instead a reference to the shape via a Shape ID (currently undecoded)
        which loads the geometry via the STAT form for the NIF.
        <field name="Vertex Desc" type="BSVertexDesc" />
        <field name="Num Vertices" type="uint" />
        <field name="Num Triangles" type="uint" />
        <field name="Unknown Flags 1" type="uint" />
        <field name="Unknown Flags 2" type="uint" />
        <field name="Num Data" type="uint" />
        <field name="Object" type="BSPackedGeomObject" arr1="Num Data" />
        <field name="Object Data" type="BSPackedSharedGeomData" arr1="Num Data" />
    </niobject>

    <!-- Fallout 4 Animation -->
    
    <niobject name="NiLightRadiusController" inherit="NiFloatInterpController"><!-- module="BSAnimation" versions="#FO4# #F76#"-->
    
    </niobject>
	
	<!-- Skyrim SE --> 

	<niobject name="BSDynamicTriShape" inherit="BSTriShape">
		<field name="Vertex Data Size" type="uint" />
		<field name="Vertices" type="Vector4" arr1="Num Vertices" cond="Vertex Data Size &gt; 0" />
	</niobject>
	
	<niobject name="BSDistantObjectLargeRefExtraData" abstract="0" inherit="NiExtraData">
        Large ref flag.
		<field name="Large Ref" type="bool" />
	</niobject>
	
    <niobject name="BSDistantObjectExtraData" inherit="NiExtraData"><!--module="BSMain" versions="#F76#"-->
        Distant Object flags.
        <field name="Distant Object Flags" type="uint" />
    </niobject>

    <compound name="BSDistantObjectInstance"><!--module="BSMain" versions="#F76#"-->
        <field name="Unknown Bytes 1" type="byte" arr1="12" />
        <field name="Num Unknown 1" type="uint" />
        <field name="Unknown Ints 1" type="uint" arr1="3 #MUL# Num Unknown 1" />
        <field name="Num Unknown 2" type="uint" />
        <field name="Unknown Bytes 2" type="byte" binary="true" arr1="64 #MUL# Num Unknown 2" />
    </compound>

    <compound name="BSDistantObjectTextureArray"><!--module="BSMain" versions="#F76#"-->
        <field name="Unknown Byte" type="byte" default="1" />
        <field name="Num Texture Arrays" type="uint" />
        <field name="Texture Arrays" type="BSTextureArray" arr1="Num Texture Arrays" />
    </compound>

    <niobject name="BSDistantObjectInstancedNode" inherit="BSMultiBoundNode"><!--module="BSMain" versions="#F76#"-->
        <field name="Num Instances" type="uint" />
        <field name="Instances" type="BSDistantObjectInstance" arr1="Num Instances" />
        <field name="Texture Arrays" type="BSDistantObjectTextureArray" arr1="3" />
    </niobject>
</niftoolsxml>
